

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Jun 06 17:35:02 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    21                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.20
    32                           ; Generated 12/02/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F886 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  0089                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  008F                     	;# 
   108  0090                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0094                     	;# 
   115  0095                     	;# 
   116  0096                     	;# 
   117  0097                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009A                     	;# 
   121  009B                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  0105                     	;# 
   127  0107                     	;# 
   128  0108                     	;# 
   129  0109                     	;# 
   130  010C                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  010F                     	;# 
   135  0185                     	;# 
   136  0187                     	;# 
   137  0188                     	;# 
   138  0189                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  0000                     	;# 
   142  0001                     	;# 
   143  0002                     	;# 
   144  0003                     	;# 
   145  0004                     	;# 
   146  0005                     	;# 
   147  0006                     	;# 
   148  0007                     	;# 
   149  0009                     	;# 
   150  000A                     	;# 
   151  000B                     	;# 
   152  000C                     	;# 
   153  000D                     	;# 
   154  000E                     	;# 
   155  000E                     	;# 
   156  000F                     	;# 
   157  0010                     	;# 
   158  0011                     	;# 
   159  0012                     	;# 
   160  0013                     	;# 
   161  0014                     	;# 
   162  0015                     	;# 
   163  0015                     	;# 
   164  0016                     	;# 
   165  0017                     	;# 
   166  0018                     	;# 
   167  0019                     	;# 
   168  001A                     	;# 
   169  001B                     	;# 
   170  001B                     	;# 
   171  001C                     	;# 
   172  001D                     	;# 
   173  001E                     	;# 
   174  001F                     	;# 
   175  0081                     	;# 
   176  0085                     	;# 
   177  0086                     	;# 
   178  0087                     	;# 
   179  0089                     	;# 
   180  008C                     	;# 
   181  008D                     	;# 
   182  008E                     	;# 
   183  008F                     	;# 
   184  0090                     	;# 
   185  0091                     	;# 
   186  0092                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0093                     	;# 
   190  0094                     	;# 
   191  0095                     	;# 
   192  0096                     	;# 
   193  0097                     	;# 
   194  0098                     	;# 
   195  0099                     	;# 
   196  009A                     	;# 
   197  009B                     	;# 
   198  009C                     	;# 
   199  009D                     	;# 
   200  009E                     	;# 
   201  009F                     	;# 
   202  0105                     	;# 
   203  0107                     	;# 
   204  0108                     	;# 
   205  0109                     	;# 
   206  010C                     	;# 
   207  010C                     	;# 
   208  010D                     	;# 
   209  010E                     	;# 
   210  010F                     	;# 
   211  0185                     	;# 
   212  0187                     	;# 
   213  0188                     	;# 
   214  0189                     	;# 
   215  018C                     	;# 
   216  018D                     	;# 
   217  0000                     	;# 
   218  0001                     	;# 
   219  0002                     	;# 
   220  0003                     	;# 
   221  0004                     	;# 
   222  0005                     	;# 
   223  0006                     	;# 
   224  0007                     	;# 
   225  0009                     	;# 
   226  000A                     	;# 
   227  000B                     	;# 
   228  000C                     	;# 
   229  000D                     	;# 
   230  000E                     	;# 
   231  000E                     	;# 
   232  000F                     	;# 
   233  0010                     	;# 
   234  0011                     	;# 
   235  0012                     	;# 
   236  0013                     	;# 
   237  0014                     	;# 
   238  0015                     	;# 
   239  0015                     	;# 
   240  0016                     	;# 
   241  0017                     	;# 
   242  0018                     	;# 
   243  0019                     	;# 
   244  001A                     	;# 
   245  001B                     	;# 
   246  001B                     	;# 
   247  001C                     	;# 
   248  001D                     	;# 
   249  001E                     	;# 
   250  001F                     	;# 
   251  0081                     	;# 
   252  0085                     	;# 
   253  0086                     	;# 
   254  0087                     	;# 
   255  0089                     	;# 
   256  008C                     	;# 
   257  008D                     	;# 
   258  008E                     	;# 
   259  008F                     	;# 
   260  0090                     	;# 
   261  0091                     	;# 
   262  0092                     	;# 
   263  0093                     	;# 
   264  0093                     	;# 
   265  0093                     	;# 
   266  0094                     	;# 
   267  0095                     	;# 
   268  0096                     	;# 
   269  0097                     	;# 
   270  0098                     	;# 
   271  0099                     	;# 
   272  009A                     	;# 
   273  009B                     	;# 
   274  009C                     	;# 
   275  009D                     	;# 
   276  009E                     	;# 
   277  009F                     	;# 
   278  0105                     	;# 
   279  0107                     	;# 
   280  0108                     	;# 
   281  0109                     	;# 
   282  010C                     	;# 
   283  010C                     	;# 
   284  010D                     	;# 
   285  010E                     	;# 
   286  010F                     	;# 
   287  0185                     	;# 
   288  0187                     	;# 
   289  0188                     	;# 
   290  0189                     	;# 
   291  018C                     	;# 
   292  018D                     	;# 
   293  0000                     	;# 
   294  0001                     	;# 
   295  0002                     	;# 
   296  0003                     	;# 
   297  0004                     	;# 
   298  0005                     	;# 
   299  0006                     	;# 
   300  0007                     	;# 
   301  0009                     	;# 
   302  000A                     	;# 
   303  000B                     	;# 
   304  000C                     	;# 
   305  000D                     	;# 
   306  000E                     	;# 
   307  000E                     	;# 
   308  000F                     	;# 
   309  0010                     	;# 
   310  0011                     	;# 
   311  0012                     	;# 
   312  0013                     	;# 
   313  0014                     	;# 
   314  0015                     	;# 
   315  0015                     	;# 
   316  0016                     	;# 
   317  0017                     	;# 
   318  0018                     	;# 
   319  0019                     	;# 
   320  001A                     	;# 
   321  001B                     	;# 
   322  001B                     	;# 
   323  001C                     	;# 
   324  001D                     	;# 
   325  001E                     	;# 
   326  001F                     	;# 
   327  0081                     	;# 
   328  0085                     	;# 
   329  0086                     	;# 
   330  0087                     	;# 
   331  0089                     	;# 
   332  008C                     	;# 
   333  008D                     	;# 
   334  008E                     	;# 
   335  008F                     	;# 
   336  0090                     	;# 
   337  0091                     	;# 
   338  0092                     	;# 
   339  0093                     	;# 
   340  0093                     	;# 
   341  0093                     	;# 
   342  0094                     	;# 
   343  0095                     	;# 
   344  0096                     	;# 
   345  0097                     	;# 
   346  0098                     	;# 
   347  0099                     	;# 
   348  009A                     	;# 
   349  009B                     	;# 
   350  009C                     	;# 
   351  009D                     	;# 
   352  009E                     	;# 
   353  009F                     	;# 
   354  0105                     	;# 
   355  0107                     	;# 
   356  0108                     	;# 
   357  0109                     	;# 
   358  010C                     	;# 
   359  010C                     	;# 
   360  010D                     	;# 
   361  010E                     	;# 
   362  010F                     	;# 
   363  0185                     	;# 
   364  0187                     	;# 
   365  0188                     	;# 
   366  0189                     	;# 
   367  018C                     	;# 
   368  018D                     	;# 
   369  0000                     	;# 
   370  0001                     	;# 
   371  0002                     	;# 
   372  0003                     	;# 
   373  0004                     	;# 
   374  0005                     	;# 
   375  0006                     	;# 
   376  0007                     	;# 
   377  0009                     	;# 
   378  000A                     	;# 
   379  000B                     	;# 
   380  000C                     	;# 
   381  000D                     	;# 
   382  000E                     	;# 
   383  000E                     	;# 
   384  000F                     	;# 
   385  0010                     	;# 
   386  0011                     	;# 
   387  0012                     	;# 
   388  0013                     	;# 
   389  0014                     	;# 
   390  0015                     	;# 
   391  0015                     	;# 
   392  0016                     	;# 
   393  0017                     	;# 
   394  0018                     	;# 
   395  0019                     	;# 
   396  001A                     	;# 
   397  001B                     	;# 
   398  001B                     	;# 
   399  001C                     	;# 
   400  001D                     	;# 
   401  001E                     	;# 
   402  001F                     	;# 
   403  0081                     	;# 
   404  0085                     	;# 
   405  0086                     	;# 
   406  0087                     	;# 
   407  0089                     	;# 
   408  008C                     	;# 
   409  008D                     	;# 
   410  008E                     	;# 
   411  008F                     	;# 
   412  0090                     	;# 
   413  0091                     	;# 
   414  0092                     	;# 
   415  0093                     	;# 
   416  0093                     	;# 
   417  0093                     	;# 
   418  0094                     	;# 
   419  0095                     	;# 
   420  0096                     	;# 
   421  0097                     	;# 
   422  0098                     	;# 
   423  0099                     	;# 
   424  009A                     	;# 
   425  009B                     	;# 
   426  009C                     	;# 
   427  009D                     	;# 
   428  009E                     	;# 
   429  009F                     	;# 
   430  0105                     	;# 
   431  0107                     	;# 
   432  0108                     	;# 
   433  0109                     	;# 
   434  010C                     	;# 
   435  010C                     	;# 
   436  010D                     	;# 
   437  010E                     	;# 
   438  010F                     	;# 
   439  0185                     	;# 
   440  0187                     	;# 
   441  0188                     	;# 
   442  0189                     	;# 
   443  018C                     	;# 
   444  018D                     	;# 
   445  0000                     	;# 
   446  0001                     	;# 
   447  0002                     	;# 
   448  0003                     	;# 
   449  0004                     	;# 
   450  0005                     	;# 
   451  0006                     	;# 
   452  0007                     	;# 
   453  0009                     	;# 
   454  000A                     	;# 
   455  000B                     	;# 
   456  000C                     	;# 
   457  000D                     	;# 
   458  000E                     	;# 
   459  000E                     	;# 
   460  000F                     	;# 
   461  0010                     	;# 
   462  0011                     	;# 
   463  0012                     	;# 
   464  0013                     	;# 
   465  0014                     	;# 
   466  0015                     	;# 
   467  0015                     	;# 
   468  0016                     	;# 
   469  0017                     	;# 
   470  0018                     	;# 
   471  0019                     	;# 
   472  001A                     	;# 
   473  001B                     	;# 
   474  001B                     	;# 
   475  001C                     	;# 
   476  001D                     	;# 
   477  001E                     	;# 
   478  001F                     	;# 
   479  0081                     	;# 
   480  0085                     	;# 
   481  0086                     	;# 
   482  0087                     	;# 
   483  0089                     	;# 
   484  008C                     	;# 
   485  008D                     	;# 
   486  008E                     	;# 
   487  008F                     	;# 
   488  0090                     	;# 
   489  0091                     	;# 
   490  0092                     	;# 
   491  0093                     	;# 
   492  0093                     	;# 
   493  0093                     	;# 
   494  0094                     	;# 
   495  0095                     	;# 
   496  0096                     	;# 
   497  0097                     	;# 
   498  0098                     	;# 
   499  0099                     	;# 
   500  009A                     	;# 
   501  009B                     	;# 
   502  009C                     	;# 
   503  009D                     	;# 
   504  009E                     	;# 
   505  009F                     	;# 
   506  0105                     	;# 
   507  0107                     	;# 
   508  0108                     	;# 
   509  0109                     	;# 
   510  010C                     	;# 
   511  010C                     	;# 
   512  010D                     	;# 
   513  010E                     	;# 
   514  010F                     	;# 
   515  0185                     	;# 
   516  0187                     	;# 
   517  0188                     	;# 
   518  0189                     	;# 
   519  018C                     	;# 
   520  018D                     	;# 
   521                           
   522                           	psect	idataBANK0
   523  0467                     __pidataBANK0:
   524                           
   525                           ;initializer for _ANChannels
   526  0467  340C               	retlw	12
   527  0468  340A               	retlw	10
   528  0469  3408               	retlw	8
   529  046A  3409               	retlw	9
   530  046B  340B               	retlw	11
   531  046C  340D               	retlw	13
   532  046D  3401               	retlw	1
   533  046E  3400               	retlw	0
   534                           
   535                           	psect	idataBANK1
   536  048E                     __pidataBANK1:
   537                           
   538                           ;initializer for _mensaje
   539  048E  3450               	retlw	80
   540  048F  3472               	retlw	114
   541  0490  346F               	retlw	111
   542  0491  3467               	retlw	103
   543  0492  3472               	retlw	114
   544  0493  3461               	retlw	97
   545  0494  346D               	retlw	109
   546  0495  3461               	retlw	97
   547  0496  3420               	retlw	32
   548  0497  3449               	retlw	73
   549  0498  346E               	retlw	110
   550  0499  3469               	retlw	105
   551  049A  3463               	retlw	99
   552  049B  3469               	retlw	105
   553  049C  3461               	retlw	97
   554  049D  3464               	retlw	100
   555  049E  346F               	retlw	111
   556  049F  340A               	retlw	10
   557  04A0  3400               	retlw	0
   558                           
   559                           	psect	strings
   560  0003                     __pstrings:
   561  0003                     stringtab:
   562  0003                     __stringtab:
   563  0003                     stringcode:	
   564                           ;	String table - string pointers are 1 byte each
   565                           
   566  0003                     stringdir:
   567  0003  3000               	movlw	high stringdir
   568  0004  008A               	movwf	10
   569  0005  0804               	movf	4,w
   570  0006  0A84               	incf	4,f
   571  0007  0782               	addwf	2,f
   572  0008                     __stringbase:
   573  0008  3400               	retlw	0
   574  0009                     __end_of__stringtab:
   575  0009                     _dpowers:
   576  0009  3401               	retlw	1
   577  000A  3400               	retlw	0
   578  000B  340A               	retlw	10
   579  000C  3400               	retlw	0
   580  000D  3464               	retlw	100
   581  000E  3400               	retlw	0
   582  000F  34E8               	retlw	232
   583  0010  3403               	retlw	3
   584  0011  3410               	retlw	16
   585  0012  3427               	retlw	39
   586  0013                     __end_of_dpowers:
   587  000E                     _TMR1	set	14
   588  0019                     _TXREG	set	25
   589  001E                     _ADRESH	set	30
   590  001F                     _ADCON0bits	set	31
   591  001F                     _ADCON0	set	31
   592  003A                     _RC2	set	58
   593  0080                     _TMR1ON	set	128
   594  0060                     _TMR1IF	set	96
   595  0085                     _T1CKPS1	set	133
   596  0084                     _T1CKPS0	set	132
   597  0081                     _TMR1CS	set	129
   598  00C7                     _SPEN	set	199
   599  005F                     _GIE	set	95
   600  005E                     _PEIE	set	94
   601  0066                     _ADIF	set	102
   602  00F9                     _GO_DONE	set	249
   603  009A                     _SPBRGH	set	154
   604  0099                     _SPBRG	set	153
   605  009E                     _ADRESL	set	158
   606  009F                     _ADCON1	set	159
   607  0460                     _TMR1IE	set	1120
   608  04C1                     _TRMT	set	1217
   609  04C5                     _TXEN	set	1221
   610  043E                     _TRISC6	set	1086
   611  04C4                     _SYNC	set	1220
   612  04C2                     _BRGH	set	1218
   613  0466                     _ADIE	set	1126
   614  0C3B                     _BRG16	set	3131
   615  0013                     STR_1:
   616  0013  3425               	retlw	37	;'%'
   617  0014  3464               	retlw	100	;'d'
   618  0015  340A               	retlw	10
   619  0016  3400               	retlw	0
   620                           
   621                           	psect	cinit
   622  07D9                     start_initialization:	
   623                           ; #config settings
   624                           
   625  07D9                     __initialization:
   626                           
   627                           ; Initialize objects allocated to BANK1
   628  07D9  1383               	bcf	3,7	;select IRP bank0
   629  07DA  30B3               	movlw	low (__pdataBANK1+19)
   630  07DB  00FD               	movwf	btemp+-1
   631  07DC  3004               	movlw	high __pidataBANK1
   632  07DD  00FE               	movwf	btemp
   633  07DE  308E               	movlw	low __pidataBANK1
   634  07DF  00FF               	movwf	btemp+1
   635  07E0  30A0               	movlw	low __pdataBANK1
   636  07E1  0084               	movwf	4
   637  07E2  120A  118A  247F  120A  118A  	fcall	init_ram0
   638                           
   639                           ; Initialize objects allocated to BANK0
   640  07E7  305F               	movlw	low (__pdataBANK0+8)
   641  07E8  00FD               	movwf	btemp+-1
   642  07E9  3004               	movlw	high __pidataBANK0
   643  07EA  00FE               	movwf	btemp
   644  07EB  3067               	movlw	low __pidataBANK0
   645  07EC  00FF               	movwf	btemp+1
   646  07ED  3057               	movlw	low __pdataBANK0
   647  07EE  0084               	movwf	4
   648  07EF  120A  118A  247F  120A  118A  	fcall	init_ram0
   649                           
   650                           ; Clear objects allocated to BANK0
   651  07F4  3041               	movlw	low __pbssBANK0
   652  07F5  0084               	movwf	4
   653  07F6  3057               	movlw	low (__pbssBANK0+22)
   654  07F7  120A  118A  245F  120A  118A  	fcall	clear_ram0
   655  07FC                     end_of_initialization:	
   656                           ;End of C runtime variable initialization code
   657                           
   658  07FC                     __end_of__initialization:
   659  07FC  0183               	clrf	3
   660  07FD  120A  118A  2DF2   	ljmp	_main	;jump to C main() function
   661                           
   662                           	psect	bssBANK0
   663  0041                     __pbssBANK0:
   664  0041                     _timer_overflow_counter:
   665  0041                     	ds	2
   666  0043                     _timer_overflows:
   667  0043                     	ds	2
   668  0045                     _AN0_RES:
   669  0045                     	ds	2
   670  0047                     _ANRead:
   671  0047                     	ds	16
   672                           
   673                           	psect	dataBANK0
   674  0057                     __pdataBANK0:
   675  0057                     _ANChannels:
   676  0057                     	ds	8
   677                           
   678                           	psect	dataBANK1
   679  00A0                     __pdataBANK1:
   680  00A0                     _mensaje:
   681  00A0                     	ds	19
   682                           
   683                           	psect	inittext
   684  047B                     init_fetch0:	
   685                           ;	Called with low address in FSR and high address in W
   686                           
   687  047B  087E               	movf	btemp,w
   688  047C  008A               	movwf	10
   689  047D  087F               	movf	btemp+1,w
   690  047E  0082               	movwf	2
   691  047F                     init_ram0:	
   692                           ;Called with:
   693                           ;	high address of idata address in btemp 
   694                           ;	low address of idata address in btemp+1 
   695                           ;	low address of data in FSR
   696                           ;	high address + 1 of data in btemp-1
   697                           
   698  047F  120A  118A  247B  120A  118A  	fcall	init_fetch0
   699  0484  0080               	movwf	0
   700  0485  0A84               	incf	4,f
   701  0486  0804               	movf	4,w
   702  0487  067D               	xorwf	btemp+-1,w
   703  0488  1903               	btfsc	3,2
   704  0489  3400               	retlw	0
   705  048A  0AFF               	incf	btemp+1,f
   706  048B  1903               	btfsc	3,2
   707  048C  0AFE               	incf	btemp,f
   708  048D  2C7F               	goto	init_ram0
   709                           
   710                           	psect	clrtext
   711  045F                     clear_ram0:	
   712                           ;	Called with FSR containing the base address, and
   713                           ;	W with the last address+1
   714                           
   715  045F  0064               	clrwdt	;clear the watchdog before getting into this loop
   716  0460                     clrloop0:
   717  0460  0180               	clrf	0	;clear RAM location pointed to by FSR
   718  0461  0A84               	incf	4,f	;increment pointer
   719  0462  0604               	xorwf	4,w	;XOR with final address
   720  0463  1903               	btfsc	3,2	;have we reached the end yet?
   721  0464  3400               	retlw	0	;all done for this memory range, return
   722  0465  0604               	xorwf	4,w	;XOR again to restore value
   723  0466  2C60               	goto	clrloop0	;do the next byte
   724                           
   725                           	psect	cstackCOMMON
   726  0070                     __pcstackCOMMON:
   727  0070                     ?_UART_Write:
   728  0070                     ??_UART_Write:	
   729                           ; 1 bytes @ 0x0
   730                           
   731  0070                     ?_ADC_init_channel:	
   732                           ; 1 bytes @ 0x0
   733                           
   734  0070                     ??_ADC_init_channel:	
   735                           ; 1 bytes @ 0x0
   736                           
   737  0070                     ?_main:	
   738                           ; 1 bytes @ 0x0
   739                           
   740  0070                     ?_strlen:	
   741                           ; 1 bytes @ 0x0
   742                           
   743  0070                     ?___lwdiv:	
   744                           ; 2 bytes @ 0x0
   745                           
   746  0070                     ?___lldiv:	
   747                           ; 2 bytes @ 0x0
   748                           
   749  0070                     UART_Write@data:	
   750                           ; 4 bytes @ 0x0
   751                           
   752  0070                     ___lwdiv@divisor:	
   753                           ; 1 bytes @ 0x0
   754                           
   755  0070                     ___lldiv@divisor:	
   756                           ; 2 bytes @ 0x0
   757                           
   758                           
   759                           ; 4 bytes @ 0x0
   760  0070                     	ds	2
   761  0072                     ??_strlen:
   762  0072                     ADC_init_channel@channel:	
   763                           ; 1 bytes @ 0x2
   764                           
   765  0072                     ___lwdiv@dividend:	
   766                           ; 1 bytes @ 0x2
   767                           
   768                           
   769                           ; 2 bytes @ 0x2
   770  0072                     	ds	1
   771  0073                     ?_ADC_burst:
   772  0073                     ADC_burst@reading:	
   773                           ; 1 bytes @ 0x3
   774                           
   775  0073                     strlen@cp:	
   776                           ; 1 bytes @ 0x3
   777                           
   778                           
   779                           ; 1 bytes @ 0x3
   780  0073                     	ds	1
   781  0074                     ??___lwdiv:
   782  0074                     ADC_burst@numberc:	
   783                           ; 1 bytes @ 0x4
   784                           
   785  0074                     strlen@s:	
   786                           ; 1 bytes @ 0x4
   787                           
   788  0074                     ___lldiv@dividend:	
   789                           ; 1 bytes @ 0x4
   790                           
   791                           
   792                           ; 4 bytes @ 0x4
   793  0074                     	ds	1
   794  0075                     ??_ADC_burst:
   795  0075                     ?_UART_Buffer:	
   796                           ; 1 bytes @ 0x5
   797                           
   798  0075                     UART_Buffer@size:	
   799                           ; 1 bytes @ 0x5
   800                           
   801  0075                     ___lwdiv@quotient:	
   802                           ; 1 bytes @ 0x5
   803                           
   804                           
   805                           ; 2 bytes @ 0x5
   806  0075                     	ds	1
   807  0076                     ??_UART_Buffer:
   808                           
   809                           ; 1 bytes @ 0x6
   810  0076                     	ds	1
   811  0077                     ADC_burst@channels:
   812  0077                     UART_Buffer@count:	
   813                           ; 1 bytes @ 0x7
   814                           
   815  0077                     ___lwdiv@counter:	
   816                           ; 1 bytes @ 0x7
   817                           
   818                           
   819                           ; 1 bytes @ 0x7
   820  0077                     	ds	1
   821  0078                     ??___lldiv:
   822  0078                     ?___lwmod:	
   823                           ; 1 bytes @ 0x8
   824                           
   825  0078                     ADC_burst@n:	
   826                           ; 2 bytes @ 0x8
   827                           
   828  0078                     UART_Buffer@buffer:	
   829                           ; 1 bytes @ 0x8
   830                           
   831  0078                     ___lwmod@divisor:	
   832                           ; 1 bytes @ 0x8
   833                           
   834                           
   835                           ; 2 bytes @ 0x8
   836  0078                     	ds	1
   837  0079                     ___lldiv@quotient:
   838                           
   839                           ; 4 bytes @ 0x9
   840  0079                     	ds	1
   841  007A                     ___lwmod@dividend:
   842                           
   843                           ; 2 bytes @ 0xA
   844  007A                     	ds	2
   845  007C                     ??___lwmod:
   846                           
   847                           ; 1 bytes @ 0xC
   848  007C                     	ds	1
   849  007D                     ___lldiv@counter:
   850  007D                     ___lwmod@counter:	
   851                           ; 1 bytes @ 0xD
   852                           
   853                           
   854                           ; 1 bytes @ 0xD
   855  007D                     	ds	1
   856                           
   857                           	psect	cstackBANK0
   858  0020                     __pcstackBANK0:
   859  0020                     ?_UART_TX_Init:
   860  0020                     ?_sprintf:	
   861                           ; 1 bytes @ 0x0
   862                           
   863  0020                     sprintf@f:	
   864                           ; 2 bytes @ 0x0
   865                           
   866  0020                     UART_TX_Init@baud:	
   867                           ; 1 bytes @ 0x0
   868                           
   869                           
   870                           ; 4 bytes @ 0x0
   871  0020                     	ds	3
   872  0023                     ??_sprintf:
   873                           
   874                           ; 1 bytes @ 0x3
   875  0023                     	ds	1
   876  0024                     ??_UART_TX_Init:
   877                           
   878                           ; 1 bytes @ 0x4
   879  0024                     	ds	2
   880  0026                     sprintf@ap:
   881                           
   882                           ; 1 bytes @ 0x6
   883  0026                     	ds	1
   884  0027                     sprintf@flag:
   885                           
   886                           ; 1 bytes @ 0x7
   887  0027                     	ds	1
   888  0028                     sprintf@prec:
   889  0028                     UART_TX_Init@temp:	
   890                           ; 1 bytes @ 0x8
   891                           
   892                           
   893                           ; 2 bytes @ 0x8
   894  0028                     	ds	1
   895  0029                     sprintf@val:
   896                           
   897                           ; 2 bytes @ 0x9
   898  0029                     	ds	2
   899  002B                     sprintf@sp:
   900                           
   901                           ; 1 bytes @ 0xB
   902  002B                     	ds	1
   903  002C                     sprintf@c:
   904                           
   905                           ; 1 bytes @ 0xC
   906  002C                     	ds	1
   907  002D                     ?_UART_number:
   908  002D                     UART_number@number:	
   909                           ; 1 bytes @ 0xD
   910                           
   911                           
   912                           ; 2 bytes @ 0xD
   913  002D                     	ds	2
   914  002F                     ??_UART_number:
   915                           
   916                           ; 1 bytes @ 0xF
   917  002F                     	ds	1
   918  0030                     UART_number@buffer:
   919                           
   920                           ; 10 bytes @ 0x10
   921  0030                     	ds	10
   922  003A                     ?_ADC_print_burst:
   923  003A                     ADC_print_burst@NumberReadings:	
   924                           ; 1 bytes @ 0x1A
   925                           
   926                           
   927                           ; 1 bytes @ 0x1A
   928  003A                     	ds	1
   929  003B                     ??_ADC_print_burst:
   930                           
   931                           ; 1 bytes @ 0x1B
   932  003B                     	ds	2
   933  003D                     ADC_print_burst@BurstReadings:
   934                           
   935                           ; 1 bytes @ 0x1D
   936  003D                     	ds	1
   937  003E                     ADC_print_burst@n:
   938                           
   939                           ; 1 bytes @ 0x1E
   940  003E                     	ds	1
   941  003F                     ??_main:
   942                           
   943                           ; 1 bytes @ 0x1F
   944  003F                     	ds	2
   945                           
   946                           	psect	maintext
   947  05F2                     __pmaintext:	
   948 ;;
   949 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   950 ;;
   951 ;; *************** function _main *****************
   952 ;; Defined at:
   953 ;;		line 19 in file "SamplingProgram.c"
   954 ;; Parameters:    Size  Location     Type
   955 ;;		None
   956 ;; Auto vars:     Size  Location     Type
   957 ;;		None
   958 ;; Return value:  Size  Location     Type
   959 ;;                  1    wreg      void 
   960 ;; Registers used:
   961 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   962 ;; Tracked objects:
   963 ;;		On entry : B00/0
   964 ;;		On exit  : 0/0
   965 ;;		Unchanged: 0/0
   966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   967 ;;      Params:         0       0       0       0       0
   968 ;;      Locals:         0       0       0       0       0
   969 ;;      Temps:          0       2       0       0       0
   970 ;;      Totals:         0       2       0       0       0
   971 ;;Total ram usage:        2 bytes
   972 ;; Hardware stack levels required when called: 4
   973 ;; This function calls:
   974 ;;		_ADC_burst
   975 ;;		_ADC_print_burst
   976 ;;		_UART_Buffer
   977 ;;		_UART_TX_Init
   978 ;;		_strlen
   979 ;; This function is called by:
   980 ;;		Startup code after reset
   981 ;; This function uses a non-reentrant model
   982 ;;
   983                           
   984                           
   985                           ;psect for function _main
   986  05F2                     _main:
   987  05F2                     l1364:	
   988                           ;incstack = 0
   989                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   990                           
   991                           
   992                           ;SamplingProgram.c: 20:     UART_TX_Init(230400);
   993  05F2  3000               	movlw	0
   994  05F3  1283               	bcf	3,5	;RP0=0, select bank0
   995  05F4  1303               	bcf	3,6	;RP1=0, select bank0
   996  05F5  00A3               	movwf	UART_TX_Init@baud+3
   997  05F6  3003               	movlw	3
   998  05F7  00A2               	movwf	UART_TX_Init@baud+2
   999  05F8  3084               	movlw	132
  1000  05F9  00A1               	movwf	UART_TX_Init@baud+1
  1001  05FA  3000               	movlw	0
  1002  05FB  00A0               	movwf	UART_TX_Init@baud
  1003  05FC  120A  118A  263E  120A  118A  	fcall	_UART_TX_Init
  1004  0601                     l1366:
  1005                           
  1006                           ;SamplingProgram.c: 21:     UART_Buffer(mensaje, strlen(mensaje));
  1007  0601  30A0               	movlw	(low (_mensaje| 0))& (0+255)
  1008  0602  120A  118A  24A1  120A  118A  	fcall	_strlen
  1009  0607  0870               	movf	?_strlen,w
  1010  0608  1283               	bcf	3,5	;RP0=0, select bank0
  1011  0609  1303               	bcf	3,6	;RP1=0, select bank0
  1012  060A  00BF               	movwf	??_main
  1013  060B  083F               	movf	??_main,w
  1014  060C  00F5               	movwf	UART_Buffer@size
  1015  060D  30A0               	movlw	(low (_mensaje| 0))& (0+255)
  1016  060E  120A  118A  24BA  120A  118A  	fcall	_UART_Buffer
  1017  0613                     l1368:
  1018                           
  1019                           ;SamplingProgram.c: 25:     {;SamplingProgram.c: 28:         ADC_burst(ANChannels,ANRead
      +                          ,8);
  1020  0613  3047               	movlw	(low (_ANRead| 0))& (0+255)
  1021  0614  1283               	bcf	3,5	;RP0=0, select bank0
  1022  0615  1303               	bcf	3,6	;RP1=0, select bank0
  1023  0616  00BF               	movwf	??_main
  1024  0617  083F               	movf	??_main,w
  1025  0618  00F3               	movwf	ADC_burst@reading
  1026  0619  3008               	movlw	8
  1027  061A  00C0               	movwf	??_main+1
  1028  061B  0840               	movf	??_main+1,w
  1029  061C  00F4               	movwf	ADC_burst@numberc
  1030  061D  3057               	movlw	(low (_ANChannels| 0))& (0+255)
  1031  061E  120A  118A  2543  120A  118A  	fcall	_ADC_burst
  1032  0623                     l1370:
  1033                           
  1034                           ;SamplingProgram.c: 30:         ADC_print_burst(ANRead,8);
  1035  0623  3008               	movlw	8
  1036  0624  1283               	bcf	3,5	;RP0=0, select bank0
  1037  0625  1303               	bcf	3,6	;RP1=0, select bank0
  1038  0626  00BF               	movwf	??_main
  1039  0627  083F               	movf	??_main,w
  1040  0628  00BA               	movwf	ADC_print_burst@NumberReadings
  1041  0629  3047               	movlw	(low (_ANRead| 0))& (0+255)
  1042  062A  120A  118A  2519  120A  118A  	fcall	_ADC_print_burst
  1043  062F                     l1372:
  1044                           
  1045                           ;SamplingProgram.c: 32:         _delay((unsigned long)((7.38)*(16000000/4000.0)));
  1046  062F  3027               	movlw	39
  1047  0630  1283               	bcf	3,5	;RP0=0, select bank0
  1048  0631  1303               	bcf	3,6	;RP1=0, select bank0
  1049  0632  00C0               	movwf	??_main+1
  1050  0633  3054               	movlw	84
  1051  0634  00BF               	movwf	??_main
  1052  0635                     u757:
  1053  0635  0BBF               	decfsz	??_main,f
  1054  0636  2E35               	goto	u757
  1055  0637  0BC0               	decfsz	??_main+1,f
  1056  0638  2E35               	goto	u757
  1057  0639  0000               	nop
  1058  063A  2E13               	goto	l1368
  1059  063B  120A  118A  2800   	ljmp	start
  1060  063E                     __end_of_main:
  1061                           
  1062                           	psect	text1
  1063  063E                     __ptext1:	
  1064 ;; *************** function _UART_TX_Init *****************
  1065 ;; Defined at:
  1066 ;;		line 15 in file "UART.c"
  1067 ;; Parameters:    Size  Location     Type
  1068 ;;  baud            4    0[BANK0 ] unsigned long 
  1069 ;; Auto vars:     Size  Location     Type
  1070 ;;  temp            2    8[BANK0 ] unsigned int 
  1071 ;; Return value:  Size  Location     Type
  1072 ;;                  1    wreg      void 
  1073 ;; Registers used:
  1074 ;;		wreg, status,2, status,0, pclath, cstack
  1075 ;; Tracked objects:
  1076 ;;		On entry : 0/0
  1077 ;;		On exit  : 0/0
  1078 ;;		Unchanged: 0/0
  1079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1080 ;;      Params:         0       4       0       0       0
  1081 ;;      Locals:         0       2       0       0       0
  1082 ;;      Temps:          0       4       0       0       0
  1083 ;;      Totals:         0      10       0       0       0
  1084 ;;Total ram usage:       10 bytes
  1085 ;; Hardware stack levels used: 1
  1086 ;; Hardware stack levels required when called: 1
  1087 ;; This function calls:
  1088 ;;		___lldiv
  1089 ;; This function is called by:
  1090 ;;		_main
  1091 ;; This function uses a non-reentrant model
  1092 ;;
  1093                           
  1094                           
  1095                           ;psect for function _UART_TX_Init
  1096  063E                     _UART_TX_Init:
  1097  063E                     l1292:	
  1098                           ;incstack = 0
  1099                           ; Regs used in _UART_TX_Init: [wreg+status,2+status,0+pclath+cstack]
  1100                           
  1101                           
  1102                           ;UART.c: 15: void UART_TX_Init(uint32_t baud);UART.c: 16: {;UART.c: 18:   uint16_t temp;
      +                          ;UART.c: 19:   temp= (uint16_t)(((16000000/baud)/4)-1);
  1103  063E  1283               	bcf	3,5	;RP0=0, select bank0
  1104  063F  1303               	bcf	3,6	;RP1=0, select bank0
  1105  0640  0823               	movf	UART_TX_Init@baud+3,w
  1106  0641  00F3               	movwf	___lldiv@divisor+3
  1107  0642  0822               	movf	UART_TX_Init@baud+2,w
  1108  0643  00F2               	movwf	___lldiv@divisor+2
  1109  0644  0821               	movf	UART_TX_Init@baud+1,w
  1110  0645  00F1               	movwf	___lldiv@divisor+1
  1111  0646  0820               	movf	UART_TX_Init@baud,w
  1112  0647  00F0               	movwf	___lldiv@divisor
  1113  0648  3000               	movlw	0
  1114  0649  00F7               	movwf	___lldiv@dividend+3
  1115  064A  30F4               	movlw	244
  1116  064B  00F6               	movwf	___lldiv@dividend+2
  1117  064C  3024               	movlw	36
  1118  064D  00F5               	movwf	___lldiv@dividend+1
  1119  064E  3000               	movlw	0
  1120  064F  00F4               	movwf	___lldiv@dividend
  1121  0650  120A  118A  268B  120A  118A  	fcall	___lldiv
  1122  0655  0870               	movf	?___lldiv,w
  1123  0656  1283               	bcf	3,5	;RP0=0, select bank0
  1124  0657  1303               	bcf	3,6	;RP1=0, select bank0
  1125  0658  00A4               	movwf	??_UART_TX_Init
  1126  0659  0871               	movf	?___lldiv+1,w
  1127  065A  00A5               	movwf	??_UART_TX_Init+1
  1128  065B  0872               	movf	?___lldiv+2,w
  1129  065C  00A6               	movwf	??_UART_TX_Init+2
  1130  065D  0873               	movf	?___lldiv+3,w
  1131  065E  00A7               	movwf	??_UART_TX_Init+3
  1132  065F  3002               	movlw	2
  1133  0660                     u735:
  1134  0660  1003               	clrc
  1135  0661  0CA7               	rrf	??_UART_TX_Init+3,f
  1136  0662  0CA6               	rrf	??_UART_TX_Init+2,f
  1137  0663  0CA5               	rrf	??_UART_TX_Init+1,f
  1138  0664  0CA4               	rrf	??_UART_TX_Init,f
  1139  0665                     u730:
  1140  0665  3EFF               	addlw	-1
  1141  0666  1D03               	skipz
  1142  0667  2E60               	goto	u735
  1143  0668  0824               	movf	??_UART_TX_Init,w
  1144  0669  3EFF               	addlw	255
  1145  066A  00A8               	movwf	UART_TX_Init@temp
  1146  066B  0825               	movf	??_UART_TX_Init+1,w
  1147  066C  1803               	skipnc
  1148  066D  3E01               	addlw	1
  1149  066E  3EFF               	addlw	255
  1150  066F  00A9               	movwf	UART_TX_Init@temp+1
  1151  0670                     l1294:
  1152                           
  1153                           ;UART.c: 20:   BRGH = 1;
  1154  0670  1683               	bsf	3,5	;RP0=1, select bank1
  1155  0671  1303               	bcf	3,6	;RP1=0, select bank1
  1156  0672  1518               	bsf	24,2	;volatile
  1157  0673                     l1296:
  1158                           
  1159                           ;UART.c: 21:   BRG16=1;
  1160  0673  1683               	bsf	3,5	;RP0=1, select bank3
  1161  0674  1703               	bsf	3,6	;RP1=1, select bank3
  1162  0675  1587               	bsf	7,3	;volatile
  1163  0676                     l1298:
  1164                           
  1165                           ;UART.c: 22:   SPBRG = 0xFF&temp;
  1166  0676  1283               	bcf	3,5	;RP0=0, select bank0
  1167  0677  1303               	bcf	3,6	;RP1=0, select bank0
  1168  0678  0828               	movf	UART_TX_Init@temp,w
  1169  0679  1683               	bsf	3,5	;RP0=1, select bank1
  1170  067A  1303               	bcf	3,6	;RP1=0, select bank1
  1171  067B  0099               	movwf	25	;volatile
  1172  067C                     l1300:
  1173                           
  1174                           ;UART.c: 23:   SPBRGH= (temp&0xFF00)>>(8);
  1175  067C  1283               	bcf	3,5	;RP0=0, select bank0
  1176  067D  1303               	bcf	3,6	;RP1=0, select bank0
  1177  067E  0829               	movf	UART_TX_Init@temp+1,w
  1178  067F  1683               	bsf	3,5	;RP0=1, select bank1
  1179  0680  1303               	bcf	3,6	;RP1=0, select bank1
  1180  0681  009A               	movwf	26	;volatile
  1181  0682                     l1302:
  1182                           
  1183                           ;UART.c: 26:   SYNC = 0;
  1184  0682  1218               	bcf	24,4	;volatile
  1185  0683                     l1304:
  1186                           
  1187                           ;UART.c: 27:   SPEN = 1;
  1188  0683  1283               	bcf	3,5	;RP0=0, select bank0
  1189  0684  1303               	bcf	3,6	;RP1=0, select bank0
  1190  0685  1798               	bsf	24,7	;volatile
  1191  0686                     l1306:
  1192                           
  1193                           ;UART.c: 29:   TRISC6 = 1;
  1194  0686  1683               	bsf	3,5	;RP0=1, select bank1
  1195  0687  1303               	bcf	3,6	;RP1=0, select bank1
  1196  0688  1707               	bsf	7,6	;volatile
  1197  0689                     l1308:
  1198                           
  1199                           ;UART.c: 30:   TXEN = 1;
  1200  0689  1698               	bsf	24,5	;volatile
  1201  068A                     l80:
  1202  068A  0008               	return
  1203  068B                     __end_of_UART_TX_Init:
  1204                           
  1205                           	psect	text2
  1206  068B                     __ptext2:	
  1207 ;; *************** function ___lldiv *****************
  1208 ;; Defined at:
  1209 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  1210 ;; Parameters:    Size  Location     Type
  1211 ;;  divisor         4    0[COMMON] unsigned long 
  1212 ;;  dividend        4    4[COMMON] unsigned long 
  1213 ;; Auto vars:     Size  Location     Type
  1214 ;;  quotient        4    9[COMMON] unsigned long 
  1215 ;;  counter         1   13[COMMON] unsigned char 
  1216 ;; Return value:  Size  Location     Type
  1217 ;;                  4    0[COMMON] unsigned long 
  1218 ;; Registers used:
  1219 ;;		wreg, status,2, status,0
  1220 ;; Tracked objects:
  1221 ;;		On entry : 0/0
  1222 ;;		On exit  : 0/0
  1223 ;;		Unchanged: 0/0
  1224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1225 ;;      Params:         8       0       0       0       0
  1226 ;;      Locals:         5       0       0       0       0
  1227 ;;      Temps:          1       0       0       0       0
  1228 ;;      Totals:        14       0       0       0       0
  1229 ;;Total ram usage:       14 bytes
  1230 ;; Hardware stack levels used: 1
  1231 ;; This function calls:
  1232 ;;		Nothing
  1233 ;; This function is called by:
  1234 ;;		_UART_TX_Init
  1235 ;; This function uses a non-reentrant model
  1236 ;;
  1237                           
  1238                           
  1239                           ;psect for function ___lldiv
  1240  068B                     ___lldiv:
  1241  068B                     l1248:	
  1242                           ;incstack = 0
  1243                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1244                           
  1245  068B  3000               	movlw	0
  1246  068C  00FC               	movwf	___lldiv@quotient+3
  1247  068D  3000               	movlw	0
  1248  068E  00FB               	movwf	___lldiv@quotient+2
  1249  068F  3000               	movlw	0
  1250  0690  00FA               	movwf	___lldiv@quotient+1
  1251  0691  3000               	movlw	0
  1252  0692  00F9               	movwf	___lldiv@quotient
  1253  0693  0873               	movf	___lldiv@divisor+3,w
  1254  0694  0472               	iorwf	___lldiv@divisor+2,w
  1255  0695  0471               	iorwf	___lldiv@divisor+1,w
  1256  0696  0470               	iorwf	___lldiv@divisor,w
  1257  0697  1903               	skipnz
  1258  0698  2E9A               	goto	u631
  1259  0699  2E9B               	goto	u630
  1260  069A                     u631:
  1261  069A  2EE8               	goto	l1268
  1262  069B                     u630:
  1263  069B                     l1250:
  1264  069B  01FD               	clrf	___lldiv@counter
  1265  069C  0AFD               	incf	___lldiv@counter,f
  1266  069D  2EAB               	goto	l1254
  1267  069E                     l1252:
  1268  069E  3001               	movlw	1
  1269  069F  00F8               	movwf	??___lldiv
  1270  06A0                     u645:
  1271  06A0  1003               	clrc
  1272  06A1  0DF0               	rlf	___lldiv@divisor,f
  1273  06A2  0DF1               	rlf	___lldiv@divisor+1,f
  1274  06A3  0DF2               	rlf	___lldiv@divisor+2,f
  1275  06A4  0DF3               	rlf	___lldiv@divisor+3,f
  1276  06A5  0BF8               	decfsz	??___lldiv,f
  1277  06A6  2EA0               	goto	u645
  1278  06A7  3001               	movlw	1
  1279  06A8  00F8               	movwf	??___lldiv
  1280  06A9  0878               	movf	??___lldiv,w
  1281  06AA  07FD               	addwf	___lldiv@counter,f
  1282  06AB                     l1254:
  1283  06AB  1FF3               	btfss	___lldiv@divisor+3,7
  1284  06AC  2EAE               	goto	u651
  1285  06AD  2EAF               	goto	u650
  1286  06AE                     u651:
  1287  06AE  2E9E               	goto	l1252
  1288  06AF                     u650:
  1289  06AF                     l1256:
  1290  06AF  3001               	movlw	1
  1291  06B0  00F8               	movwf	??___lldiv
  1292  06B1                     u665:
  1293  06B1  1003               	clrc
  1294  06B2  0DF9               	rlf	___lldiv@quotient,f
  1295  06B3  0DFA               	rlf	___lldiv@quotient+1,f
  1296  06B4  0DFB               	rlf	___lldiv@quotient+2,f
  1297  06B5  0DFC               	rlf	___lldiv@quotient+3,f
  1298  06B6  0BF8               	decfsz	??___lldiv,f
  1299  06B7  2EB1               	goto	u665
  1300  06B8                     l1258:
  1301  06B8  0873               	movf	___lldiv@divisor+3,w
  1302  06B9  0277               	subwf	___lldiv@dividend+3,w
  1303  06BA  1D03               	skipz
  1304  06BB  2EC6               	goto	u675
  1305  06BC  0872               	movf	___lldiv@divisor+2,w
  1306  06BD  0276               	subwf	___lldiv@dividend+2,w
  1307  06BE  1D03               	skipz
  1308  06BF  2EC6               	goto	u675
  1309  06C0  0871               	movf	___lldiv@divisor+1,w
  1310  06C1  0275               	subwf	___lldiv@dividend+1,w
  1311  06C2  1D03               	skipz
  1312  06C3  2EC6               	goto	u675
  1313  06C4  0870               	movf	___lldiv@divisor,w
  1314  06C5  0274               	subwf	___lldiv@dividend,w
  1315  06C6                     u675:
  1316  06C6  1C03               	skipc
  1317  06C7  2EC9               	goto	u671
  1318  06C8  2ECA               	goto	u670
  1319  06C9                     u671:
  1320  06C9  2ED9               	goto	l1264
  1321  06CA                     u670:
  1322  06CA                     l1260:
  1323  06CA  0870               	movf	___lldiv@divisor,w
  1324  06CB  02F4               	subwf	___lldiv@dividend,f
  1325  06CC  0871               	movf	___lldiv@divisor+1,w
  1326  06CD  1C03               	skipc
  1327  06CE  0F71               	incfsz	___lldiv@divisor+1,w
  1328  06CF  02F5               	subwf	___lldiv@dividend+1,f
  1329  06D0  0872               	movf	___lldiv@divisor+2,w
  1330  06D1  1C03               	skipc
  1331  06D2  0F72               	incfsz	___lldiv@divisor+2,w
  1332  06D3  02F6               	subwf	___lldiv@dividend+2,f
  1333  06D4  0873               	movf	___lldiv@divisor+3,w
  1334  06D5  1C03               	skipc
  1335  06D6  0F73               	incfsz	___lldiv@divisor+3,w
  1336  06D7  02F7               	subwf	___lldiv@dividend+3,f
  1337  06D8                     l1262:
  1338  06D8  1479               	bsf	___lldiv@quotient,0
  1339  06D9                     l1264:
  1340  06D9  3001               	movlw	1
  1341  06DA                     u685:
  1342  06DA  1003               	clrc
  1343  06DB  0CF3               	rrf	___lldiv@divisor+3,f
  1344  06DC  0CF2               	rrf	___lldiv@divisor+2,f
  1345  06DD  0CF1               	rrf	___lldiv@divisor+1,f
  1346  06DE  0CF0               	rrf	___lldiv@divisor,f
  1347  06DF  3EFF               	addlw	-1
  1348  06E0  1D03               	skipz
  1349  06E1  2EDA               	goto	u685
  1350  06E2                     l1266:
  1351  06E2  3001               	movlw	1
  1352  06E3  02FD               	subwf	___lldiv@counter,f
  1353  06E4  1D03               	btfss	3,2
  1354  06E5  2EE7               	goto	u691
  1355  06E6  2EE8               	goto	u690
  1356  06E7                     u691:
  1357  06E7  2EAF               	goto	l1256
  1358  06E8                     u690:
  1359  06E8                     l1268:
  1360  06E8  087C               	movf	___lldiv@quotient+3,w
  1361  06E9  00F3               	movwf	?___lldiv+3
  1362  06EA  087B               	movf	___lldiv@quotient+2,w
  1363  06EB  00F2               	movwf	?___lldiv+2
  1364  06EC  087A               	movf	___lldiv@quotient+1,w
  1365  06ED  00F1               	movwf	?___lldiv+1
  1366  06EE  0879               	movf	___lldiv@quotient,w
  1367  06EF  00F0               	movwf	?___lldiv
  1368  06F0                     l308:
  1369  06F0  0008               	return
  1370  06F1                     __end_of___lldiv:
  1371                           
  1372                           	psect	text3
  1373  0519                     __ptext3:	
  1374 ;; *************** function _ADC_print_burst *****************
  1375 ;; Defined at:
  1376 ;;		line 70 in file "ADC.c"
  1377 ;; Parameters:    Size  Location     Type
  1378 ;;  BurstReading    1    wreg     PTR unsigned int 
  1379 ;;		 -> ANRead(16), 
  1380 ;;  NumberReadin    1   26[BANK0 ] unsigned char 
  1381 ;; Auto vars:     Size  Location     Type
  1382 ;;  BurstReading    1   29[BANK0 ] PTR unsigned int 
  1383 ;;		 -> ANRead(16), 
  1384 ;;  n               1   30[BANK0 ] unsigned char 
  1385 ;; Return value:  Size  Location     Type
  1386 ;;                  1    wreg      void 
  1387 ;; Registers used:
  1388 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1389 ;; Tracked objects:
  1390 ;;		On entry : 0/0
  1391 ;;		On exit  : 0/0
  1392 ;;		Unchanged: 0/0
  1393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1394 ;;      Params:         0       1       0       0       0
  1395 ;;      Locals:         0       2       0       0       0
  1396 ;;      Temps:          0       2       0       0       0
  1397 ;;      Totals:         0       5       0       0       0
  1398 ;;Total ram usage:        5 bytes
  1399 ;; Hardware stack levels used: 1
  1400 ;; Hardware stack levels required when called: 3
  1401 ;; This function calls:
  1402 ;;		_UART_Write
  1403 ;;		_UART_number
  1404 ;; This function is called by:
  1405 ;;		_main
  1406 ;; This function uses a non-reentrant model
  1407 ;;
  1408                           
  1409                           
  1410                           ;psect for function _ADC_print_burst
  1411  0519                     _ADC_print_burst:
  1412                           
  1413                           ;incstack = 0
  1414                           ; Regs used in _ADC_print_burst: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1415                           ;ADC_print_burst@BurstReadings stored from wreg
  1416  0519  1283               	bcf	3,5	;RP0=0, select bank0
  1417  051A  1303               	bcf	3,6	;RP1=0, select bank0
  1418  051B  00BD               	movwf	ADC_print_burst@BurstReadings
  1419  051C                     l1282:
  1420                           
  1421                           ;ADC.c: 70: void ADC_print_burst(uint16_t *BurstReadings, uint8_t NumberReadings);ADC.c:
      +                           71: {;ADC.c: 72:     for(uint8_t n=0; n<NumberReadings;n++)
  1422  051C  01BE               	clrf	ADC_print_burst@n
  1423  051D  2D36               	goto	l1288
  1424  051E                     l1284:
  1425                           
  1426                           ;ADC.c: 73:         {;ADC.c: 74:             UART_number((int)BurstReadings[n]);
  1427  051E  083E               	movf	ADC_print_burst@n,w
  1428  051F  00BB               	movwf	??_ADC_print_burst
  1429  0520  073B               	addwf	??_ADC_print_burst,w
  1430  0521  073D               	addwf	ADC_print_burst@BurstReadings,w
  1431  0522  00BC               	movwf	??_ADC_print_burst+1
  1432  0523  083C               	movf	??_ADC_print_burst+1,w
  1433  0524  0084               	movwf	4
  1434  0525  1383               	bcf	3,7	;select IRP bank0
  1435  0526  0800               	movf	0,w
  1436  0527  00AD               	movwf	UART_number@number
  1437  0528  0A84               	incf	4,f
  1438  0529  0800               	movf	0,w
  1439  052A  00AE               	movwf	UART_number@number+1
  1440  052B  120A  118A  24F6  120A  118A  	fcall	_UART_number
  1441  0530                     l1286:
  1442                           
  1443                           ;ADC.c: 75:         }
  1444  0530  3001               	movlw	1
  1445  0531  1283               	bcf	3,5	;RP0=0, select bank0
  1446  0532  1303               	bcf	3,6	;RP1=0, select bank0
  1447  0533  00BB               	movwf	??_ADC_print_burst
  1448  0534  083B               	movf	??_ADC_print_burst,w
  1449  0535  07BE               	addwf	ADC_print_burst@n,f
  1450  0536                     l1288:
  1451  0536  083A               	movf	ADC_print_burst@NumberReadings,w
  1452  0537  023E               	subwf	ADC_print_burst@n,w
  1453  0538  1C03               	skipc
  1454  0539  2D3B               	goto	u721
  1455  053A  2D3C               	goto	u720
  1456  053B                     u721:
  1457  053B  2D1E               	goto	l1284
  1458  053C                     u720:
  1459  053C                     l1290:
  1460                           
  1461                           ;ADC.c: 76:     UART_Write(10);
  1462  053C  300A               	movlw	10
  1463  053D  120A  118A  246F  120A  118A  	fcall	_UART_Write
  1464  0542                     l49:
  1465  0542  0008               	return
  1466  0543                     __end_of_ADC_print_burst:
  1467                           
  1468                           	psect	text4
  1469  04F6                     __ptext4:	
  1470 ;; *************** function _UART_number *****************
  1471 ;; Defined at:
  1472 ;;		line 60 in file "UART.c"
  1473 ;; Parameters:    Size  Location     Type
  1474 ;;  number          2   13[BANK0 ] int 
  1475 ;; Auto vars:     Size  Location     Type
  1476 ;;  buffer         10   16[BANK0 ] unsigned char [10]
  1477 ;; Return value:  Size  Location     Type
  1478 ;;                  1    wreg      void 
  1479 ;; Registers used:
  1480 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1486 ;;      Params:         0       2       0       0       0
  1487 ;;      Locals:         0      10       0       0       0
  1488 ;;      Temps:          0       1       0       0       0
  1489 ;;      Totals:         0      13       0       0       0
  1490 ;;Total ram usage:       13 bytes
  1491 ;; Hardware stack levels used: 1
  1492 ;; Hardware stack levels required when called: 2
  1493 ;; This function calls:
  1494 ;;		_UART_Buffer
  1495 ;;		_sprintf
  1496 ;;		_strlen
  1497 ;; This function is called by:
  1498 ;;		_ADC_print_burst
  1499 ;; This function uses a non-reentrant model
  1500 ;;
  1501                           
  1502                           
  1503                           ;psect for function _UART_number
  1504  04F6                     _UART_number:
  1505  04F6                     l1244:	
  1506                           ;incstack = 0
  1507                           ; Regs used in _UART_number: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1508                           
  1509                           
  1510                           ;UART.c: 60: void UART_number(int number);UART.c: 61: {;UART.c: 62:  uint8_t buffer[10];
      +                          ;UART.c: 63:  sprintf((char *)buffer,"%d\n",number);
  1511  04F6  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1512  04F7  1283               	bcf	3,5	;RP0=0, select bank0
  1513  04F8  1303               	bcf	3,6	;RP1=0, select bank0
  1514  04F9  00AF               	movwf	??_UART_number
  1515  04FA  082F               	movf	??_UART_number,w
  1516  04FB  00A0               	movwf	sprintf@f
  1517  04FC  082E               	movf	UART_number@number+1,w
  1518  04FD  00A2               	movwf	?_sprintf+2
  1519  04FE  082D               	movf	UART_number@number,w
  1520  04FF  00A1               	movwf	?_sprintf+1
  1521  0500  3030               	movlw	(low (UART_number@buffer| 0))& (0+255)
  1522  0501  120A  118A  26F1  120A  118A  	fcall	_sprintf
  1523  0506                     l1246:
  1524                           
  1525                           ;UART.c: 64:  UART_Buffer(buffer,strlen((char *)buffer));
  1526  0506  3030               	movlw	(low (UART_number@buffer| 0))& (0+255)
  1527  0507  120A  118A  24A1  120A  118A  	fcall	_strlen
  1528  050C  0870               	movf	?_strlen,w
  1529  050D  1283               	bcf	3,5	;RP0=0, select bank0
  1530  050E  1303               	bcf	3,6	;RP1=0, select bank0
  1531  050F  00AF               	movwf	??_UART_number
  1532  0510  082F               	movf	??_UART_number,w
  1533  0511  00F5               	movwf	UART_Buffer@size
  1534  0512  3030               	movlw	(low (UART_number@buffer| 0))& (0+255)
  1535  0513  120A  118A  24BA  120A  118A  	fcall	_UART_Buffer
  1536  0518                     l98:
  1537  0518  0008               	return
  1538  0519                     __end_of_UART_number:
  1539                           
  1540                           	psect	text5
  1541  04A1                     __ptext5:	
  1542 ;; *************** function _strlen *****************
  1543 ;; Defined at:
  1544 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\strlen.c"
  1545 ;; Parameters:    Size  Location     Type
  1546 ;;  s               1    wreg     PTR const unsigned char 
  1547 ;;		 -> mensaje(19), UART_number@buffer(10), 
  1548 ;; Auto vars:     Size  Location     Type
  1549 ;;  s               1    4[COMMON] PTR const unsigned char 
  1550 ;;		 -> mensaje(19), UART_number@buffer(10), 
  1551 ;;  cp              1    3[COMMON] PTR const unsigned char 
  1552 ;;		 -> mensaje(19), UART_number@buffer(10), 
  1553 ;; Return value:  Size  Location     Type
  1554 ;;                  2    0[COMMON] unsigned int 
  1555 ;; Registers used:
  1556 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1557 ;; Tracked objects:
  1558 ;;		On entry : 0/0
  1559 ;;		On exit  : 0/0
  1560 ;;		Unchanged: 0/0
  1561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1562 ;;      Params:         2       0       0       0       0
  1563 ;;      Locals:         2       0       0       0       0
  1564 ;;      Temps:          1       0       0       0       0
  1565 ;;      Totals:         5       0       0       0       0
  1566 ;;Total ram usage:        5 bytes
  1567 ;; Hardware stack levels used: 1
  1568 ;; This function calls:
  1569 ;;		Nothing
  1570 ;; This function is called by:
  1571 ;;		_UART_number
  1572 ;;		_main
  1573 ;; This function uses a non-reentrant model
  1574 ;;
  1575                           
  1576                           
  1577                           ;psect for function _strlen
  1578  04A1                     _strlen:
  1579                           
  1580                           ;incstack = 0
  1581                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  1582                           ;strlen@s stored from wreg
  1583  04A1  00F4               	movwf	strlen@s
  1584  04A2                     l1226:
  1585  04A2  0874               	movf	strlen@s,w
  1586  04A3  00F2               	movwf	??_strlen
  1587  04A4  0872               	movf	??_strlen,w
  1588  04A5  00F3               	movwf	strlen@cp
  1589  04A6  2CAB               	goto	l1230
  1590  04A7                     l1228:
  1591  04A7  3001               	movlw	1
  1592  04A8  00F2               	movwf	??_strlen
  1593  04A9  0872               	movf	??_strlen,w
  1594  04AA  07F3               	addwf	strlen@cp,f
  1595  04AB                     l1230:
  1596  04AB  0873               	movf	strlen@cp,w
  1597  04AC  0084               	movwf	4
  1598  04AD  1383               	bcf	3,7	;select IRP bank0
  1599  04AE  0800               	movf	0,w
  1600  04AF  1D03               	btfss	3,2
  1601  04B0  2CB2               	goto	u611
  1602  04B1  2CB3               	goto	u610
  1603  04B2                     u611:
  1604  04B2  2CA7               	goto	l1228
  1605  04B3                     u610:
  1606  04B3                     l1232:
  1607  04B3  0874               	movf	strlen@s,w
  1608  04B4  0273               	subwf	strlen@cp,w
  1609  04B5  00F0               	movwf	?_strlen
  1610  04B6  01F1               	clrf	?_strlen+1
  1611  04B7  1BF0               	btfsc	?_strlen,7
  1612  04B8  03F1               	decf	?_strlen+1,f
  1613  04B9                     l726:
  1614  04B9  0008               	return
  1615  04BA                     __end_of_strlen:
  1616                           
  1617                           	psect	text6
  1618  06F1                     __ptext6:	
  1619 ;; *************** function _sprintf *****************
  1620 ;; Defined at:
  1621 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;  sp              1    wreg     PTR unsigned char 
  1624 ;;		 -> UART_number@buffer(10), 
  1625 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1626 ;;		 -> STR_1(4), 
  1627 ;; Auto vars:     Size  Location     Type
  1628 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  1629 ;;		 -> UART_number@buffer(10), 
  1630 ;;  tmpval          4    0        struct .
  1631 ;;  val             2    9[BANK0 ] unsigned int 
  1632 ;;  cp              2    0        PTR const unsigned char 
  1633 ;;  len             2    0        unsigned int 
  1634 ;;  c               1   12[BANK0 ] unsigned char 
  1635 ;;  prec            1    8[BANK0 ] char 
  1636 ;;  flag            1    7[BANK0 ] unsigned char 
  1637 ;;  ap              1    6[BANK0 ] PTR void [1]
  1638 ;;		 -> ?_sprintf(2), 
  1639 ;; Return value:  Size  Location     Type
  1640 ;;                  2    0[BANK0 ] int 
  1641 ;; Registers used:
  1642 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1643 ;; Tracked objects:
  1644 ;;		On entry : 0/0
  1645 ;;		On exit  : 0/0
  1646 ;;		Unchanged: 0/0
  1647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1648 ;;      Params:         0       3       0       0       0
  1649 ;;      Locals:         0       7       0       0       0
  1650 ;;      Temps:          0       3       0       0       0
  1651 ;;      Totals:         0      13       0       0       0
  1652 ;;Total ram usage:       13 bytes
  1653 ;; Hardware stack levels used: 1
  1654 ;; Hardware stack levels required when called: 1
  1655 ;; This function calls:
  1656 ;;		___lwdiv
  1657 ;;		___lwmod
  1658 ;; This function is called by:
  1659 ;;		_UART_number
  1660 ;; This function uses a non-reentrant model
  1661 ;;
  1662                           
  1663                           
  1664                           ;psect for function _sprintf
  1665  06F1                     _sprintf:
  1666                           
  1667                           ;incstack = 0
  1668                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1669                           ;sprintf@sp stored from wreg
  1670  06F1  1283               	bcf	3,5	;RP0=0, select bank0
  1671  06F2  1303               	bcf	3,6	;RP1=0, select bank0
  1672  06F3  00AB               	movwf	sprintf@sp
  1673  06F4                     l1164:
  1674                           
  1675                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1676  06F4  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1677  06F5  00A3               	movwf	??_sprintf
  1678  06F6  0823               	movf	??_sprintf,w
  1679  06F7  00A6               	movwf	sprintf@ap
  1680                           
  1681                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1682  06F8  2FC2               	goto	l1216
  1683  06F9                     l1166:
  1684                           
  1685                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1686  06F9  3025               	movlw	37
  1687  06FA  062C               	xorwf	sprintf@c,w
  1688  06FB  1903               	btfsc	3,2
  1689  06FC  2EFE               	goto	u541
  1690  06FD  2EFF               	goto	u540
  1691  06FE                     u541:
  1692  06FE  2F0B               	goto	l1172
  1693  06FF                     u540:
  1694  06FF                     l1168:
  1695                           
  1696                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1697  06FF  082C               	movf	sprintf@c,w
  1698  0700  00A3               	movwf	??_sprintf
  1699  0701  082B               	movf	sprintf@sp,w
  1700  0702  0084               	movwf	4
  1701  0703  0823               	movf	??_sprintf,w
  1702  0704  1383               	bcf	3,7	;select IRP bank0
  1703  0705  0080               	movwf	0
  1704  0706                     l1170:
  1705  0706  3001               	movlw	1
  1706  0707  00A3               	movwf	??_sprintf
  1707  0708  0823               	movf	??_sprintf,w
  1708  0709  07AB               	addwf	sprintf@sp,f
  1709                           
  1710                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 559:    continue;
  1711  070A  2FC2               	goto	l1216
  1712  070B                     l1172:
  1713                           
  1714                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1715  070B  01A7               	clrf	sprintf@flag
  1716  070C                     l1176:	
  1717                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1718                           
  1719  070C  3001               	movlw	1
  1720  070D  07A0               	addwf	sprintf@f,f
  1721  070E  30FF               	movlw	-1
  1722  070F  0720               	addwf	sprintf@f,w
  1723  0710  0084               	movwf	4
  1724  0711  120A  118A  2003  120A  118A  	fcall	stringdir
  1725  0716  00AC               	movwf	sprintf@c
  1726  0717  00A3               	movwf	??_sprintf
  1727  0718  01A4               	clrf	??_sprintf+1
  1728                           
  1729                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1730                           ; Switch size 1, requested type "simple"
  1731                           ; Number of cases is 1, Range of values is 0 to 0
  1732                           ; switch strategies available:
  1733                           ; Name         Instructions Cycles
  1734                           ; simple_byte            4     3 (average)
  1735                           ; direct_byte           11     8 (fixed)
  1736                           ; jumptable            260     6 (fixed)
  1737                           ;	Chosen strategy is simple_byte
  1738  0719  0824               	movf	??_sprintf+1,w
  1739  071A  3A00               	xorlw	0	; case 0
  1740  071B  1903               	skipnz
  1741  071C  2F1E               	goto	l1394
  1742  071D  2FC2               	goto	l1216
  1743  071E                     l1394:
  1744                           
  1745                           ; Switch size 1, requested type "simple"
  1746                           ; Number of cases is 3, Range of values is 0 to 105
  1747                           ; switch strategies available:
  1748                           ; Name         Instructions Cycles
  1749                           ; simple_byte           10     6 (average)
  1750                           ; jumptable            260     6 (fixed)
  1751                           ;	Chosen strategy is simple_byte
  1752  071E  0823               	movf	??_sprintf,w
  1753  071F  3A00               	xorlw	0	; case 0
  1754  0720  1903               	skipnz
  1755  0721  2FD4               	goto	l1218
  1756  0722  3A64               	xorlw	100	; case 100
  1757  0723  1903               	skipnz
  1758  0724  2F29               	goto	l1178
  1759  0725  3A0D               	xorlw	13	; case 105
  1760  0726  1903               	skipnz
  1761  0727  2F29               	goto	l1178
  1762  0728  2FC2               	goto	l1216
  1763  0729                     l1178:
  1764                           
  1765                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1766  0729  0826               	movf	sprintf@ap,w
  1767  072A  0084               	movwf	4
  1768  072B  1383               	bcf	3,7	;select IRP bank0
  1769  072C  0800               	movf	0,w
  1770  072D  00A9               	movwf	sprintf@val
  1771  072E  0A84               	incf	4,f
  1772  072F  0800               	movf	0,w
  1773  0730  00AA               	movwf	sprintf@val+1
  1774  0731                     l1180:
  1775  0731  3002               	movlw	2
  1776  0732  00A3               	movwf	??_sprintf
  1777  0733  0823               	movf	??_sprintf,w
  1778  0734  07A6               	addwf	sprintf@ap,f
  1779  0735                     l1182:
  1780                           
  1781                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1782  0735  1FAA               	btfss	sprintf@val+1,7
  1783  0736  2F38               	goto	u551
  1784  0737  2F39               	goto	u550
  1785  0738                     u551:
  1786  0738  2F42               	goto	l1188
  1787  0739                     u550:
  1788  0739                     l1184:
  1789                           
  1790                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1791  0739  3003               	movlw	3
  1792  073A  00A3               	movwf	??_sprintf
  1793  073B  0823               	movf	??_sprintf,w
  1794  073C  04A7               	iorwf	sprintf@flag,f
  1795  073D                     l1186:
  1796                           
  1797                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1798  073D  09A9               	comf	sprintf@val,f
  1799  073E  09AA               	comf	sprintf@val+1,f
  1800  073F  0AA9               	incf	sprintf@val,f
  1801  0740  1903               	skipnz
  1802  0741  0AAA               	incf	sprintf@val+1,f
  1803  0742                     l1188:
  1804                           
  1805                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1806  0742  01AC               	clrf	sprintf@c
  1807  0743  0AAC               	incf	sprintf@c,f
  1808  0744                     l1194:
  1809                           
  1810                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1811  0744  082C               	movf	sprintf@c,w
  1812  0745  00A3               	movwf	??_sprintf
  1813  0746  0723               	addwf	??_sprintf,w
  1814  0747  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1815  0748  0084               	movwf	4
  1816  0749  120A  118A  2003  120A  118A  	fcall	stringdir
  1817  074E  00A4               	movwf	??_sprintf+1
  1818  074F  120A  118A  2003  120A  118A  	fcall	stringdir
  1819  0754  00A5               	movwf	??_sprintf+2
  1820  0755  0825               	movf	??_sprintf+2,w
  1821  0756  022A               	subwf	sprintf@val+1,w
  1822  0757  1D03               	skipz
  1823  0758  2F5B               	goto	u565
  1824  0759  0824               	movf	??_sprintf+1,w
  1825  075A  0229               	subwf	sprintf@val,w
  1826  075B                     u565:
  1827  075B  1803               	skipnc
  1828  075C  2F5E               	goto	u561
  1829  075D  2F5F               	goto	u560
  1830  075E                     u561:
  1831  075E  2F60               	goto	l1198
  1832  075F                     u560:
  1833  075F  2F6A               	goto	l1200
  1834  0760                     l1198:
  1835  0760  3001               	movlw	1
  1836  0761  00A3               	movwf	??_sprintf
  1837  0762  0823               	movf	??_sprintf,w
  1838  0763  07AC               	addwf	sprintf@c,f
  1839  0764  3005               	movlw	5
  1840  0765  062C               	xorwf	sprintf@c,w
  1841  0766  1D03               	btfss	3,2
  1842  0767  2F69               	goto	u571
  1843  0768  2F6A               	goto	u570
  1844  0769                     u571:
  1845  0769  2F44               	goto	l1194
  1846  076A                     u570:
  1847  076A                     l1200:
  1848                           
  1849                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1850  076A  0827               	movf	sprintf@flag,w
  1851  076B  3903               	andlw	3
  1852  076C  1903               	btfsc	3,2
  1853  076D  2F6F               	goto	u581
  1854  076E  2F70               	goto	u580
  1855  076F                     u581:
  1856  076F  2F7B               	goto	l1206
  1857  0770                     u580:
  1858  0770                     l1202:
  1859                           
  1860                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1861  0770  302D               	movlw	45
  1862  0771  00A3               	movwf	??_sprintf
  1863  0772  082B               	movf	sprintf@sp,w
  1864  0773  0084               	movwf	4
  1865  0774  0823               	movf	??_sprintf,w
  1866  0775  1383               	bcf	3,7	;select IRP bank0
  1867  0776  0080               	movwf	0
  1868  0777                     l1204:
  1869  0777  3001               	movlw	1
  1870  0778  00A3               	movwf	??_sprintf
  1871  0779  0823               	movf	??_sprintf,w
  1872  077A  07AB               	addwf	sprintf@sp,f
  1873  077B                     l1206:
  1874                           
  1875                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1876  077B  082C               	movf	sprintf@c,w
  1877  077C  00A3               	movwf	??_sprintf
  1878  077D  0823               	movf	??_sprintf,w
  1879  077E  00A8               	movwf	sprintf@prec
  1880                           
  1881                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1882  077F  2FB9               	goto	l1214
  1883  0780                     l1208:
  1884                           
  1885                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1886  0780  300A               	movlw	10
  1887  0781  00F8               	movwf	___lwmod@divisor
  1888  0782  3000               	movlw	0
  1889  0783  00F9               	movwf	___lwmod@divisor+1
  1890  0784  0828               	movf	sprintf@prec,w
  1891  0785  00A3               	movwf	??_sprintf
  1892  0786  0723               	addwf	??_sprintf,w
  1893  0787  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1894  0788  0084               	movwf	4
  1895  0789  120A  118A  2003  120A  118A  	fcall	stringdir
  1896  078E  00F0               	movwf	___lwdiv@divisor
  1897  078F  120A  118A  2003  120A  118A  	fcall	stringdir
  1898  0794  00F1               	movwf	___lwdiv@divisor+1
  1899  0795  082A               	movf	sprintf@val+1,w
  1900  0796  00F3               	movwf	___lwdiv@dividend+1
  1901  0797  0829               	movf	sprintf@val,w
  1902  0798  00F2               	movwf	___lwdiv@dividend
  1903  0799  120A  118A  25AE  120A  118A  	fcall	___lwdiv
  1904  079E  0871               	movf	?___lwdiv+1,w
  1905  079F  00FB               	movwf	___lwmod@dividend+1
  1906  07A0  0870               	movf	?___lwdiv,w
  1907  07A1  00FA               	movwf	___lwmod@dividend
  1908  07A2  120A  118A  2574  120A  118A  	fcall	___lwmod
  1909  07A7  0878               	movf	?___lwmod,w
  1910  07A8  3E30               	addlw	48
  1911  07A9  1283               	bcf	3,5	;RP0=0, select bank0
  1912  07AA  1303               	bcf	3,6	;RP1=0, select bank0
  1913  07AB  00A4               	movwf	??_sprintf+1
  1914  07AC  0824               	movf	??_sprintf+1,w
  1915  07AD  00AC               	movwf	sprintf@c
  1916  07AE                     l1210:
  1917                           
  1918                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1919  07AE  082C               	movf	sprintf@c,w
  1920  07AF  00A3               	movwf	??_sprintf
  1921  07B0  082B               	movf	sprintf@sp,w
  1922  07B1  0084               	movwf	4
  1923  07B2  0823               	movf	??_sprintf,w
  1924  07B3  1383               	bcf	3,7	;select IRP bank0
  1925  07B4  0080               	movwf	0
  1926  07B5                     l1212:
  1927  07B5  3001               	movlw	1
  1928  07B6  00A3               	movwf	??_sprintf
  1929  07B7  0823               	movf	??_sprintf,w
  1930  07B8  07AB               	addwf	sprintf@sp,f
  1931  07B9                     l1214:
  1932                           
  1933                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1934  07B9  30FF               	movlw	255
  1935  07BA  00A3               	movwf	??_sprintf
  1936  07BB  0823               	movf	??_sprintf,w
  1937  07BC  07A8               	addwf	sprintf@prec,f
  1938  07BD  0A28               	incf	sprintf@prec,w
  1939  07BE  1D03               	btfss	3,2
  1940  07BF  2FC1               	goto	u591
  1941  07C0  2FC2               	goto	u590
  1942  07C1                     u591:
  1943  07C1  2F80               	goto	l1208
  1944  07C2                     u590:
  1945  07C2                     l1216:
  1946                           
  1947                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1948  07C2  3001               	movlw	1
  1949  07C3  07A0               	addwf	sprintf@f,f
  1950  07C4  30FF               	movlw	-1
  1951  07C5  0720               	addwf	sprintf@f,w
  1952  07C6  0084               	movwf	4
  1953  07C7  120A  118A  2003  120A  118A  	fcall	stringdir
  1954  07CC  00A3               	movwf	??_sprintf
  1955  07CD  0823               	movf	??_sprintf,w
  1956  07CE  00AC               	movwf	sprintf@c
  1957  07CF  082C               	movf	sprintf@c,w
  1958  07D0  1D03               	btfss	3,2
  1959  07D1  2FD3               	goto	u601
  1960  07D2  2FD4               	goto	u600
  1961  07D3                     u601:
  1962  07D3  2EF9               	goto	l1166
  1963  07D4                     u600:
  1964  07D4                     l1218:
  1965                           
  1966                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1967  07D4  082B               	movf	sprintf@sp,w
  1968  07D5  0084               	movwf	4
  1969  07D6  1383               	bcf	3,7	;select IRP bank0
  1970  07D7  0180               	clrf	0
  1971  07D8                     l268:
  1972  07D8  0008               	return
  1973  07D9                     __end_of_sprintf:
  1974                           
  1975                           	psect	text7
  1976  0574                     __ptext7:	
  1977 ;; *************** function ___lwmod *****************
  1978 ;; Defined at:
  1979 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  1980 ;; Parameters:    Size  Location     Type
  1981 ;;  divisor         2    8[COMMON] unsigned int 
  1982 ;;  dividend        2   10[COMMON] unsigned int 
  1983 ;; Auto vars:     Size  Location     Type
  1984 ;;  counter         1   13[COMMON] unsigned char 
  1985 ;; Return value:  Size  Location     Type
  1986 ;;                  2    8[COMMON] unsigned int 
  1987 ;; Registers used:
  1988 ;;		wreg, status,2, status,0
  1989 ;; Tracked objects:
  1990 ;;		On entry : 0/0
  1991 ;;		On exit  : 0/0
  1992 ;;		Unchanged: 0/0
  1993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1994 ;;      Params:         4       0       0       0       0
  1995 ;;      Locals:         1       0       0       0       0
  1996 ;;      Temps:          1       0       0       0       0
  1997 ;;      Totals:         6       0       0       0       0
  1998 ;;Total ram usage:        6 bytes
  1999 ;; Hardware stack levels used: 1
  2000 ;; This function calls:
  2001 ;;		Nothing
  2002 ;; This function is called by:
  2003 ;;		_sprintf
  2004 ;; This function uses a non-reentrant model
  2005 ;;
  2006                           
  2007                           
  2008                           ;psect for function ___lwmod
  2009  0574                     ___lwmod:
  2010  0574                     l1132:	
  2011                           ;incstack = 0
  2012                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2013                           
  2014  0574  0878               	movf	___lwmod@divisor,w
  2015  0575  0479               	iorwf	___lwmod@divisor+1,w
  2016  0576  1903               	btfsc	3,2
  2017  0577  2D79               	goto	u471
  2018  0578  2D7A               	goto	u470
  2019  0579                     u471:
  2020  0579  2DA9               	goto	l1150
  2021  057A                     u470:
  2022  057A                     l1134:
  2023  057A  01FD               	clrf	___lwmod@counter
  2024  057B  0AFD               	incf	___lwmod@counter,f
  2025  057C  2D88               	goto	l1140
  2026  057D                     l1136:
  2027  057D  3001               	movlw	1
  2028  057E                     u485:
  2029  057E  1003               	clrc
  2030  057F  0DF8               	rlf	___lwmod@divisor,f
  2031  0580  0DF9               	rlf	___lwmod@divisor+1,f
  2032  0581  3EFF               	addlw	-1
  2033  0582  1D03               	skipz
  2034  0583  2D7E               	goto	u485
  2035  0584                     l1138:
  2036  0584  3001               	movlw	1
  2037  0585  00FC               	movwf	??___lwmod
  2038  0586  087C               	movf	??___lwmod,w
  2039  0587  07FD               	addwf	___lwmod@counter,f
  2040  0588                     l1140:
  2041  0588  1FF9               	btfss	___lwmod@divisor+1,7
  2042  0589  2D8B               	goto	u491
  2043  058A  2D8C               	goto	u490
  2044  058B                     u491:
  2045  058B  2D7D               	goto	l1136
  2046  058C                     u490:
  2047  058C                     l1142:
  2048  058C  0879               	movf	___lwmod@divisor+1,w
  2049  058D  027B               	subwf	___lwmod@dividend+1,w
  2050  058E  1D03               	skipz
  2051  058F  2D92               	goto	u505
  2052  0590  0878               	movf	___lwmod@divisor,w
  2053  0591  027A               	subwf	___lwmod@dividend,w
  2054  0592                     u505:
  2055  0592  1C03               	skipc
  2056  0593  2D95               	goto	u501
  2057  0594  2D96               	goto	u500
  2058  0595                     u501:
  2059  0595  2D9C               	goto	l1146
  2060  0596                     u500:
  2061  0596                     l1144:
  2062  0596  0878               	movf	___lwmod@divisor,w
  2063  0597  02FA               	subwf	___lwmod@dividend,f
  2064  0598  0879               	movf	___lwmod@divisor+1,w
  2065  0599  1C03               	skipc
  2066  059A  03FB               	decf	___lwmod@dividend+1,f
  2067  059B  02FB               	subwf	___lwmod@dividend+1,f
  2068  059C                     l1146:
  2069  059C  3001               	movlw	1
  2070  059D                     u515:
  2071  059D  1003               	clrc
  2072  059E  0CF9               	rrf	___lwmod@divisor+1,f
  2073  059F  0CF8               	rrf	___lwmod@divisor,f
  2074  05A0  3EFF               	addlw	-1
  2075  05A1  1D03               	skipz
  2076  05A2  2D9D               	goto	u515
  2077  05A3                     l1148:
  2078  05A3  3001               	movlw	1
  2079  05A4  02FD               	subwf	___lwmod@counter,f
  2080  05A5  1D03               	btfss	3,2
  2081  05A6  2DA8               	goto	u521
  2082  05A7  2DA9               	goto	u520
  2083  05A8                     u521:
  2084  05A8  2D8C               	goto	l1142
  2085  05A9                     u520:
  2086  05A9                     l1150:
  2087  05A9  087B               	movf	___lwmod@dividend+1,w
  2088  05AA  00F9               	movwf	?___lwmod+1
  2089  05AB  087A               	movf	___lwmod@dividend,w
  2090  05AC  00F8               	movwf	?___lwmod
  2091  05AD                     l554:
  2092  05AD  0008               	return
  2093  05AE                     __end_of___lwmod:
  2094                           
  2095                           	psect	text8
  2096  05AE                     __ptext8:	
  2097 ;; *************** function ___lwdiv *****************
  2098 ;; Defined at:
  2099 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  2100 ;; Parameters:    Size  Location     Type
  2101 ;;  divisor         2    0[COMMON] unsigned int 
  2102 ;;  dividend        2    2[COMMON] unsigned int 
  2103 ;; Auto vars:     Size  Location     Type
  2104 ;;  quotient        2    5[COMMON] unsigned int 
  2105 ;;  counter         1    7[COMMON] unsigned char 
  2106 ;; Return value:  Size  Location     Type
  2107 ;;                  2    0[COMMON] unsigned int 
  2108 ;; Registers used:
  2109 ;;		wreg, status,2, status,0
  2110 ;; Tracked objects:
  2111 ;;		On entry : 0/0
  2112 ;;		On exit  : 0/0
  2113 ;;		Unchanged: 0/0
  2114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2115 ;;      Params:         4       0       0       0       0
  2116 ;;      Locals:         3       0       0       0       0
  2117 ;;      Temps:          1       0       0       0       0
  2118 ;;      Totals:         8       0       0       0       0
  2119 ;;Total ram usage:        8 bytes
  2120 ;; Hardware stack levels used: 1
  2121 ;; This function calls:
  2122 ;;		Nothing
  2123 ;; This function is called by:
  2124 ;;		_sprintf
  2125 ;; This function uses a non-reentrant model
  2126 ;;
  2127                           
  2128                           
  2129                           ;psect for function ___lwdiv
  2130  05AE                     ___lwdiv:
  2131  05AE                     l1106:	
  2132                           ;incstack = 0
  2133                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2134                           
  2135  05AE  01F5               	clrf	___lwdiv@quotient
  2136  05AF  01F6               	clrf	___lwdiv@quotient+1
  2137  05B0                     l1108:
  2138  05B0  0870               	movf	___lwdiv@divisor,w
  2139  05B1  0471               	iorwf	___lwdiv@divisor+1,w
  2140  05B2  1903               	btfsc	3,2
  2141  05B3  2DB5               	goto	u401
  2142  05B4  2DB6               	goto	u400
  2143  05B5                     u401:
  2144  05B5  2DED               	goto	l1128
  2145  05B6                     u400:
  2146  05B6                     l1110:
  2147  05B6  01F7               	clrf	___lwdiv@counter
  2148  05B7  0AF7               	incf	___lwdiv@counter,f
  2149  05B8  2DC4               	goto	l1116
  2150  05B9                     l1112:
  2151  05B9  3001               	movlw	1
  2152  05BA                     u415:
  2153  05BA  1003               	clrc
  2154  05BB  0DF0               	rlf	___lwdiv@divisor,f
  2155  05BC  0DF1               	rlf	___lwdiv@divisor+1,f
  2156  05BD  3EFF               	addlw	-1
  2157  05BE  1D03               	skipz
  2158  05BF  2DBA               	goto	u415
  2159  05C0                     l1114:
  2160  05C0  3001               	movlw	1
  2161  05C1  00F4               	movwf	??___lwdiv
  2162  05C2  0874               	movf	??___lwdiv,w
  2163  05C3  07F7               	addwf	___lwdiv@counter,f
  2164  05C4                     l1116:
  2165  05C4  1FF1               	btfss	___lwdiv@divisor+1,7
  2166  05C5  2DC7               	goto	u421
  2167  05C6  2DC8               	goto	u420
  2168  05C7                     u421:
  2169  05C7  2DB9               	goto	l1112
  2170  05C8                     u420:
  2171  05C8                     l1118:
  2172  05C8  3001               	movlw	1
  2173  05C9                     u435:
  2174  05C9  1003               	clrc
  2175  05CA  0DF5               	rlf	___lwdiv@quotient,f
  2176  05CB  0DF6               	rlf	___lwdiv@quotient+1,f
  2177  05CC  3EFF               	addlw	-1
  2178  05CD  1D03               	skipz
  2179  05CE  2DC9               	goto	u435
  2180  05CF  0871               	movf	___lwdiv@divisor+1,w
  2181  05D0  0273               	subwf	___lwdiv@dividend+1,w
  2182  05D1  1D03               	skipz
  2183  05D2  2DD5               	goto	u445
  2184  05D3  0870               	movf	___lwdiv@divisor,w
  2185  05D4  0272               	subwf	___lwdiv@dividend,w
  2186  05D5                     u445:
  2187  05D5  1C03               	skipc
  2188  05D6  2DD8               	goto	u441
  2189  05D7  2DD9               	goto	u440
  2190  05D8                     u441:
  2191  05D8  2DE0               	goto	l1124
  2192  05D9                     u440:
  2193  05D9                     l1120:
  2194  05D9  0870               	movf	___lwdiv@divisor,w
  2195  05DA  02F2               	subwf	___lwdiv@dividend,f
  2196  05DB  0871               	movf	___lwdiv@divisor+1,w
  2197  05DC  1C03               	skipc
  2198  05DD  03F3               	decf	___lwdiv@dividend+1,f
  2199  05DE  02F3               	subwf	___lwdiv@dividend+1,f
  2200  05DF                     l1122:
  2201  05DF  1475               	bsf	___lwdiv@quotient,0
  2202  05E0                     l1124:
  2203  05E0  3001               	movlw	1
  2204  05E1                     u455:
  2205  05E1  1003               	clrc
  2206  05E2  0CF1               	rrf	___lwdiv@divisor+1,f
  2207  05E3  0CF0               	rrf	___lwdiv@divisor,f
  2208  05E4  3EFF               	addlw	-1
  2209  05E5  1D03               	skipz
  2210  05E6  2DE1               	goto	u455
  2211  05E7                     l1126:
  2212  05E7  3001               	movlw	1
  2213  05E8  02F7               	subwf	___lwdiv@counter,f
  2214  05E9  1D03               	btfss	3,2
  2215  05EA  2DEC               	goto	u461
  2216  05EB  2DED               	goto	u460
  2217  05EC                     u461:
  2218  05EC  2DC8               	goto	l1118
  2219  05ED                     u460:
  2220  05ED                     l1128:
  2221  05ED  0876               	movf	___lwdiv@quotient+1,w
  2222  05EE  00F1               	movwf	?___lwdiv+1
  2223  05EF  0875               	movf	___lwdiv@quotient,w
  2224  05F0  00F0               	movwf	?___lwdiv
  2225  05F1                     l544:
  2226  05F1  0008               	return
  2227  05F2                     __end_of___lwdiv:
  2228                           
  2229                           	psect	text9
  2230  04BA                     __ptext9:	
  2231 ;; *************** function _UART_Buffer *****************
  2232 ;; Defined at:
  2233 ;;		line 48 in file "UART.c"
  2234 ;; Parameters:    Size  Location     Type
  2235 ;;  buffer          1    wreg     PTR unsigned char 
  2236 ;;		 -> mensaje(19), UART_number@buffer(10), 
  2237 ;;  size            1    5[COMMON] unsigned char 
  2238 ;; Auto vars:     Size  Location     Type
  2239 ;;  buffer          1    8[COMMON] PTR unsigned char 
  2240 ;;		 -> mensaje(19), UART_number@buffer(10), 
  2241 ;;  count           1    7[COMMON] unsigned char 
  2242 ;; Return value:  Size  Location     Type
  2243 ;;                  1    wreg      void 
  2244 ;; Registers used:
  2245 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2246 ;; Tracked objects:
  2247 ;;		On entry : 0/0
  2248 ;;		On exit  : 0/0
  2249 ;;		Unchanged: 0/0
  2250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2251 ;;      Params:         1       0       0       0       0
  2252 ;;      Locals:         2       0       0       0       0
  2253 ;;      Temps:          1       0       0       0       0
  2254 ;;      Totals:         4       0       0       0       0
  2255 ;;Total ram usage:        4 bytes
  2256 ;; Hardware stack levels used: 1
  2257 ;; Hardware stack levels required when called: 1
  2258 ;; This function calls:
  2259 ;;		_UART_Write
  2260 ;; This function is called by:
  2261 ;;		_UART_number
  2262 ;;		_main
  2263 ;; This function uses a non-reentrant model
  2264 ;;
  2265                           
  2266                           
  2267                           ;psect for function _UART_Buffer
  2268  04BA                     _UART_Buffer:
  2269                           
  2270                           ;incstack = 0
  2271                           ; Regs used in _UART_Buffer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2272                           ;UART_Buffer@buffer stored from wreg
  2273  04BA  00F8               	movwf	UART_Buffer@buffer
  2274  04BB                     l1154:
  2275                           
  2276                           ;UART.c: 48: void UART_Buffer(uint8_t *buffer, uint8_t size);UART.c: 49: {;UART.c: 50:  
      +                             char count=0;
  2277  04BB  01F7               	clrf	UART_Buffer@count
  2278                           
  2279                           ;UART.c: 51:     while(count<size)
  2280  04BC  2CCE               	goto	l1162
  2281  04BD                     l1156:
  2282                           
  2283                           ;UART.c: 52:     {;UART.c: 53:         UART_Write(*buffer);
  2284  04BD  0878               	movf	UART_Buffer@buffer,w
  2285  04BE  0084               	movwf	4
  2286  04BF  1383               	bcf	3,7	;select IRP bank0
  2287  04C0  0800               	movf	0,w
  2288  04C1  120A  118A  246F  120A  118A  	fcall	_UART_Write
  2289  04C6                     l1158:
  2290                           
  2291                           ;UART.c: 54:         count++;
  2292  04C6  3001               	movlw	1
  2293  04C7  00F6               	movwf	??_UART_Buffer
  2294  04C8  0876               	movf	??_UART_Buffer,w
  2295  04C9  07F7               	addwf	UART_Buffer@count,f
  2296  04CA                     l1160:
  2297                           
  2298                           ;UART.c: 55:         buffer++;
  2299  04CA  3001               	movlw	1
  2300  04CB  00F6               	movwf	??_UART_Buffer
  2301  04CC  0876               	movf	??_UART_Buffer,w
  2302  04CD  07F8               	addwf	UART_Buffer@buffer,f
  2303  04CE                     l1162:
  2304                           
  2305                           ;UART.c: 51:     while(count<size)
  2306  04CE  0875               	movf	UART_Buffer@size,w
  2307  04CF  0277               	subwf	UART_Buffer@count,w
  2308  04D0  1C03               	skipc
  2309  04D1  2CD3               	goto	u531
  2310  04D2  2CD4               	goto	u530
  2311  04D3                     u531:
  2312  04D3  2CBD               	goto	l1156
  2313  04D4                     u530:
  2314  04D4                     l95:
  2315  04D4  0008               	return
  2316  04D5                     __end_of_UART_Buffer:
  2317                           
  2318                           	psect	text10
  2319  046F                     __ptext10:	
  2320 ;; *************** function _UART_Write *****************
  2321 ;; Defined at:
  2322 ;;		line 34 in file "UART.c"
  2323 ;; Parameters:    Size  Location     Type
  2324 ;;  data            1    wreg     unsigned char 
  2325 ;; Auto vars:     Size  Location     Type
  2326 ;;  data            1    0[COMMON] unsigned char 
  2327 ;; Return value:  Size  Location     Type
  2328 ;;                  1    wreg      void 
  2329 ;; Registers used:
  2330 ;;		wreg
  2331 ;; Tracked objects:
  2332 ;;		On entry : 0/0
  2333 ;;		On exit  : 0/0
  2334 ;;		Unchanged: 0/0
  2335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2336 ;;      Params:         0       0       0       0       0
  2337 ;;      Locals:         1       0       0       0       0
  2338 ;;      Temps:          0       0       0       0       0
  2339 ;;      Totals:         1       0       0       0       0
  2340 ;;Total ram usage:        1 bytes
  2341 ;; Hardware stack levels used: 1
  2342 ;; This function calls:
  2343 ;;		Nothing
  2344 ;; This function is called by:
  2345 ;;		_ADC_print_burst
  2346 ;;		_UART_Buffer
  2347 ;; This function uses a non-reentrant model
  2348 ;;
  2349                           
  2350                           
  2351                           ;psect for function _UART_Write
  2352  046F                     _UART_Write:
  2353                           
  2354                           ;incstack = 0
  2355                           ; Regs used in _UART_Write: [wreg]
  2356                           ;UART_Write@data stored from wreg
  2357  046F  00F0               	movwf	UART_Write@data
  2358  0470                     l1102:
  2359  0470                     l83:	
  2360                           ;UART.c: 34: void UART_Write(uint8_t data);UART.c: 35: {;UART.c: 36:   while(!TRMT);
  2361                           
  2362  0470  1683               	bsf	3,5	;RP0=1, select bank1
  2363  0471  1303               	bcf	3,6	;RP1=0, select bank1
  2364  0472  1C98               	btfss	24,1	;volatile
  2365  0473  2C75               	goto	u391
  2366  0474  2C76               	goto	u390
  2367  0475                     u391:
  2368  0475  2C70               	goto	l83
  2369  0476                     u390:
  2370  0476                     l1104:
  2371                           
  2372                           ;UART.c: 37:   TXREG = data;
  2373  0476  0870               	movf	UART_Write@data,w
  2374  0477  1283               	bcf	3,5	;RP0=0, select bank0
  2375  0478  1303               	bcf	3,6	;RP1=0, select bank0
  2376  0479  0099               	movwf	25	;volatile
  2377  047A                     l86:
  2378  047A  0008               	return
  2379  047B                     __end_of_UART_Write:
  2380                           
  2381                           	psect	text11
  2382  0543                     __ptext11:	
  2383 ;; *************** function _ADC_burst *****************
  2384 ;; Defined at:
  2385 ;;		line 59 in file "ADC.c"
  2386 ;; Parameters:    Size  Location     Type
  2387 ;;  channels        1    wreg     PTR unsigned char 
  2388 ;;		 -> ANChannels(8), 
  2389 ;;  reading         1    3[COMMON] PTR unsigned int 
  2390 ;;		 -> ANRead(16), 
  2391 ;;  numberc         1    4[COMMON] unsigned char 
  2392 ;; Auto vars:     Size  Location     Type
  2393 ;;  channels        1    7[COMMON] PTR unsigned char 
  2394 ;;		 -> ANChannels(8), 
  2395 ;;  n               1    8[COMMON] unsigned char 
  2396 ;; Return value:  Size  Location     Type
  2397 ;;                  1    wreg      void 
  2398 ;; Registers used:
  2399 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2400 ;; Tracked objects:
  2401 ;;		On entry : 0/0
  2402 ;;		On exit  : 0/0
  2403 ;;		Unchanged: 0/0
  2404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2405 ;;      Params:         2       0       0       0       0
  2406 ;;      Locals:         2       0       0       0       0
  2407 ;;      Temps:          2       0       0       0       0
  2408 ;;      Totals:         6       0       0       0       0
  2409 ;;Total ram usage:        6 bytes
  2410 ;; Hardware stack levels used: 1
  2411 ;; Hardware stack levels required when called: 1
  2412 ;; This function calls:
  2413 ;;		_ADC_init_channel
  2414 ;; This function is called by:
  2415 ;;		_main
  2416 ;; This function uses a non-reentrant model
  2417 ;;
  2418                           
  2419                           
  2420                           ;psect for function _ADC_burst
  2421  0543                     _ADC_burst:
  2422                           
  2423                           ;incstack = 0
  2424                           ; Regs used in _ADC_burst: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2425                           ;ADC_burst@channels stored from wreg
  2426  0543  00F7               	movwf	ADC_burst@channels
  2427  0544                     l1272:
  2428                           
  2429                           ;ADC.c: 59: void ADC_burst(uint8_t *channels,uint16_t *reading,uint8_t numberc);ADC.c: 6
      +                          0: {;ADC.c: 61:     for(uint8_t n=0;n<numberc;n++ )
  2430  0544  01F8               	clrf	ADC_burst@n
  2431  0545  2D6D               	goto	l1280
  2432  0546                     l1274:
  2433                           
  2434                           ;ADC.c: 62:     {;ADC.c: 63:         ADC_init_channel(channels[n]);
  2435  0546  0878               	movf	ADC_burst@n,w
  2436  0547  0777               	addwf	ADC_burst@channels,w
  2437  0548  00F5               	movwf	??_ADC_burst
  2438  0549  0875               	movf	??_ADC_burst,w
  2439  054A  0084               	movwf	4
  2440  054B  1383               	bcf	3,7	;select IRP bank0
  2441  054C  0800               	movf	0,w
  2442  054D  120A  118A  24D5  120A  118A  	fcall	_ADC_init_channel
  2443  0552                     l39:	
  2444                           ;ADC.c: 64:         while(ADCON0bits.GO_DONE);
  2445                           
  2446  0552  1283               	bcf	3,5	;RP0=0, select bank0
  2447  0553  1303               	bcf	3,6	;RP1=0, select bank0
  2448  0554  189F               	btfsc	31,1	;volatile
  2449  0555  2D57               	goto	u701
  2450  0556  2D58               	goto	u700
  2451  0557                     u701:
  2452  0557  2D52               	goto	l39
  2453  0558                     u700:
  2454  0558                     l1276:
  2455                           
  2456                           ;ADC.c: 65:         reading[n] = (ADRESH << 8) + ADRESL;
  2457  0558  0878               	movf	ADC_burst@n,w
  2458  0559  00F5               	movwf	??_ADC_burst
  2459  055A  0775               	addwf	??_ADC_burst,w
  2460  055B  0773               	addwf	ADC_burst@reading,w
  2461  055C  00F6               	movwf	??_ADC_burst+1
  2462  055D  0876               	movf	??_ADC_burst+1,w
  2463  055E  0084               	movwf	4
  2464  055F  1683               	bsf	3,5	;RP0=1, select bank1
  2465  0560  1303               	bcf	3,6	;RP1=0, select bank1
  2466  0561  081E               	movf	30,w	;volatile
  2467  0562  1383               	bcf	3,7	;select IRP bank0
  2468  0563  0080               	movwf	0
  2469  0564  0A84               	incf	4,f
  2470  0565  1283               	bcf	3,5	;RP0=0, select bank0
  2471  0566  1303               	bcf	3,6	;RP1=0, select bank0
  2472  0567  081E               	movf	30,w	;volatile
  2473  0568  0080               	movwf	0
  2474  0569                     l1278:
  2475                           
  2476                           ;ADC.c: 66:     }
  2477  0569  3001               	movlw	1
  2478  056A  00F5               	movwf	??_ADC_burst
  2479  056B  0875               	movf	??_ADC_burst,w
  2480  056C  07F8               	addwf	ADC_burst@n,f
  2481  056D                     l1280:
  2482  056D  0874               	movf	ADC_burst@numberc,w
  2483  056E  0278               	subwf	ADC_burst@n,w
  2484  056F  1C03               	skipc
  2485  0570  2D72               	goto	u711
  2486  0571  2D73               	goto	u710
  2487  0572                     u711:
  2488  0572  2D46               	goto	l1274
  2489  0573                     u710:
  2490  0573                     l43:
  2491  0573  0008               	return
  2492  0574                     __end_of_ADC_burst:
  2493                           
  2494                           	psect	text12
  2495  04D5                     __ptext12:	
  2496 ;; *************** function _ADC_init_channel *****************
  2497 ;; Defined at:
  2498 ;;		line 19 in file "ADC.c"
  2499 ;; Parameters:    Size  Location     Type
  2500 ;;  channel         1    wreg     unsigned char 
  2501 ;; Auto vars:     Size  Location     Type
  2502 ;;  channel         1    2[COMMON] unsigned char 
  2503 ;; Return value:  Size  Location     Type
  2504 ;;                  1    wreg      void 
  2505 ;; Registers used:
  2506 ;;		wreg, status,2, status,0
  2507 ;; Tracked objects:
  2508 ;;		On entry : 0/0
  2509 ;;		On exit  : 0/0
  2510 ;;		Unchanged: 0/0
  2511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2512 ;;      Params:         0       0       0       0       0
  2513 ;;      Locals:         1       0       0       0       0
  2514 ;;      Temps:          2       0       0       0       0
  2515 ;;      Totals:         3       0       0       0       0
  2516 ;;Total ram usage:        3 bytes
  2517 ;; Hardware stack levels used: 1
  2518 ;; This function calls:
  2519 ;;		Nothing
  2520 ;; This function is called by:
  2521 ;;		_ADC_burst
  2522 ;; This function uses a non-reentrant model
  2523 ;;
  2524                           
  2525                           
  2526                           ;psect for function _ADC_init_channel
  2527  04D5                     _ADC_init_channel:
  2528                           
  2529                           ;incstack = 0
  2530                           ; Regs used in _ADC_init_channel: [wreg+status,2+status,0]
  2531                           ;ADC_init_channel@channel stored from wreg
  2532  04D5  00F2               	movwf	ADC_init_channel@channel
  2533  04D6                     l1236:
  2534                           
  2535                           ;ADC.c: 19: void ADC_init_channel(char channel);ADC.c: 20: {;ADC.c: 22:     ADCON0 = 0x8
      +                          1;
  2536  04D6  3081               	movlw	129
  2537  04D7  1283               	bcf	3,5	;RP0=0, select bank0
  2538  04D8  1303               	bcf	3,6	;RP1=0, select bank0
  2539  04D9  009F               	movwf	31	;volatile
  2540                           
  2541                           ;ADC.c: 23:     ADCON1 = 0x80;
  2542  04DA  3080               	movlw	128
  2543  04DB  1683               	bsf	3,5	;RP0=1, select bank1
  2544  04DC  1303               	bcf	3,6	;RP1=0, select bank1
  2545  04DD  009F               	movwf	31	;volatile
  2546  04DE                     l1238:
  2547                           
  2548                           ;ADC.c: 24:     ADCON0 |= (channel<<2);
  2549  04DE  0872               	movf	ADC_init_channel@channel,w	;volatile
  2550  04DF  00F0               	movwf	??_ADC_init_channel
  2551  04E0  3001               	movlw	1
  2552  04E1                     u625:
  2553  04E1  1003               	clrc
  2554  04E2  0DF0               	rlf	??_ADC_init_channel,f
  2555  04E3  3EFF               	addlw	-1
  2556  04E4  1D03               	skipz
  2557  04E5  2CE1               	goto	u625
  2558  04E6  1003               	clrc
  2559  04E7  0D70               	rlf	??_ADC_init_channel,w
  2560  04E8  00F1               	movwf	??_ADC_init_channel+1
  2561  04E9  0871               	movf	??_ADC_init_channel+1,w
  2562  04EA  1283               	bcf	3,5	;RP0=0, select bank0
  2563  04EB  1303               	bcf	3,6	;RP1=0, select bank0
  2564  04EC  049F               	iorwf	31,f	;volatile
  2565  04ED                     l1240:
  2566                           
  2567                           ;ADC.c: 27:     _delay((unsigned long)((5)*(16000000/4000000.0)));
  2568  04ED  3006               	movlw	6
  2569  04EE  00F0               	movwf	??_ADC_init_channel
  2570  04EF                     u767:
  2571  04EF  0BF0               	decfsz	??_ADC_init_channel,f
  2572  04F0  2CEF               	goto	u767
  2573  04F1  0000               	nop
  2574  04F2                     l1242:
  2575                           
  2576                           ;ADC.c: 30:     GO_DONE = 1;
  2577  04F2  1283               	bcf	3,5	;RP0=0, select bank0
  2578  04F3  1303               	bcf	3,6	;RP1=0, select bank0
  2579  04F4  149F               	bsf	31,1	;volatile
  2580  04F5                     l31:
  2581  04F5  0008               	return
  2582  04F6                     __end_of_ADC_init_channel:
  2583  007E                     btemp	set	126	;btemp
  2584  007E                     wtemp0	set	126
  2585                           
  2586                           	psect	config
  2587                           
  2588                           ;Config register CONFIG1 @ 0x2007
  2589                           ;	Oscillator Selection bits
  2590                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  2591                           ;	Watchdog Timer Enable bit
  2592                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2593                           ;	Power-up Timer Enable bit
  2594                           ;	PWRTE = OFF, PWRT disabled
  2595                           ;	RE3/MCLR pin function select bit
  2596                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  2597                           ;	Code Protection bit
  2598                           ;	CP = OFF, Program memory code protection is disabled
  2599                           ;	Data Code Protection bit
  2600                           ;	CPD = OFF, Data memory code protection is disabled
  2601                           ;	Brown Out Reset Selection bits
  2602                           ;	BOREN = OFF, BOR disabled
  2603                           ;	Internal External Switchover bit
  2604                           ;	IESO = ON, Internal/External Switchover mode is enabled
  2605                           ;	Fail-Safe Clock Monitor Enabled bit
  2606                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2607                           ;	Low Voltage Programming Enable bit
  2608                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2609                           ;	In-Circuit Debugger Mode bit
  2610                           ;	DEBUG = 0x1, unprogrammed default
  2611  2007                     	org	8199
  2612  2007  24F2               	dw	9458
  2613                           
  2614                           ;Config register CONFIG2 @ 0x2008
  2615                           ;	Brown-out Reset Selection bit
  2616                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2617                           ;	Flash Program Memory Self Write Enable bits
  2618                           ;	WRT = OFF, Write protection off
  2619  2008                     	org	8200
  2620  2008  3FFF               	dw	16383

Data Sizes:
    Strings     4
    Constant    10
    Data        27
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     33      63
    BANK1            80      0      19
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 19
		 -> mensaje(BANK1[19]), UART_number@buffer(BANK0[10]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 19
		 -> mensaje(BANK1[19]), UART_number@buffer(BANK0[10]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_1(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> UART_number@buffer(BANK0[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    UART_Buffer@buffer	PTR unsigned char  size(1) Largest target is 19
		 -> mensaje(BANK1[19]), UART_number@buffer(BANK0[10]), 

    ADC_print_burst@BurstReadings	PTR unsigned int  size(1) Largest target is 16
		 -> ANRead(BANK0[16]), 

    ADC_burst@reading	PTR unsigned int  size(1) Largest target is 16
		 -> ANRead(BANK0[16]), 

    ADC_burst@channels	PTR unsigned char  size(1) Largest target is 8
		 -> ANChannels(BANK0[8]), 


Critical Paths under _main in COMMON

    _UART_TX_Init->___lldiv
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _UART_Buffer->_strlen
    _ADC_burst->_ADC_init_channel

Critical Paths under _main in BANK0

    _main->_ADC_print_burst
    _ADC_print_burst->_UART_number
    _UART_number->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3334
                                             31 BANK0      2     2      0
                          _ADC_burst
                    _ADC_print_burst
                        _UART_Buffer
                       _UART_TX_Init
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _UART_TX_Init                                        10     6      4     457
                                              0 BANK0     10     6      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _ADC_print_burst                                      5     4      1    2071
                                             26 BANK0      5     4      1
                         _UART_Write
                        _UART_number
 ---------------------------------------------------------------------------------
 (2) _UART_number                                         13    11      2    1850
                                             13 BANK0     13    11      2
                        _UART_Buffer
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strlen                                               5     3      2     156
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             21    18      3    1211
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _UART_Buffer                                          4     3      1     309
                                              5 COMMON     4     3      1
                         _UART_Write
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_burst                                            6     4      2     341
                                              3 COMMON     6     4      2
                   _ADC_init_channel
 ---------------------------------------------------------------------------------
 (2) _ADC_init_channel                                     3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_burst
     _ADC_init_channel
   _ADC_print_burst
     _UART_Write
     _UART_number
       _UART_Buffer
         _UART_Write
         _strlen (ARG)
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
       _strlen
   _UART_Buffer
   _UART_TX_Init
     ___lldiv
   _strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      13       7       23.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     21      3F       5       78.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      60      12        0.0%
ABS                  0      0      60       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Jun 06 17:35:02 2022

                            pc 0002                             l31 04F5                             l43 0573  
                           l39 0552                             l80 068A                             l49 0542  
                           l83 0470                             l86 047A                             l95 04D4  
                           l98 0518                             fsr 0004             __size_of_ADC_burst 0031  
                          l308 06F0                            l268 07D8                            l544 05F1  
                          l554 05AD                            l726 04B9                            _GIE 005F  
                          _RC2 003A                            u400 05B6                            u401 05B5  
                          u420 05C8                            u500 0596                            u421 05C7  
                          u501 0595                            u415 05BA                            u440 05D9  
                          u520 05A9                            u600 07D4                            u441 05D8  
                          u521 05A8                            u505 0592                            u601 07D3  
                          u530 04D4                            u610 04B3                            u531 04D3  
                          u435 05C9                            u515 059D                            u611 04B2  
                          u700 0558                            u460 05ED                            u540 06FF  
                          u701 0557                            u461 05EC                            u445 05D5  
                          u541 06FE                            u710 0573                            u390 0476  
                          u470 057A                            u550 0739                            u630 069B  
                          u711 0572                            u391 0475                            u455 05E1  
                          u471 0579                            u551 0738                            u631 069A  
                          u560 075F                            u720 053C                            u625 04E1  
                          u561 075E                            u721 053B                            u490 058C  
                          u570 076A                            u650 06AF                            u730 0665  
                          u491 058B                            u571 0769                            u651 06AE  
                          u580 0770                            u485 057E                            u581 076F  
                          u565 075B                            u645 06A0                            u590 07C2  
                          u670 06CA                            u591 07C1                            u671 06C9  
                          u735 0660                            u665 06B1                            u690 06E8  
                          u691 06E7                            u675 06C6                            u685 06DA  
                          u757 0635                            u767 04EF                            fsr0 0004  
                          indf 0000                           l1102 0470                           l1110 05B6  
                         l1104 0476                           l1120 05D9                           l1112 05B9  
                         l1200 076A                           l1122 05DF                           l1114 05C0  
                         l1106 05AE                           l1210 07AE                           l1202 0770  
                         l1124 05E0                           l1116 05C4                           l1108 05B0  
                         l1140 0588                           l1132 0574                           l1212 07B5  
                         l1204 0777                           l1300 067C                           l1126 05E7  
                         l1118 05C8                           l1142 058C                           l1134 057A  
                         l1150 05A9                           l1214 07B9                           l1206 077B  
                         l1230 04AB                           l1302 0682                           l1240 04ED  
                         l1160 04CA                           l1128 05ED                           l1144 0596  
                         l1136 057D                           l1208 0780                           l1216 07C2  
                         l1232 04B3                           l1304 0683                           l1242 04F2  
                         l1162 04CE                           l1154 04BB                           l1146 059C  
                         l1138 0584                           l1218 07D4                           l1170 0706  
                         l1226 04A2                           l1250 069B                           l1306 0686  
                         l1236 04D6                           l1156 04BD                           l1148 05A3  
                         l1180 0731                           l1172 070B                           l1164 06F4  
                         l1228 04A7                           l1244 04F6                           l1260 06CA  
                         l1252 069E                           l1308 0689                           l1238 04DE  
                         l1158 04C6                           l1182 0735                           l1166 06F9  
                         l1246 0506                           l1262 06D8                           l1254 06AB  
                         l1280 056D                           l1272 0544                           l1184 0739  
                         l1176 070C                           l1168 06FF                           l1264 06D9  
                         l1256 06AF                           l1248 068B                           l1274 0546  
                         l1194 0744                           l1186 073D                           l1178 0729  
                         l1290 053C                           l1282 051C                           l1266 06E2  
                         l1258 06B8                           l1370 0623                           l1276 0558  
                         l1188 0742                           l1284 051E                           l1268 06E8  
                         l1292 063E                           l1372 062F                           l1364 05F2  
                         l1278 0569                           l1198 0760                           l1286 0530  
                         l1294 0670                           l1366 0601                           l1288 0536  
                         l1296 0673                           l1368 0613                           l1394 071E  
                         l1298 0676                           _ADIE 0466                           _ADIF 0066  
                         STR_1 0013                           _BRGH 04C2               ?_ADC_print_burst 003A  
                         _PEIE 005E                           _TMR1 000E                           _SPEN 00C7  
                         _TRMT 04C1                           _TXEN 04C5                           _SYNC 04C4  
                         _main 05F2                           btemp 007E                           start 0000  
    __size_of_ADC_init_channel 0021  ADC_print_burst@NumberReadings 003A                          ?_main 0070  
                        _BRG16 0C3B                __end_of___lldiv 06F1                __end_of___lwdiv 05F2  
              __end_of___lwmod 05AE                          _SPBRG 0099                          _TXREG 0019  
                  ?_UART_Write 0070                __end_of_dpowers 0013                          pclath 000A  
                        status 0003                          wtemp0 007E                __end_of_sprintf 07D9  
            __end_of_ADC_burst 0574                __initialization 07D9                   __end_of_main 063E  
                       ??_main 003F                         _ADCON0 001F                         _ADCON1 009F  
                       _ADRESH 001E                         _ADRESL 009E                         _ANRead 0047  
                       _TMR1IE 0460                         _TMR1IF 0060                         _TMR1CS 0081  
                       _SPBRGH 009A                         _TMR1ON 0080                         _TRISC6 043E  
                 ?_UART_Buffer 0075            __size_of_UART_Write 000C               UART_TX_Init@baud 0020  
                    ??___lldiv 0078              ADC_burst@channels 0077                      ??___lwdiv 0074  
             UART_TX_Init@temp 0028                      ??___lwmod 007C                   ?_UART_number 002D  
                       _strlen 04A1                      ??_sprintf 0023               UART_Buffer@count 0077  
      __end_of__initialization 07FC               _ADC_init_channel 04D5                 __pcstackCOMMON 0070  
                 __pidataBANK0 0467                   __pidataBANK1 048E         _timer_overflow_counter 0041  
                   __pbssBANK0 0041               ADC_print_burst@n 003E                     __pmaintext 05F2  
                      _AN0_RES 0045                        _T1CKPS0 0084                        _T1CKPS1 0085  
                      ?_strlen 0070                        _GO_DONE 00F9                   ??_UART_Write 0070  
                ?_UART_TX_Init 0020                     __stringtab 0003                     ADC_burst@n 0078  
     __size_of_ADC_print_burst 002A           __size_of_UART_Buffer 001B                      _ADC_burst 0543  
                      ___lldiv 068B             __end_of_UART_Write 047B                        ___lwdiv 05AE  
                      ___lwmod 0574                        __ptext1 063E                        __ptext2 068B  
                      __ptext3 0519                        __ptext4 04F6                        __ptext5 04A1  
                      __ptext6 06F1                        __ptext7 0574                        __ptext8 05AE  
                      __ptext9 04BA           __size_of_UART_number 0023                __size_of_strlen 0019  
                      _dpowers 0009                        _mensaje 00A0                 ??_UART_TX_Init 0024  
                      _sprintf 06F1                        clrloop0 0460           end_of_initialization 07FC  
              ___lldiv@divisor 0070                ___lldiv@counter 007D                     ?_ADC_burst 0073  
                      strlen@s 0074                 UART_Write@data 0070              UART_Buffer@buffer 0078  
     __end_of_ADC_init_channel 04F6              ??_ADC_print_burst 003B              UART_number@buffer 0030  
               __end_of_strlen 04BA              UART_number@number 002D            start_initialization 07D9  
              _timer_overflows 0043                    ??_ADC_burst 0075                     init_fetch0 047B  
         __end_of_UART_TX_Init 068B                    __pdataBANK0 0057                    __pdataBANK1 00A0  
             ADC_burst@reading 0073                       ??_strlen 0072               ADC_burst@numberc 0074  
              UART_Buffer@size 0075                      ___latbits 0002                  __pcstackBANK0 0020  
                  sprintf@flag 0027                    sprintf@prec 0028               ___lwdiv@dividend 0072  
 ADC_print_burst@BurstReadings 003D                       ?___lldiv 0070                       ?___lwdiv 0070  
                     ?___lwmod 0078                      __pstrings 0003               ___lwdiv@quotient 0075  
                     ?_sprintf 0020                  ??_UART_Buffer 0076                      clear_ram0 045F  
                ??_UART_number 002F                     _ADCON0bits 001F                    __stringbase 0008  
            ?_ADC_init_channel 0070             ??_ADC_init_channel 0070                _ADC_print_burst 0519  
        __size_of_UART_TX_Init 004D            __end_of_UART_Buffer 04D5               __size_of___lldiv 0066  
             __size_of___lwdiv 0044               __size_of___lwmod 003A             __end_of__stringtab 0009  
                   sprintf@val 0029            __end_of_UART_number 0519                ___lwdiv@divisor 0070  
              ___lwdiv@counter 0077                       __ptext10 046F                       __ptext11 0543  
                     __ptext12 04D5               __size_of_sprintf 00E8                   _UART_TX_Init 063E  
                   _ANChannels 0057                  __size_of_main 004C                       init_ram0 047F  
      ADC_init_channel@channel 0072        __end_of_ADC_print_burst 0543                      sprintf@ap 0026  
                    sprintf@sp 002B               ___lwmod@dividend 007A               ___lldiv@dividend 0074  
                  _UART_Buffer 04BA                      stringcode 0003                    _UART_number 04F6  
                     sprintf@c 002C                       sprintf@f 0020               ___lldiv@quotient 0079  
              ___lwmod@divisor 0078                       strlen@cp 0073                ___lwmod@counter 007D  
                     stringdir 0003                       stringtab 0003                     _UART_Write 046F  
