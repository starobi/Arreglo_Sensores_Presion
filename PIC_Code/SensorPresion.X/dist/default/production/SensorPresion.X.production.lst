

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Jun 08 18:52:01 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    21                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.20
    32                           ; Generated 12/02/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F886 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  0089                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  008F                     	;# 
   108  0090                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0094                     	;# 
   115  0095                     	;# 
   116  0096                     	;# 
   117  0097                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009A                     	;# 
   121  009B                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  0105                     	;# 
   127  0107                     	;# 
   128  0108                     	;# 
   129  0109                     	;# 
   130  010C                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  010F                     	;# 
   135  0185                     	;# 
   136  0187                     	;# 
   137  0188                     	;# 
   138  0189                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  0000                     	;# 
   142  0001                     	;# 
   143  0002                     	;# 
   144  0003                     	;# 
   145  0004                     	;# 
   146  0005                     	;# 
   147  0006                     	;# 
   148  0007                     	;# 
   149  0009                     	;# 
   150  000A                     	;# 
   151  000B                     	;# 
   152  000C                     	;# 
   153  000D                     	;# 
   154  000E                     	;# 
   155  000E                     	;# 
   156  000F                     	;# 
   157  0010                     	;# 
   158  0011                     	;# 
   159  0012                     	;# 
   160  0013                     	;# 
   161  0014                     	;# 
   162  0015                     	;# 
   163  0015                     	;# 
   164  0016                     	;# 
   165  0017                     	;# 
   166  0018                     	;# 
   167  0019                     	;# 
   168  001A                     	;# 
   169  001B                     	;# 
   170  001B                     	;# 
   171  001C                     	;# 
   172  001D                     	;# 
   173  001E                     	;# 
   174  001F                     	;# 
   175  0081                     	;# 
   176  0085                     	;# 
   177  0086                     	;# 
   178  0087                     	;# 
   179  0089                     	;# 
   180  008C                     	;# 
   181  008D                     	;# 
   182  008E                     	;# 
   183  008F                     	;# 
   184  0090                     	;# 
   185  0091                     	;# 
   186  0092                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0093                     	;# 
   190  0094                     	;# 
   191  0095                     	;# 
   192  0096                     	;# 
   193  0097                     	;# 
   194  0098                     	;# 
   195  0099                     	;# 
   196  009A                     	;# 
   197  009B                     	;# 
   198  009C                     	;# 
   199  009D                     	;# 
   200  009E                     	;# 
   201  009F                     	;# 
   202  0105                     	;# 
   203  0107                     	;# 
   204  0108                     	;# 
   205  0109                     	;# 
   206  010C                     	;# 
   207  010C                     	;# 
   208  010D                     	;# 
   209  010E                     	;# 
   210  010F                     	;# 
   211  0185                     	;# 
   212  0187                     	;# 
   213  0188                     	;# 
   214  0189                     	;# 
   215  018C                     	;# 
   216  018D                     	;# 
   217  0000                     	;# 
   218  0001                     	;# 
   219  0002                     	;# 
   220  0003                     	;# 
   221  0004                     	;# 
   222  0005                     	;# 
   223  0006                     	;# 
   224  0007                     	;# 
   225  0009                     	;# 
   226  000A                     	;# 
   227  000B                     	;# 
   228  000C                     	;# 
   229  000D                     	;# 
   230  000E                     	;# 
   231  000E                     	;# 
   232  000F                     	;# 
   233  0010                     	;# 
   234  0011                     	;# 
   235  0012                     	;# 
   236  0013                     	;# 
   237  0014                     	;# 
   238  0015                     	;# 
   239  0015                     	;# 
   240  0016                     	;# 
   241  0017                     	;# 
   242  0018                     	;# 
   243  0019                     	;# 
   244  001A                     	;# 
   245  001B                     	;# 
   246  001B                     	;# 
   247  001C                     	;# 
   248  001D                     	;# 
   249  001E                     	;# 
   250  001F                     	;# 
   251  0081                     	;# 
   252  0085                     	;# 
   253  0086                     	;# 
   254  0087                     	;# 
   255  0089                     	;# 
   256  008C                     	;# 
   257  008D                     	;# 
   258  008E                     	;# 
   259  008F                     	;# 
   260  0090                     	;# 
   261  0091                     	;# 
   262  0092                     	;# 
   263  0093                     	;# 
   264  0093                     	;# 
   265  0093                     	;# 
   266  0094                     	;# 
   267  0095                     	;# 
   268  0096                     	;# 
   269  0097                     	;# 
   270  0098                     	;# 
   271  0099                     	;# 
   272  009A                     	;# 
   273  009B                     	;# 
   274  009C                     	;# 
   275  009D                     	;# 
   276  009E                     	;# 
   277  009F                     	;# 
   278  0105                     	;# 
   279  0107                     	;# 
   280  0108                     	;# 
   281  0109                     	;# 
   282  010C                     	;# 
   283  010C                     	;# 
   284  010D                     	;# 
   285  010E                     	;# 
   286  010F                     	;# 
   287  0185                     	;# 
   288  0187                     	;# 
   289  0188                     	;# 
   290  0189                     	;# 
   291  018C                     	;# 
   292  018D                     	;# 
   293  0000                     	;# 
   294  0001                     	;# 
   295  0002                     	;# 
   296  0003                     	;# 
   297  0004                     	;# 
   298  0005                     	;# 
   299  0006                     	;# 
   300  0007                     	;# 
   301  0009                     	;# 
   302  000A                     	;# 
   303  000B                     	;# 
   304  000C                     	;# 
   305  000D                     	;# 
   306  000E                     	;# 
   307  000E                     	;# 
   308  000F                     	;# 
   309  0010                     	;# 
   310  0011                     	;# 
   311  0012                     	;# 
   312  0013                     	;# 
   313  0014                     	;# 
   314  0015                     	;# 
   315  0015                     	;# 
   316  0016                     	;# 
   317  0017                     	;# 
   318  0018                     	;# 
   319  0019                     	;# 
   320  001A                     	;# 
   321  001B                     	;# 
   322  001B                     	;# 
   323  001C                     	;# 
   324  001D                     	;# 
   325  001E                     	;# 
   326  001F                     	;# 
   327  0081                     	;# 
   328  0085                     	;# 
   329  0086                     	;# 
   330  0087                     	;# 
   331  0089                     	;# 
   332  008C                     	;# 
   333  008D                     	;# 
   334  008E                     	;# 
   335  008F                     	;# 
   336  0090                     	;# 
   337  0091                     	;# 
   338  0092                     	;# 
   339  0093                     	;# 
   340  0093                     	;# 
   341  0093                     	;# 
   342  0094                     	;# 
   343  0095                     	;# 
   344  0096                     	;# 
   345  0097                     	;# 
   346  0098                     	;# 
   347  0099                     	;# 
   348  009A                     	;# 
   349  009B                     	;# 
   350  009C                     	;# 
   351  009D                     	;# 
   352  009E                     	;# 
   353  009F                     	;# 
   354  0105                     	;# 
   355  0107                     	;# 
   356  0108                     	;# 
   357  0109                     	;# 
   358  010C                     	;# 
   359  010C                     	;# 
   360  010D                     	;# 
   361  010E                     	;# 
   362  010F                     	;# 
   363  0185                     	;# 
   364  0187                     	;# 
   365  0188                     	;# 
   366  0189                     	;# 
   367  018C                     	;# 
   368  018D                     	;# 
   369  0000                     	;# 
   370  0001                     	;# 
   371  0002                     	;# 
   372  0003                     	;# 
   373  0004                     	;# 
   374  0005                     	;# 
   375  0006                     	;# 
   376  0007                     	;# 
   377  0009                     	;# 
   378  000A                     	;# 
   379  000B                     	;# 
   380  000C                     	;# 
   381  000D                     	;# 
   382  000E                     	;# 
   383  000E                     	;# 
   384  000F                     	;# 
   385  0010                     	;# 
   386  0011                     	;# 
   387  0012                     	;# 
   388  0013                     	;# 
   389  0014                     	;# 
   390  0015                     	;# 
   391  0015                     	;# 
   392  0016                     	;# 
   393  0017                     	;# 
   394  0018                     	;# 
   395  0019                     	;# 
   396  001A                     	;# 
   397  001B                     	;# 
   398  001B                     	;# 
   399  001C                     	;# 
   400  001D                     	;# 
   401  001E                     	;# 
   402  001F                     	;# 
   403  0081                     	;# 
   404  0085                     	;# 
   405  0086                     	;# 
   406  0087                     	;# 
   407  0089                     	;# 
   408  008C                     	;# 
   409  008D                     	;# 
   410  008E                     	;# 
   411  008F                     	;# 
   412  0090                     	;# 
   413  0091                     	;# 
   414  0092                     	;# 
   415  0093                     	;# 
   416  0093                     	;# 
   417  0093                     	;# 
   418  0094                     	;# 
   419  0095                     	;# 
   420  0096                     	;# 
   421  0097                     	;# 
   422  0098                     	;# 
   423  0099                     	;# 
   424  009A                     	;# 
   425  009B                     	;# 
   426  009C                     	;# 
   427  009D                     	;# 
   428  009E                     	;# 
   429  009F                     	;# 
   430  0105                     	;# 
   431  0107                     	;# 
   432  0108                     	;# 
   433  0109                     	;# 
   434  010C                     	;# 
   435  010C                     	;# 
   436  010D                     	;# 
   437  010E                     	;# 
   438  010F                     	;# 
   439  0185                     	;# 
   440  0187                     	;# 
   441  0188                     	;# 
   442  0189                     	;# 
   443  018C                     	;# 
   444  018D                     	;# 
   445  0000                     	;# 
   446  0001                     	;# 
   447  0002                     	;# 
   448  0003                     	;# 
   449  0004                     	;# 
   450  0005                     	;# 
   451  0006                     	;# 
   452  0007                     	;# 
   453  0009                     	;# 
   454  000A                     	;# 
   455  000B                     	;# 
   456  000C                     	;# 
   457  000D                     	;# 
   458  000E                     	;# 
   459  000E                     	;# 
   460  000F                     	;# 
   461  0010                     	;# 
   462  0011                     	;# 
   463  0012                     	;# 
   464  0013                     	;# 
   465  0014                     	;# 
   466  0015                     	;# 
   467  0015                     	;# 
   468  0016                     	;# 
   469  0017                     	;# 
   470  0018                     	;# 
   471  0019                     	;# 
   472  001A                     	;# 
   473  001B                     	;# 
   474  001B                     	;# 
   475  001C                     	;# 
   476  001D                     	;# 
   477  001E                     	;# 
   478  001F                     	;# 
   479  0081                     	;# 
   480  0085                     	;# 
   481  0086                     	;# 
   482  0087                     	;# 
   483  0089                     	;# 
   484  008C                     	;# 
   485  008D                     	;# 
   486  008E                     	;# 
   487  008F                     	;# 
   488  0090                     	;# 
   489  0091                     	;# 
   490  0092                     	;# 
   491  0093                     	;# 
   492  0093                     	;# 
   493  0093                     	;# 
   494  0094                     	;# 
   495  0095                     	;# 
   496  0096                     	;# 
   497  0097                     	;# 
   498  0098                     	;# 
   499  0099                     	;# 
   500  009A                     	;# 
   501  009B                     	;# 
   502  009C                     	;# 
   503  009D                     	;# 
   504  009E                     	;# 
   505  009F                     	;# 
   506  0105                     	;# 
   507  0107                     	;# 
   508  0108                     	;# 
   509  0109                     	;# 
   510  010C                     	;# 
   511  010C                     	;# 
   512  010D                     	;# 
   513  010E                     	;# 
   514  010F                     	;# 
   515  0185                     	;# 
   516  0187                     	;# 
   517  0188                     	;# 
   518  0189                     	;# 
   519  018C                     	;# 
   520  018D                     	;# 
   521                           
   522                           	psect	idataBANK0
   523  0468                     __pidataBANK0:
   524                           
   525                           ;initializer for _ANChannels
   526  0468  340C               	retlw	12
   527  0469  340A               	retlw	10
   528  046A  3408               	retlw	8
   529  046B  3409               	retlw	9
   530  046C  340B               	retlw	11
   531  046D  340D               	retlw	13
   532  046E  3401               	retlw	1
   533  046F  3400               	retlw	0
   534                           
   535                           	psect	idataBANK1
   536  048F                     __pidataBANK1:
   537                           
   538                           ;initializer for _mensaje
   539  048F  3450               	retlw	80
   540  0490  3472               	retlw	114
   541  0491  346F               	retlw	111
   542  0492  3467               	retlw	103
   543  0493  3472               	retlw	114
   544  0494  3461               	retlw	97
   545  0495  346D               	retlw	109
   546  0496  3461               	retlw	97
   547  0497  3420               	retlw	32
   548  0498  3449               	retlw	73
   549  0499  346E               	retlw	110
   550  049A  3469               	retlw	105
   551  049B  3463               	retlw	99
   552  049C  3469               	retlw	105
   553  049D  3461               	retlw	97
   554  049E  3464               	retlw	100
   555  049F  346F               	retlw	111
   556  04A0  340A               	retlw	10
   557  04A1  3400               	retlw	0
   558                           
   559                           	psect	strings
   560  0003                     __pstrings:
   561  0003                     stringtab:
   562  0003                     __stringtab:
   563  0003                     stringcode:	
   564                           ;	String table - string pointers are 1 byte each
   565                           
   566  0003                     stringdir:
   567  0003  3000               	movlw	high stringdir
   568  0004  008A               	movwf	10
   569  0005  0804               	movf	4,w
   570  0006  0A84               	incf	4,f
   571  0007  0782               	addwf	2,f
   572  0008                     __stringbase:
   573  0008  3400               	retlw	0
   574  0009                     __end_of__stringtab:
   575  0009                     _dpowers:
   576  0009  3401               	retlw	1
   577  000A  3400               	retlw	0
   578  000B  340A               	retlw	10
   579  000C  3400               	retlw	0
   580  000D  3464               	retlw	100
   581  000E  3400               	retlw	0
   582  000F  34E8               	retlw	232
   583  0010  3403               	retlw	3
   584  0011  3410               	retlw	16
   585  0012  3427               	retlw	39
   586  0013                     __end_of_dpowers:
   587  000E                     _TMR1	set	14
   588  0019                     _TXREG	set	25
   589  001E                     _ADRESH	set	30
   590  001F                     _ADCON0bits	set	31
   591  001F                     _ADCON0	set	31
   592  003A                     _RC2	set	58
   593  0080                     _TMR1ON	set	128
   594  0060                     _TMR1IF	set	96
   595  0085                     _T1CKPS1	set	133
   596  0084                     _T1CKPS0	set	132
   597  0081                     _TMR1CS	set	129
   598  00C7                     _SPEN	set	199
   599  005F                     _GIE	set	95
   600  005E                     _PEIE	set	94
   601  0066                     _ADIF	set	102
   602  00F9                     _GO_DONE	set	249
   603  009A                     _SPBRGH	set	154
   604  0099                     _SPBRG	set	153
   605  009E                     _ADRESL	set	158
   606  009F                     _ADCON1	set	159
   607  0460                     _TMR1IE	set	1120
   608  04C1                     _TRMT	set	1217
   609  04C5                     _TXEN	set	1221
   610  043E                     _TRISC6	set	1086
   611  04C4                     _SYNC	set	1220
   612  04C2                     _BRGH	set	1218
   613  0466                     _ADIE	set	1126
   614  0C3B                     _BRG16	set	3131
   615  0013                     STR_1:
   616  0013  3425               	retlw	37	;'%'
   617  0014  3464               	retlw	100	;'d'
   618  0015  340A               	retlw	10
   619  0016  3400               	retlw	0
   620                           
   621                           	psect	cinit
   622  07D9                     start_initialization:	
   623                           ; #config settings
   624                           
   625  07D9                     __initialization:
   626                           
   627                           ; Initialize objects allocated to BANK1
   628  07D9  1383               	bcf	3,7	;select IRP bank0
   629  07DA  30B3               	movlw	low (__pdataBANK1+19)
   630  07DB  00FD               	movwf	btemp+-1
   631  07DC  3004               	movlw	high __pidataBANK1
   632  07DD  00FE               	movwf	btemp
   633  07DE  308F               	movlw	low __pidataBANK1
   634  07DF  00FF               	movwf	btemp+1
   635  07E0  30A0               	movlw	low __pdataBANK1
   636  07E1  0084               	movwf	4
   637  07E2  120A  118A  2480  120A  118A  	fcall	init_ram0
   638                           
   639                           ; Initialize objects allocated to BANK0
   640  07E7  305F               	movlw	low (__pdataBANK0+8)
   641  07E8  00FD               	movwf	btemp+-1
   642  07E9  3004               	movlw	high __pidataBANK0
   643  07EA  00FE               	movwf	btemp
   644  07EB  3068               	movlw	low __pidataBANK0
   645  07EC  00FF               	movwf	btemp+1
   646  07ED  3057               	movlw	low __pdataBANK0
   647  07EE  0084               	movwf	4
   648  07EF  120A  118A  2480  120A  118A  	fcall	init_ram0
   649                           
   650                           ; Clear objects allocated to BANK0
   651  07F4  3041               	movlw	low __pbssBANK0
   652  07F5  0084               	movwf	4
   653  07F6  3057               	movlw	low (__pbssBANK0+22)
   654  07F7  120A  118A  2460  120A  118A  	fcall	clear_ram0
   655  07FC                     end_of_initialization:	
   656                           ;End of C runtime variable initialization code
   657                           
   658  07FC                     __end_of__initialization:
   659  07FC  0183               	clrf	3
   660  07FD  120A  118A  2DF3   	ljmp	_main	;jump to C main() function
   661                           
   662                           	psect	bssBANK0
   663  0041                     __pbssBANK0:
   664  0041                     _timer_overflow_counter:
   665  0041                     	ds	2
   666  0043                     _timer_overflows:
   667  0043                     	ds	2
   668  0045                     _AN0_RES:
   669  0045                     	ds	2
   670  0047                     _ANRead:
   671  0047                     	ds	16
   672                           
   673                           	psect	dataBANK0
   674  0057                     __pdataBANK0:
   675  0057                     _ANChannels:
   676  0057                     	ds	8
   677                           
   678                           	psect	dataBANK1
   679  00A0                     __pdataBANK1:
   680  00A0                     _mensaje:
   681  00A0                     	ds	19
   682                           
   683                           	psect	inittext
   684  047C                     init_fetch0:	
   685                           ;	Called with low address in FSR and high address in W
   686                           
   687  047C  087E               	movf	btemp,w
   688  047D  008A               	movwf	10
   689  047E  087F               	movf	btemp+1,w
   690  047F  0082               	movwf	2
   691  0480                     init_ram0:	
   692                           ;Called with:
   693                           ;	high address of idata address in btemp 
   694                           ;	low address of idata address in btemp+1 
   695                           ;	low address of data in FSR
   696                           ;	high address + 1 of data in btemp-1
   697                           
   698  0480  120A  118A  247C  120A  118A  	fcall	init_fetch0
   699  0485  0080               	movwf	0
   700  0486  0A84               	incf	4,f
   701  0487  0804               	movf	4,w
   702  0488  067D               	xorwf	btemp+-1,w
   703  0489  1903               	btfsc	3,2
   704  048A  3400               	retlw	0
   705  048B  0AFF               	incf	btemp+1,f
   706  048C  1903               	btfsc	3,2
   707  048D  0AFE               	incf	btemp,f
   708  048E  2C80               	goto	init_ram0
   709                           
   710                           	psect	clrtext
   711  0460                     clear_ram0:	
   712                           ;	Called with FSR containing the base address, and
   713                           ;	W with the last address+1
   714                           
   715  0460  0064               	clrwdt	;clear the watchdog before getting into this loop
   716  0461                     clrloop0:
   717  0461  0180               	clrf	0	;clear RAM location pointed to by FSR
   718  0462  0A84               	incf	4,f	;increment pointer
   719  0463  0604               	xorwf	4,w	;XOR with final address
   720  0464  1903               	btfsc	3,2	;have we reached the end yet?
   721  0465  3400               	retlw	0	;all done for this memory range, return
   722  0466  0604               	xorwf	4,w	;XOR again to restore value
   723  0467  2C61               	goto	clrloop0	;do the next byte
   724                           
   725                           	psect	cstackCOMMON
   726  0070                     __pcstackCOMMON:
   727  0070                     ?_UART_Write:
   728  0070                     ??_UART_Write:	
   729                           ; 1 bytes @ 0x0
   730                           
   731  0070                     ?_ADC_init_channel:	
   732                           ; 1 bytes @ 0x0
   733                           
   734  0070                     ??_ADC_init_channel:	
   735                           ; 1 bytes @ 0x0
   736                           
   737  0070                     ?_main:	
   738                           ; 1 bytes @ 0x0
   739                           
   740  0070                     ?_strlen:	
   741                           ; 1 bytes @ 0x0
   742                           
   743  0070                     ?___lwdiv:	
   744                           ; 2 bytes @ 0x0
   745                           
   746  0070                     ?___lldiv:	
   747                           ; 2 bytes @ 0x0
   748                           
   749  0070                     UART_Write@data:	
   750                           ; 4 bytes @ 0x0
   751                           
   752  0070                     ___lwdiv@divisor:	
   753                           ; 1 bytes @ 0x0
   754                           
   755  0070                     ___lldiv@divisor:	
   756                           ; 2 bytes @ 0x0
   757                           
   758                           
   759                           ; 4 bytes @ 0x0
   760  0070                     	ds	2
   761  0072                     ??_strlen:
   762  0072                     ADC_init_channel@channel:	
   763                           ; 1 bytes @ 0x2
   764                           
   765  0072                     ___lwdiv@dividend:	
   766                           ; 1 bytes @ 0x2
   767                           
   768                           
   769                           ; 2 bytes @ 0x2
   770  0072                     	ds	1
   771  0073                     ?_ADC_burst:
   772  0073                     ADC_burst@reading:	
   773                           ; 1 bytes @ 0x3
   774                           
   775  0073                     strlen@cp:	
   776                           ; 1 bytes @ 0x3
   777                           
   778                           
   779                           ; 1 bytes @ 0x3
   780  0073                     	ds	1
   781  0074                     ??___lwdiv:
   782  0074                     ADC_burst@numberc:	
   783                           ; 1 bytes @ 0x4
   784                           
   785  0074                     strlen@s:	
   786                           ; 1 bytes @ 0x4
   787                           
   788  0074                     ___lldiv@dividend:	
   789                           ; 1 bytes @ 0x4
   790                           
   791                           
   792                           ; 4 bytes @ 0x4
   793  0074                     	ds	1
   794  0075                     ??_ADC_burst:
   795  0075                     ?_UART_Buffer:	
   796                           ; 1 bytes @ 0x5
   797                           
   798  0075                     UART_Buffer@size:	
   799                           ; 1 bytes @ 0x5
   800                           
   801  0075                     ___lwdiv@quotient:	
   802                           ; 1 bytes @ 0x5
   803                           
   804                           
   805                           ; 2 bytes @ 0x5
   806  0075                     	ds	1
   807  0076                     ??_UART_Buffer:
   808                           
   809                           ; 1 bytes @ 0x6
   810  0076                     	ds	1
   811  0077                     ADC_burst@channels:
   812  0077                     UART_Buffer@count:	
   813                           ; 1 bytes @ 0x7
   814                           
   815  0077                     ___lwdiv@counter:	
   816                           ; 1 bytes @ 0x7
   817                           
   818                           
   819                           ; 1 bytes @ 0x7
   820  0077                     	ds	1
   821  0078                     ??___lldiv:
   822  0078                     ?___lwmod:	
   823                           ; 1 bytes @ 0x8
   824                           
   825  0078                     ADC_burst@n:	
   826                           ; 2 bytes @ 0x8
   827                           
   828  0078                     UART_Buffer@buffer:	
   829                           ; 1 bytes @ 0x8
   830                           
   831  0078                     ___lwmod@divisor:	
   832                           ; 1 bytes @ 0x8
   833                           
   834                           
   835                           ; 2 bytes @ 0x8
   836  0078                     	ds	1
   837  0079                     ___lldiv@quotient:
   838                           
   839                           ; 4 bytes @ 0x9
   840  0079                     	ds	1
   841  007A                     ___lwmod@dividend:
   842                           
   843                           ; 2 bytes @ 0xA
   844  007A                     	ds	2
   845  007C                     ??___lwmod:
   846                           
   847                           ; 1 bytes @ 0xC
   848  007C                     	ds	1
   849  007D                     ___lldiv@counter:
   850  007D                     ___lwmod@counter:	
   851                           ; 1 bytes @ 0xD
   852                           
   853                           
   854                           ; 1 bytes @ 0xD
   855  007D                     	ds	1
   856                           
   857                           	psect	cstackBANK0
   858  0020                     __pcstackBANK0:
   859  0020                     ?_UART_TX_Init:
   860  0020                     ?_sprintf:	
   861                           ; 1 bytes @ 0x0
   862                           
   863  0020                     sprintf@f:	
   864                           ; 2 bytes @ 0x0
   865                           
   866  0020                     UART_TX_Init@baud:	
   867                           ; 1 bytes @ 0x0
   868                           
   869                           
   870                           ; 4 bytes @ 0x0
   871  0020                     	ds	3
   872  0023                     ??_sprintf:
   873                           
   874                           ; 1 bytes @ 0x3
   875  0023                     	ds	1
   876  0024                     ??_UART_TX_Init:
   877                           
   878                           ; 1 bytes @ 0x4
   879  0024                     	ds	2
   880  0026                     sprintf@ap:
   881                           
   882                           ; 1 bytes @ 0x6
   883  0026                     	ds	1
   884  0027                     sprintf@flag:
   885                           
   886                           ; 1 bytes @ 0x7
   887  0027                     	ds	1
   888  0028                     sprintf@prec:
   889  0028                     UART_TX_Init@temp:	
   890                           ; 1 bytes @ 0x8
   891                           
   892                           
   893                           ; 2 bytes @ 0x8
   894  0028                     	ds	1
   895  0029                     sprintf@val:
   896                           
   897                           ; 2 bytes @ 0x9
   898  0029                     	ds	2
   899  002B                     sprintf@sp:
   900                           
   901                           ; 1 bytes @ 0xB
   902  002B                     	ds	1
   903  002C                     sprintf@c:
   904                           
   905                           ; 1 bytes @ 0xC
   906  002C                     	ds	1
   907  002D                     ?_UART_number:
   908  002D                     UART_number@number:	
   909                           ; 1 bytes @ 0xD
   910                           
   911                           
   912                           ; 2 bytes @ 0xD
   913  002D                     	ds	2
   914  002F                     ??_UART_number:
   915                           
   916                           ; 1 bytes @ 0xF
   917  002F                     	ds	1
   918  0030                     UART_number@buffer:
   919                           
   920                           ; 10 bytes @ 0x10
   921  0030                     	ds	10
   922  003A                     ?_ADC_print_burst:
   923  003A                     ADC_print_burst@NumberReadings:	
   924                           ; 1 bytes @ 0x1A
   925                           
   926                           
   927                           ; 1 bytes @ 0x1A
   928  003A                     	ds	1
   929  003B                     ??_ADC_print_burst:
   930                           
   931                           ; 1 bytes @ 0x1B
   932  003B                     	ds	2
   933  003D                     ADC_print_burst@BurstReadings:
   934                           
   935                           ; 1 bytes @ 0x1D
   936  003D                     	ds	1
   937  003E                     ADC_print_burst@n:
   938                           
   939                           ; 1 bytes @ 0x1E
   940  003E                     	ds	1
   941  003F                     ??_main:
   942                           
   943                           ; 1 bytes @ 0x1F
   944  003F                     	ds	2
   945                           
   946                           	psect	maintext
   947  05F3                     __pmaintext:	
   948 ;;
   949 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   950 ;;
   951 ;; *************** function _main *****************
   952 ;; Defined at:
   953 ;;		line 19 in file "SamplingProgram.c"
   954 ;; Parameters:    Size  Location     Type
   955 ;;		None
   956 ;; Auto vars:     Size  Location     Type
   957 ;;		None
   958 ;; Return value:  Size  Location     Type
   959 ;;                  1    wreg      void 
   960 ;; Registers used:
   961 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   962 ;; Tracked objects:
   963 ;;		On entry : B00/0
   964 ;;		On exit  : 0/0
   965 ;;		Unchanged: 0/0
   966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   967 ;;      Params:         0       0       0       0       0
   968 ;;      Locals:         0       0       0       0       0
   969 ;;      Temps:          0       2       0       0       0
   970 ;;      Totals:         0       2       0       0       0
   971 ;;Total ram usage:        2 bytes
   972 ;; Hardware stack levels required when called: 4
   973 ;; This function calls:
   974 ;;		_ADC_burst
   975 ;;		_ADC_print_burst
   976 ;;		_UART_Buffer
   977 ;;		_UART_TX_Init
   978 ;;		_strlen
   979 ;; This function is called by:
   980 ;;		Startup code after reset
   981 ;; This function uses a non-reentrant model
   982 ;;
   983                           
   984                           
   985                           ;psect for function _main
   986  05F3                     _main:
   987  05F3                     l1364:	
   988                           ;incstack = 0
   989                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   990                           
   991                           
   992                           ;SamplingProgram.c: 20:     UART_TX_Init(230400);
   993  05F3  3000               	movlw	0
   994  05F4  1283               	bcf	3,5	;RP0=0, select bank0
   995  05F5  1303               	bcf	3,6	;RP1=0, select bank0
   996  05F6  00A3               	movwf	UART_TX_Init@baud+3
   997  05F7  3003               	movlw	3
   998  05F8  00A2               	movwf	UART_TX_Init@baud+2
   999  05F9  3084               	movlw	132
  1000  05FA  00A1               	movwf	UART_TX_Init@baud+1
  1001  05FB  3000               	movlw	0
  1002  05FC  00A0               	movwf	UART_TX_Init@baud
  1003  05FD  120A  118A  263E  120A  118A  	fcall	_UART_TX_Init
  1004  0602                     l1366:
  1005                           
  1006                           ;SamplingProgram.c: 21:     UART_Buffer(mensaje, strlen(mensaje));
  1007  0602  30A0               	movlw	(low (_mensaje| 0))& (0+255)
  1008  0603  120A  118A  24A2  120A  118A  	fcall	_strlen
  1009  0608  0870               	movf	?_strlen,w
  1010  0609  1283               	bcf	3,5	;RP0=0, select bank0
  1011  060A  1303               	bcf	3,6	;RP1=0, select bank0
  1012  060B  00BF               	movwf	??_main
  1013  060C  083F               	movf	??_main,w
  1014  060D  00F5               	movwf	UART_Buffer@size
  1015  060E  30A0               	movlw	(low (_mensaje| 0))& (0+255)
  1016  060F  120A  118A  24BB  120A  118A  	fcall	_UART_Buffer
  1017  0614                     l1368:
  1018                           
  1019                           ;SamplingProgram.c: 25:     {;SamplingProgram.c: 28:         ADC_burst(ANChannels,ANRead
      +                          ,8);
  1020  0614  3047               	movlw	(low (_ANRead| 0))& (0+255)
  1021  0615  1283               	bcf	3,5	;RP0=0, select bank0
  1022  0616  1303               	bcf	3,6	;RP1=0, select bank0
  1023  0617  00BF               	movwf	??_main
  1024  0618  083F               	movf	??_main,w
  1025  0619  00F3               	movwf	ADC_burst@reading
  1026  061A  3008               	movlw	8
  1027  061B  00C0               	movwf	??_main+1
  1028  061C  0840               	movf	??_main+1,w
  1029  061D  00F4               	movwf	ADC_burst@numberc
  1030  061E  3057               	movlw	(low (_ANChannels| 0))& (0+255)
  1031  061F  120A  118A  2544  120A  118A  	fcall	_ADC_burst
  1032  0624                     l1370:
  1033                           
  1034                           ;SamplingProgram.c: 30:         ADC_print_burst(ANRead,8);
  1035  0624  3008               	movlw	8
  1036  0625  1283               	bcf	3,5	;RP0=0, select bank0
  1037  0626  1303               	bcf	3,6	;RP1=0, select bank0
  1038  0627  00BF               	movwf	??_main
  1039  0628  083F               	movf	??_main,w
  1040  0629  00BA               	movwf	ADC_print_burst@NumberReadings
  1041  062A  3047               	movlw	(low (_ANRead| 0))& (0+255)
  1042  062B  120A  118A  251A  120A  118A  	fcall	_ADC_print_burst
  1043  0630                     l1372:
  1044                           
  1045                           ;SamplingProgram.c: 32:         _delay((unsigned long)((17.38)*(16000000/4000.0)));
  1046  0630  305B               	movlw	91
  1047  0631  1283               	bcf	3,5	;RP0=0, select bank0
  1048  0632  1303               	bcf	3,6	;RP1=0, select bank0
  1049  0633  00C0               	movwf	??_main+1
  1050  0634  3047               	movlw	71
  1051  0635  00BF               	movwf	??_main
  1052  0636                     u757:
  1053  0636  0BBF               	decfsz	??_main,f
  1054  0637  2E36               	goto	u757
  1055  0638  0BC0               	decfsz	??_main+1,f
  1056  0639  2E36               	goto	u757
  1057  063A  2E14               	goto	l1368
  1058  063B  120A  118A  2800   	ljmp	start
  1059  063E                     __end_of_main:
  1060                           
  1061                           	psect	text1
  1062  063E                     __ptext1:	
  1063 ;; *************** function _UART_TX_Init *****************
  1064 ;; Defined at:
  1065 ;;		line 15 in file "UART.c"
  1066 ;; Parameters:    Size  Location     Type
  1067 ;;  baud            4    0[BANK0 ] unsigned long 
  1068 ;; Auto vars:     Size  Location     Type
  1069 ;;  temp            2    8[BANK0 ] unsigned int 
  1070 ;; Return value:  Size  Location     Type
  1071 ;;                  1    wreg      void 
  1072 ;; Registers used:
  1073 ;;		wreg, status,2, status,0, pclath, cstack
  1074 ;; Tracked objects:
  1075 ;;		On entry : 0/0
  1076 ;;		On exit  : 0/0
  1077 ;;		Unchanged: 0/0
  1078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1079 ;;      Params:         0       4       0       0       0
  1080 ;;      Locals:         0       2       0       0       0
  1081 ;;      Temps:          0       4       0       0       0
  1082 ;;      Totals:         0      10       0       0       0
  1083 ;;Total ram usage:       10 bytes
  1084 ;; Hardware stack levels used: 1
  1085 ;; Hardware stack levels required when called: 1
  1086 ;; This function calls:
  1087 ;;		___lldiv
  1088 ;; This function is called by:
  1089 ;;		_main
  1090 ;; This function uses a non-reentrant model
  1091 ;;
  1092                           
  1093                           
  1094                           ;psect for function _UART_TX_Init
  1095  063E                     _UART_TX_Init:
  1096  063E                     l1292:	
  1097                           ;incstack = 0
  1098                           ; Regs used in _UART_TX_Init: [wreg+status,2+status,0+pclath+cstack]
  1099                           
  1100                           
  1101                           ;UART.c: 15: void UART_TX_Init(uint32_t baud);UART.c: 16: {;UART.c: 18:   uint16_t temp;
      +                          ;UART.c: 19:   temp= (uint16_t)(((16000000/baud)/4)-1);
  1102  063E  1283               	bcf	3,5	;RP0=0, select bank0
  1103  063F  1303               	bcf	3,6	;RP1=0, select bank0
  1104  0640  0823               	movf	UART_TX_Init@baud+3,w
  1105  0641  00F3               	movwf	___lldiv@divisor+3
  1106  0642  0822               	movf	UART_TX_Init@baud+2,w
  1107  0643  00F2               	movwf	___lldiv@divisor+2
  1108  0644  0821               	movf	UART_TX_Init@baud+1,w
  1109  0645  00F1               	movwf	___lldiv@divisor+1
  1110  0646  0820               	movf	UART_TX_Init@baud,w
  1111  0647  00F0               	movwf	___lldiv@divisor
  1112  0648  3000               	movlw	0
  1113  0649  00F7               	movwf	___lldiv@dividend+3
  1114  064A  30F4               	movlw	244
  1115  064B  00F6               	movwf	___lldiv@dividend+2
  1116  064C  3024               	movlw	36
  1117  064D  00F5               	movwf	___lldiv@dividend+1
  1118  064E  3000               	movlw	0
  1119  064F  00F4               	movwf	___lldiv@dividend
  1120  0650  120A  118A  268B  120A  118A  	fcall	___lldiv
  1121  0655  0870               	movf	?___lldiv,w
  1122  0656  1283               	bcf	3,5	;RP0=0, select bank0
  1123  0657  1303               	bcf	3,6	;RP1=0, select bank0
  1124  0658  00A4               	movwf	??_UART_TX_Init
  1125  0659  0871               	movf	?___lldiv+1,w
  1126  065A  00A5               	movwf	??_UART_TX_Init+1
  1127  065B  0872               	movf	?___lldiv+2,w
  1128  065C  00A6               	movwf	??_UART_TX_Init+2
  1129  065D  0873               	movf	?___lldiv+3,w
  1130  065E  00A7               	movwf	??_UART_TX_Init+3
  1131  065F  3002               	movlw	2
  1132  0660                     u735:
  1133  0660  1003               	clrc
  1134  0661  0CA7               	rrf	??_UART_TX_Init+3,f
  1135  0662  0CA6               	rrf	??_UART_TX_Init+2,f
  1136  0663  0CA5               	rrf	??_UART_TX_Init+1,f
  1137  0664  0CA4               	rrf	??_UART_TX_Init,f
  1138  0665                     u730:
  1139  0665  3EFF               	addlw	-1
  1140  0666  1D03               	skipz
  1141  0667  2E60               	goto	u735
  1142  0668  0824               	movf	??_UART_TX_Init,w
  1143  0669  3EFF               	addlw	255
  1144  066A  00A8               	movwf	UART_TX_Init@temp
  1145  066B  0825               	movf	??_UART_TX_Init+1,w
  1146  066C  1803               	skipnc
  1147  066D  3E01               	addlw	1
  1148  066E  3EFF               	addlw	255
  1149  066F  00A9               	movwf	UART_TX_Init@temp+1
  1150  0670                     l1294:
  1151                           
  1152                           ;UART.c: 20:   BRGH = 1;
  1153  0670  1683               	bsf	3,5	;RP0=1, select bank1
  1154  0671  1303               	bcf	3,6	;RP1=0, select bank1
  1155  0672  1518               	bsf	24,2	;volatile
  1156  0673                     l1296:
  1157                           
  1158                           ;UART.c: 21:   BRG16=1;
  1159  0673  1683               	bsf	3,5	;RP0=1, select bank3
  1160  0674  1703               	bsf	3,6	;RP1=1, select bank3
  1161  0675  1587               	bsf	7,3	;volatile
  1162  0676                     l1298:
  1163                           
  1164                           ;UART.c: 22:   SPBRG = 0xFF&temp;
  1165  0676  1283               	bcf	3,5	;RP0=0, select bank0
  1166  0677  1303               	bcf	3,6	;RP1=0, select bank0
  1167  0678  0828               	movf	UART_TX_Init@temp,w
  1168  0679  1683               	bsf	3,5	;RP0=1, select bank1
  1169  067A  1303               	bcf	3,6	;RP1=0, select bank1
  1170  067B  0099               	movwf	25	;volatile
  1171  067C                     l1300:
  1172                           
  1173                           ;UART.c: 23:   SPBRGH= (temp&0xFF00)>>(8);
  1174  067C  1283               	bcf	3,5	;RP0=0, select bank0
  1175  067D  1303               	bcf	3,6	;RP1=0, select bank0
  1176  067E  0829               	movf	UART_TX_Init@temp+1,w
  1177  067F  1683               	bsf	3,5	;RP0=1, select bank1
  1178  0680  1303               	bcf	3,6	;RP1=0, select bank1
  1179  0681  009A               	movwf	26	;volatile
  1180  0682                     l1302:
  1181                           
  1182                           ;UART.c: 26:   SYNC = 0;
  1183  0682  1218               	bcf	24,4	;volatile
  1184  0683                     l1304:
  1185                           
  1186                           ;UART.c: 27:   SPEN = 1;
  1187  0683  1283               	bcf	3,5	;RP0=0, select bank0
  1188  0684  1303               	bcf	3,6	;RP1=0, select bank0
  1189  0685  1798               	bsf	24,7	;volatile
  1190  0686                     l1306:
  1191                           
  1192                           ;UART.c: 29:   TRISC6 = 1;
  1193  0686  1683               	bsf	3,5	;RP0=1, select bank1
  1194  0687  1303               	bcf	3,6	;RP1=0, select bank1
  1195  0688  1707               	bsf	7,6	;volatile
  1196  0689                     l1308:
  1197                           
  1198                           ;UART.c: 30:   TXEN = 1;
  1199  0689  1698               	bsf	24,5	;volatile
  1200  068A                     l80:
  1201  068A  0008               	return
  1202  068B                     __end_of_UART_TX_Init:
  1203                           
  1204                           	psect	text2
  1205  068B                     __ptext2:	
  1206 ;; *************** function ___lldiv *****************
  1207 ;; Defined at:
  1208 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  1209 ;; Parameters:    Size  Location     Type
  1210 ;;  divisor         4    0[COMMON] unsigned long 
  1211 ;;  dividend        4    4[COMMON] unsigned long 
  1212 ;; Auto vars:     Size  Location     Type
  1213 ;;  quotient        4    9[COMMON] unsigned long 
  1214 ;;  counter         1   13[COMMON] unsigned char 
  1215 ;; Return value:  Size  Location     Type
  1216 ;;                  4    0[COMMON] unsigned long 
  1217 ;; Registers used:
  1218 ;;		wreg, status,2, status,0
  1219 ;; Tracked objects:
  1220 ;;		On entry : 0/0
  1221 ;;		On exit  : 0/0
  1222 ;;		Unchanged: 0/0
  1223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1224 ;;      Params:         8       0       0       0       0
  1225 ;;      Locals:         5       0       0       0       0
  1226 ;;      Temps:          1       0       0       0       0
  1227 ;;      Totals:        14       0       0       0       0
  1228 ;;Total ram usage:       14 bytes
  1229 ;; Hardware stack levels used: 1
  1230 ;; This function calls:
  1231 ;;		Nothing
  1232 ;; This function is called by:
  1233 ;;		_UART_TX_Init
  1234 ;; This function uses a non-reentrant model
  1235 ;;
  1236                           
  1237                           
  1238                           ;psect for function ___lldiv
  1239  068B                     ___lldiv:
  1240  068B                     l1248:	
  1241                           ;incstack = 0
  1242                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1243                           
  1244  068B  3000               	movlw	0
  1245  068C  00FC               	movwf	___lldiv@quotient+3
  1246  068D  3000               	movlw	0
  1247  068E  00FB               	movwf	___lldiv@quotient+2
  1248  068F  3000               	movlw	0
  1249  0690  00FA               	movwf	___lldiv@quotient+1
  1250  0691  3000               	movlw	0
  1251  0692  00F9               	movwf	___lldiv@quotient
  1252  0693  0873               	movf	___lldiv@divisor+3,w
  1253  0694  0472               	iorwf	___lldiv@divisor+2,w
  1254  0695  0471               	iorwf	___lldiv@divisor+1,w
  1255  0696  0470               	iorwf	___lldiv@divisor,w
  1256  0697  1903               	skipnz
  1257  0698  2E9A               	goto	u631
  1258  0699  2E9B               	goto	u630
  1259  069A                     u631:
  1260  069A  2EE8               	goto	l1268
  1261  069B                     u630:
  1262  069B                     l1250:
  1263  069B  01FD               	clrf	___lldiv@counter
  1264  069C  0AFD               	incf	___lldiv@counter,f
  1265  069D  2EAB               	goto	l1254
  1266  069E                     l1252:
  1267  069E  3001               	movlw	1
  1268  069F  00F8               	movwf	??___lldiv
  1269  06A0                     u645:
  1270  06A0  1003               	clrc
  1271  06A1  0DF0               	rlf	___lldiv@divisor,f
  1272  06A2  0DF1               	rlf	___lldiv@divisor+1,f
  1273  06A3  0DF2               	rlf	___lldiv@divisor+2,f
  1274  06A4  0DF3               	rlf	___lldiv@divisor+3,f
  1275  06A5  0BF8               	decfsz	??___lldiv,f
  1276  06A6  2EA0               	goto	u645
  1277  06A7  3001               	movlw	1
  1278  06A8  00F8               	movwf	??___lldiv
  1279  06A9  0878               	movf	??___lldiv,w
  1280  06AA  07FD               	addwf	___lldiv@counter,f
  1281  06AB                     l1254:
  1282  06AB  1FF3               	btfss	___lldiv@divisor+3,7
  1283  06AC  2EAE               	goto	u651
  1284  06AD  2EAF               	goto	u650
  1285  06AE                     u651:
  1286  06AE  2E9E               	goto	l1252
  1287  06AF                     u650:
  1288  06AF                     l1256:
  1289  06AF  3001               	movlw	1
  1290  06B0  00F8               	movwf	??___lldiv
  1291  06B1                     u665:
  1292  06B1  1003               	clrc
  1293  06B2  0DF9               	rlf	___lldiv@quotient,f
  1294  06B3  0DFA               	rlf	___lldiv@quotient+1,f
  1295  06B4  0DFB               	rlf	___lldiv@quotient+2,f
  1296  06B5  0DFC               	rlf	___lldiv@quotient+3,f
  1297  06B6  0BF8               	decfsz	??___lldiv,f
  1298  06B7  2EB1               	goto	u665
  1299  06B8                     l1258:
  1300  06B8  0873               	movf	___lldiv@divisor+3,w
  1301  06B9  0277               	subwf	___lldiv@dividend+3,w
  1302  06BA  1D03               	skipz
  1303  06BB  2EC6               	goto	u675
  1304  06BC  0872               	movf	___lldiv@divisor+2,w
  1305  06BD  0276               	subwf	___lldiv@dividend+2,w
  1306  06BE  1D03               	skipz
  1307  06BF  2EC6               	goto	u675
  1308  06C0  0871               	movf	___lldiv@divisor+1,w
  1309  06C1  0275               	subwf	___lldiv@dividend+1,w
  1310  06C2  1D03               	skipz
  1311  06C3  2EC6               	goto	u675
  1312  06C4  0870               	movf	___lldiv@divisor,w
  1313  06C5  0274               	subwf	___lldiv@dividend,w
  1314  06C6                     u675:
  1315  06C6  1C03               	skipc
  1316  06C7  2EC9               	goto	u671
  1317  06C8  2ECA               	goto	u670
  1318  06C9                     u671:
  1319  06C9  2ED9               	goto	l1264
  1320  06CA                     u670:
  1321  06CA                     l1260:
  1322  06CA  0870               	movf	___lldiv@divisor,w
  1323  06CB  02F4               	subwf	___lldiv@dividend,f
  1324  06CC  0871               	movf	___lldiv@divisor+1,w
  1325  06CD  1C03               	skipc
  1326  06CE  0F71               	incfsz	___lldiv@divisor+1,w
  1327  06CF  02F5               	subwf	___lldiv@dividend+1,f
  1328  06D0  0872               	movf	___lldiv@divisor+2,w
  1329  06D1  1C03               	skipc
  1330  06D2  0F72               	incfsz	___lldiv@divisor+2,w
  1331  06D3  02F6               	subwf	___lldiv@dividend+2,f
  1332  06D4  0873               	movf	___lldiv@divisor+3,w
  1333  06D5  1C03               	skipc
  1334  06D6  0F73               	incfsz	___lldiv@divisor+3,w
  1335  06D7  02F7               	subwf	___lldiv@dividend+3,f
  1336  06D8                     l1262:
  1337  06D8  1479               	bsf	___lldiv@quotient,0
  1338  06D9                     l1264:
  1339  06D9  3001               	movlw	1
  1340  06DA                     u685:
  1341  06DA  1003               	clrc
  1342  06DB  0CF3               	rrf	___lldiv@divisor+3,f
  1343  06DC  0CF2               	rrf	___lldiv@divisor+2,f
  1344  06DD  0CF1               	rrf	___lldiv@divisor+1,f
  1345  06DE  0CF0               	rrf	___lldiv@divisor,f
  1346  06DF  3EFF               	addlw	-1
  1347  06E0  1D03               	skipz
  1348  06E1  2EDA               	goto	u685
  1349  06E2                     l1266:
  1350  06E2  3001               	movlw	1
  1351  06E3  02FD               	subwf	___lldiv@counter,f
  1352  06E4  1D03               	btfss	3,2
  1353  06E5  2EE7               	goto	u691
  1354  06E6  2EE8               	goto	u690
  1355  06E7                     u691:
  1356  06E7  2EAF               	goto	l1256
  1357  06E8                     u690:
  1358  06E8                     l1268:
  1359  06E8  087C               	movf	___lldiv@quotient+3,w
  1360  06E9  00F3               	movwf	?___lldiv+3
  1361  06EA  087B               	movf	___lldiv@quotient+2,w
  1362  06EB  00F2               	movwf	?___lldiv+2
  1363  06EC  087A               	movf	___lldiv@quotient+1,w
  1364  06ED  00F1               	movwf	?___lldiv+1
  1365  06EE  0879               	movf	___lldiv@quotient,w
  1366  06EF  00F0               	movwf	?___lldiv
  1367  06F0                     l308:
  1368  06F0  0008               	return
  1369  06F1                     __end_of___lldiv:
  1370                           
  1371                           	psect	text3
  1372  051A                     __ptext3:	
  1373 ;; *************** function _ADC_print_burst *****************
  1374 ;; Defined at:
  1375 ;;		line 70 in file "ADC.c"
  1376 ;; Parameters:    Size  Location     Type
  1377 ;;  BurstReading    1    wreg     PTR unsigned int 
  1378 ;;		 -> ANRead(16), 
  1379 ;;  NumberReadin    1   26[BANK0 ] unsigned char 
  1380 ;; Auto vars:     Size  Location     Type
  1381 ;;  BurstReading    1   29[BANK0 ] PTR unsigned int 
  1382 ;;		 -> ANRead(16), 
  1383 ;;  n               1   30[BANK0 ] unsigned char 
  1384 ;; Return value:  Size  Location     Type
  1385 ;;                  1    wreg      void 
  1386 ;; Registers used:
  1387 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1388 ;; Tracked objects:
  1389 ;;		On entry : 0/0
  1390 ;;		On exit  : 0/0
  1391 ;;		Unchanged: 0/0
  1392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1393 ;;      Params:         0       1       0       0       0
  1394 ;;      Locals:         0       2       0       0       0
  1395 ;;      Temps:          0       2       0       0       0
  1396 ;;      Totals:         0       5       0       0       0
  1397 ;;Total ram usage:        5 bytes
  1398 ;; Hardware stack levels used: 1
  1399 ;; Hardware stack levels required when called: 3
  1400 ;; This function calls:
  1401 ;;		_UART_Write
  1402 ;;		_UART_number
  1403 ;; This function is called by:
  1404 ;;		_main
  1405 ;; This function uses a non-reentrant model
  1406 ;;
  1407                           
  1408                           
  1409                           ;psect for function _ADC_print_burst
  1410  051A                     _ADC_print_burst:
  1411                           
  1412                           ;incstack = 0
  1413                           ; Regs used in _ADC_print_burst: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1414                           ;ADC_print_burst@BurstReadings stored from wreg
  1415  051A  1283               	bcf	3,5	;RP0=0, select bank0
  1416  051B  1303               	bcf	3,6	;RP1=0, select bank0
  1417  051C  00BD               	movwf	ADC_print_burst@BurstReadings
  1418  051D                     l1282:
  1419                           
  1420                           ;ADC.c: 70: void ADC_print_burst(uint16_t *BurstReadings, uint8_t NumberReadings);ADC.c:
      +                           71: {;ADC.c: 72:     for(uint8_t n=0; n<NumberReadings;n++)
  1421  051D  01BE               	clrf	ADC_print_burst@n
  1422  051E  2D37               	goto	l1288
  1423  051F                     l1284:
  1424                           
  1425                           ;ADC.c: 73:         {;ADC.c: 74:             UART_number((int)BurstReadings[n]);
  1426  051F  083E               	movf	ADC_print_burst@n,w
  1427  0520  00BB               	movwf	??_ADC_print_burst
  1428  0521  073B               	addwf	??_ADC_print_burst,w
  1429  0522  073D               	addwf	ADC_print_burst@BurstReadings,w
  1430  0523  00BC               	movwf	??_ADC_print_burst+1
  1431  0524  083C               	movf	??_ADC_print_burst+1,w
  1432  0525  0084               	movwf	4
  1433  0526  1383               	bcf	3,7	;select IRP bank0
  1434  0527  0800               	movf	0,w
  1435  0528  00AD               	movwf	UART_number@number
  1436  0529  0A84               	incf	4,f
  1437  052A  0800               	movf	0,w
  1438  052B  00AE               	movwf	UART_number@number+1
  1439  052C  120A  118A  24F7  120A  118A  	fcall	_UART_number
  1440  0531                     l1286:
  1441                           
  1442                           ;ADC.c: 75:         }
  1443  0531  3001               	movlw	1
  1444  0532  1283               	bcf	3,5	;RP0=0, select bank0
  1445  0533  1303               	bcf	3,6	;RP1=0, select bank0
  1446  0534  00BB               	movwf	??_ADC_print_burst
  1447  0535  083B               	movf	??_ADC_print_burst,w
  1448  0536  07BE               	addwf	ADC_print_burst@n,f
  1449  0537                     l1288:
  1450  0537  083A               	movf	ADC_print_burst@NumberReadings,w
  1451  0538  023E               	subwf	ADC_print_burst@n,w
  1452  0539  1C03               	skipc
  1453  053A  2D3C               	goto	u721
  1454  053B  2D3D               	goto	u720
  1455  053C                     u721:
  1456  053C  2D1F               	goto	l1284
  1457  053D                     u720:
  1458  053D                     l1290:
  1459                           
  1460                           ;ADC.c: 76:     UART_Write(10);
  1461  053D  300A               	movlw	10
  1462  053E  120A  118A  2470  120A  118A  	fcall	_UART_Write
  1463  0543                     l49:
  1464  0543  0008               	return
  1465  0544                     __end_of_ADC_print_burst:
  1466                           
  1467                           	psect	text4
  1468  04F7                     __ptext4:	
  1469 ;; *************** function _UART_number *****************
  1470 ;; Defined at:
  1471 ;;		line 60 in file "UART.c"
  1472 ;; Parameters:    Size  Location     Type
  1473 ;;  number          2   13[BANK0 ] int 
  1474 ;; Auto vars:     Size  Location     Type
  1475 ;;  buffer         10   16[BANK0 ] unsigned char [10]
  1476 ;; Return value:  Size  Location     Type
  1477 ;;                  1    wreg      void 
  1478 ;; Registers used:
  1479 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1480 ;; Tracked objects:
  1481 ;;		On entry : 0/0
  1482 ;;		On exit  : 0/0
  1483 ;;		Unchanged: 0/0
  1484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1485 ;;      Params:         0       2       0       0       0
  1486 ;;      Locals:         0      10       0       0       0
  1487 ;;      Temps:          0       1       0       0       0
  1488 ;;      Totals:         0      13       0       0       0
  1489 ;;Total ram usage:       13 bytes
  1490 ;; Hardware stack levels used: 1
  1491 ;; Hardware stack levels required when called: 2
  1492 ;; This function calls:
  1493 ;;		_UART_Buffer
  1494 ;;		_sprintf
  1495 ;;		_strlen
  1496 ;; This function is called by:
  1497 ;;		_ADC_print_burst
  1498 ;; This function uses a non-reentrant model
  1499 ;;
  1500                           
  1501                           
  1502                           ;psect for function _UART_number
  1503  04F7                     _UART_number:
  1504  04F7                     l1244:	
  1505                           ;incstack = 0
  1506                           ; Regs used in _UART_number: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1507                           
  1508                           
  1509                           ;UART.c: 60: void UART_number(int number);UART.c: 61: {;UART.c: 62:  uint8_t buffer[10];
      +                          ;UART.c: 63:  sprintf((char *)buffer,"%d\n",number);
  1510  04F7  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1511  04F8  1283               	bcf	3,5	;RP0=0, select bank0
  1512  04F9  1303               	bcf	3,6	;RP1=0, select bank0
  1513  04FA  00AF               	movwf	??_UART_number
  1514  04FB  082F               	movf	??_UART_number,w
  1515  04FC  00A0               	movwf	sprintf@f
  1516  04FD  082E               	movf	UART_number@number+1,w
  1517  04FE  00A2               	movwf	?_sprintf+2
  1518  04FF  082D               	movf	UART_number@number,w
  1519  0500  00A1               	movwf	?_sprintf+1
  1520  0501  3030               	movlw	(low (UART_number@buffer| 0))& (0+255)
  1521  0502  120A  118A  26F1  120A  118A  	fcall	_sprintf
  1522  0507                     l1246:
  1523                           
  1524                           ;UART.c: 64:  UART_Buffer(buffer,strlen((char *)buffer));
  1525  0507  3030               	movlw	(low (UART_number@buffer| 0))& (0+255)
  1526  0508  120A  118A  24A2  120A  118A  	fcall	_strlen
  1527  050D  0870               	movf	?_strlen,w
  1528  050E  1283               	bcf	3,5	;RP0=0, select bank0
  1529  050F  1303               	bcf	3,6	;RP1=0, select bank0
  1530  0510  00AF               	movwf	??_UART_number
  1531  0511  082F               	movf	??_UART_number,w
  1532  0512  00F5               	movwf	UART_Buffer@size
  1533  0513  3030               	movlw	(low (UART_number@buffer| 0))& (0+255)
  1534  0514  120A  118A  24BB  120A  118A  	fcall	_UART_Buffer
  1535  0519                     l98:
  1536  0519  0008               	return
  1537  051A                     __end_of_UART_number:
  1538                           
  1539                           	psect	text5
  1540  04A2                     __ptext5:	
  1541 ;; *************** function _strlen *****************
  1542 ;; Defined at:
  1543 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\strlen.c"
  1544 ;; Parameters:    Size  Location     Type
  1545 ;;  s               1    wreg     PTR const unsigned char 
  1546 ;;		 -> mensaje(19), UART_number@buffer(10), 
  1547 ;; Auto vars:     Size  Location     Type
  1548 ;;  s               1    4[COMMON] PTR const unsigned char 
  1549 ;;		 -> mensaje(19), UART_number@buffer(10), 
  1550 ;;  cp              1    3[COMMON] PTR const unsigned char 
  1551 ;;		 -> mensaje(19), UART_number@buffer(10), 
  1552 ;; Return value:  Size  Location     Type
  1553 ;;                  2    0[COMMON] unsigned int 
  1554 ;; Registers used:
  1555 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1556 ;; Tracked objects:
  1557 ;;		On entry : 0/0
  1558 ;;		On exit  : 0/0
  1559 ;;		Unchanged: 0/0
  1560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1561 ;;      Params:         2       0       0       0       0
  1562 ;;      Locals:         2       0       0       0       0
  1563 ;;      Temps:          1       0       0       0       0
  1564 ;;      Totals:         5       0       0       0       0
  1565 ;;Total ram usage:        5 bytes
  1566 ;; Hardware stack levels used: 1
  1567 ;; This function calls:
  1568 ;;		Nothing
  1569 ;; This function is called by:
  1570 ;;		_UART_number
  1571 ;;		_main
  1572 ;; This function uses a non-reentrant model
  1573 ;;
  1574                           
  1575                           
  1576                           ;psect for function _strlen
  1577  04A2                     _strlen:
  1578                           
  1579                           ;incstack = 0
  1580                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  1581                           ;strlen@s stored from wreg
  1582  04A2  00F4               	movwf	strlen@s
  1583  04A3                     l1226:
  1584  04A3  0874               	movf	strlen@s,w
  1585  04A4  00F2               	movwf	??_strlen
  1586  04A5  0872               	movf	??_strlen,w
  1587  04A6  00F3               	movwf	strlen@cp
  1588  04A7  2CAC               	goto	l1230
  1589  04A8                     l1228:
  1590  04A8  3001               	movlw	1
  1591  04A9  00F2               	movwf	??_strlen
  1592  04AA  0872               	movf	??_strlen,w
  1593  04AB  07F3               	addwf	strlen@cp,f
  1594  04AC                     l1230:
  1595  04AC  0873               	movf	strlen@cp,w
  1596  04AD  0084               	movwf	4
  1597  04AE  1383               	bcf	3,7	;select IRP bank0
  1598  04AF  0800               	movf	0,w
  1599  04B0  1D03               	btfss	3,2
  1600  04B1  2CB3               	goto	u611
  1601  04B2  2CB4               	goto	u610
  1602  04B3                     u611:
  1603  04B3  2CA8               	goto	l1228
  1604  04B4                     u610:
  1605  04B4                     l1232:
  1606  04B4  0874               	movf	strlen@s,w
  1607  04B5  0273               	subwf	strlen@cp,w
  1608  04B6  00F0               	movwf	?_strlen
  1609  04B7  01F1               	clrf	?_strlen+1
  1610  04B8  1BF0               	btfsc	?_strlen,7
  1611  04B9  03F1               	decf	?_strlen+1,f
  1612  04BA                     l726:
  1613  04BA  0008               	return
  1614  04BB                     __end_of_strlen:
  1615                           
  1616                           	psect	text6
  1617  06F1                     __ptext6:	
  1618 ;; *************** function _sprintf *****************
  1619 ;; Defined at:
  1620 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  1621 ;; Parameters:    Size  Location     Type
  1622 ;;  sp              1    wreg     PTR unsigned char 
  1623 ;;		 -> UART_number@buffer(10), 
  1624 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1625 ;;		 -> STR_1(4), 
  1626 ;; Auto vars:     Size  Location     Type
  1627 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  1628 ;;		 -> UART_number@buffer(10), 
  1629 ;;  tmpval          4    0        struct .
  1630 ;;  val             2    9[BANK0 ] unsigned int 
  1631 ;;  cp              2    0        PTR const unsigned char 
  1632 ;;  len             2    0        unsigned int 
  1633 ;;  c               1   12[BANK0 ] unsigned char 
  1634 ;;  prec            1    8[BANK0 ] char 
  1635 ;;  flag            1    7[BANK0 ] unsigned char 
  1636 ;;  ap              1    6[BANK0 ] PTR void [1]
  1637 ;;		 -> ?_sprintf(2), 
  1638 ;; Return value:  Size  Location     Type
  1639 ;;                  2    0[BANK0 ] int 
  1640 ;; Registers used:
  1641 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1642 ;; Tracked objects:
  1643 ;;		On entry : 0/0
  1644 ;;		On exit  : 0/0
  1645 ;;		Unchanged: 0/0
  1646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1647 ;;      Params:         0       3       0       0       0
  1648 ;;      Locals:         0       7       0       0       0
  1649 ;;      Temps:          0       3       0       0       0
  1650 ;;      Totals:         0      13       0       0       0
  1651 ;;Total ram usage:       13 bytes
  1652 ;; Hardware stack levels used: 1
  1653 ;; Hardware stack levels required when called: 1
  1654 ;; This function calls:
  1655 ;;		___lwdiv
  1656 ;;		___lwmod
  1657 ;; This function is called by:
  1658 ;;		_UART_number
  1659 ;; This function uses a non-reentrant model
  1660 ;;
  1661                           
  1662                           
  1663                           ;psect for function _sprintf
  1664  06F1                     _sprintf:
  1665                           
  1666                           ;incstack = 0
  1667                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1668                           ;sprintf@sp stored from wreg
  1669  06F1  1283               	bcf	3,5	;RP0=0, select bank0
  1670  06F2  1303               	bcf	3,6	;RP1=0, select bank0
  1671  06F3  00AB               	movwf	sprintf@sp
  1672  06F4                     l1164:
  1673                           
  1674                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1675  06F4  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1676  06F5  00A3               	movwf	??_sprintf
  1677  06F6  0823               	movf	??_sprintf,w
  1678  06F7  00A6               	movwf	sprintf@ap
  1679                           
  1680                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1681  06F8  2FC2               	goto	l1216
  1682  06F9                     l1166:
  1683                           
  1684                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1685  06F9  3025               	movlw	37
  1686  06FA  062C               	xorwf	sprintf@c,w
  1687  06FB  1903               	btfsc	3,2
  1688  06FC  2EFE               	goto	u541
  1689  06FD  2EFF               	goto	u540
  1690  06FE                     u541:
  1691  06FE  2F0B               	goto	l1172
  1692  06FF                     u540:
  1693  06FF                     l1168:
  1694                           
  1695                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1696  06FF  082C               	movf	sprintf@c,w
  1697  0700  00A3               	movwf	??_sprintf
  1698  0701  082B               	movf	sprintf@sp,w
  1699  0702  0084               	movwf	4
  1700  0703  0823               	movf	??_sprintf,w
  1701  0704  1383               	bcf	3,7	;select IRP bank0
  1702  0705  0080               	movwf	0
  1703  0706                     l1170:
  1704  0706  3001               	movlw	1
  1705  0707  00A3               	movwf	??_sprintf
  1706  0708  0823               	movf	??_sprintf,w
  1707  0709  07AB               	addwf	sprintf@sp,f
  1708                           
  1709                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 559:    continue;
  1710  070A  2FC2               	goto	l1216
  1711  070B                     l1172:
  1712                           
  1713                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1714  070B  01A7               	clrf	sprintf@flag
  1715  070C                     l1176:	
  1716                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1717                           
  1718  070C  3001               	movlw	1
  1719  070D  07A0               	addwf	sprintf@f,f
  1720  070E  30FF               	movlw	-1
  1721  070F  0720               	addwf	sprintf@f,w
  1722  0710  0084               	movwf	4
  1723  0711  120A  118A  2003  120A  118A  	fcall	stringdir
  1724  0716  00AC               	movwf	sprintf@c
  1725  0717  00A3               	movwf	??_sprintf
  1726  0718  01A4               	clrf	??_sprintf+1
  1727                           
  1728                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1729                           ; Switch size 1, requested type "simple"
  1730                           ; Number of cases is 1, Range of values is 0 to 0
  1731                           ; switch strategies available:
  1732                           ; Name         Instructions Cycles
  1733                           ; simple_byte            4     3 (average)
  1734                           ; direct_byte           11     8 (fixed)
  1735                           ; jumptable            260     6 (fixed)
  1736                           ;	Chosen strategy is simple_byte
  1737  0719  0824               	movf	??_sprintf+1,w
  1738  071A  3A00               	xorlw	0	; case 0
  1739  071B  1903               	skipnz
  1740  071C  2F1E               	goto	l1394
  1741  071D  2FC2               	goto	l1216
  1742  071E                     l1394:
  1743                           
  1744                           ; Switch size 1, requested type "simple"
  1745                           ; Number of cases is 3, Range of values is 0 to 105
  1746                           ; switch strategies available:
  1747                           ; Name         Instructions Cycles
  1748                           ; simple_byte           10     6 (average)
  1749                           ; jumptable            260     6 (fixed)
  1750                           ;	Chosen strategy is simple_byte
  1751  071E  0823               	movf	??_sprintf,w
  1752  071F  3A00               	xorlw	0	; case 0
  1753  0720  1903               	skipnz
  1754  0721  2FD4               	goto	l1218
  1755  0722  3A64               	xorlw	100	; case 100
  1756  0723  1903               	skipnz
  1757  0724  2F29               	goto	l1178
  1758  0725  3A0D               	xorlw	13	; case 105
  1759  0726  1903               	skipnz
  1760  0727  2F29               	goto	l1178
  1761  0728  2FC2               	goto	l1216
  1762  0729                     l1178:
  1763                           
  1764                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1765  0729  0826               	movf	sprintf@ap,w
  1766  072A  0084               	movwf	4
  1767  072B  1383               	bcf	3,7	;select IRP bank0
  1768  072C  0800               	movf	0,w
  1769  072D  00A9               	movwf	sprintf@val
  1770  072E  0A84               	incf	4,f
  1771  072F  0800               	movf	0,w
  1772  0730  00AA               	movwf	sprintf@val+1
  1773  0731                     l1180:
  1774  0731  3002               	movlw	2
  1775  0732  00A3               	movwf	??_sprintf
  1776  0733  0823               	movf	??_sprintf,w
  1777  0734  07A6               	addwf	sprintf@ap,f
  1778  0735                     l1182:
  1779                           
  1780                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1781  0735  1FAA               	btfss	sprintf@val+1,7
  1782  0736  2F38               	goto	u551
  1783  0737  2F39               	goto	u550
  1784  0738                     u551:
  1785  0738  2F42               	goto	l1188
  1786  0739                     u550:
  1787  0739                     l1184:
  1788                           
  1789                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1790  0739  3003               	movlw	3
  1791  073A  00A3               	movwf	??_sprintf
  1792  073B  0823               	movf	??_sprintf,w
  1793  073C  04A7               	iorwf	sprintf@flag,f
  1794  073D                     l1186:
  1795                           
  1796                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1797  073D  09A9               	comf	sprintf@val,f
  1798  073E  09AA               	comf	sprintf@val+1,f
  1799  073F  0AA9               	incf	sprintf@val,f
  1800  0740  1903               	skipnz
  1801  0741  0AAA               	incf	sprintf@val+1,f
  1802  0742                     l1188:
  1803                           
  1804                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1805  0742  01AC               	clrf	sprintf@c
  1806  0743  0AAC               	incf	sprintf@c,f
  1807  0744                     l1194:
  1808                           
  1809                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1810  0744  082C               	movf	sprintf@c,w
  1811  0745  00A3               	movwf	??_sprintf
  1812  0746  0723               	addwf	??_sprintf,w
  1813  0747  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1814  0748  0084               	movwf	4
  1815  0749  120A  118A  2003  120A  118A  	fcall	stringdir
  1816  074E  00A4               	movwf	??_sprintf+1
  1817  074F  120A  118A  2003  120A  118A  	fcall	stringdir
  1818  0754  00A5               	movwf	??_sprintf+2
  1819  0755  0825               	movf	??_sprintf+2,w
  1820  0756  022A               	subwf	sprintf@val+1,w
  1821  0757  1D03               	skipz
  1822  0758  2F5B               	goto	u565
  1823  0759  0824               	movf	??_sprintf+1,w
  1824  075A  0229               	subwf	sprintf@val,w
  1825  075B                     u565:
  1826  075B  1803               	skipnc
  1827  075C  2F5E               	goto	u561
  1828  075D  2F5F               	goto	u560
  1829  075E                     u561:
  1830  075E  2F60               	goto	l1198
  1831  075F                     u560:
  1832  075F  2F6A               	goto	l1200
  1833  0760                     l1198:
  1834  0760  3001               	movlw	1
  1835  0761  00A3               	movwf	??_sprintf
  1836  0762  0823               	movf	??_sprintf,w
  1837  0763  07AC               	addwf	sprintf@c,f
  1838  0764  3005               	movlw	5
  1839  0765  062C               	xorwf	sprintf@c,w
  1840  0766  1D03               	btfss	3,2
  1841  0767  2F69               	goto	u571
  1842  0768  2F6A               	goto	u570
  1843  0769                     u571:
  1844  0769  2F44               	goto	l1194
  1845  076A                     u570:
  1846  076A                     l1200:
  1847                           
  1848                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1849  076A  0827               	movf	sprintf@flag,w
  1850  076B  3903               	andlw	3
  1851  076C  1903               	btfsc	3,2
  1852  076D  2F6F               	goto	u581
  1853  076E  2F70               	goto	u580
  1854  076F                     u581:
  1855  076F  2F7B               	goto	l1206
  1856  0770                     u580:
  1857  0770                     l1202:
  1858                           
  1859                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1860  0770  302D               	movlw	45
  1861  0771  00A3               	movwf	??_sprintf
  1862  0772  082B               	movf	sprintf@sp,w
  1863  0773  0084               	movwf	4
  1864  0774  0823               	movf	??_sprintf,w
  1865  0775  1383               	bcf	3,7	;select IRP bank0
  1866  0776  0080               	movwf	0
  1867  0777                     l1204:
  1868  0777  3001               	movlw	1
  1869  0778  00A3               	movwf	??_sprintf
  1870  0779  0823               	movf	??_sprintf,w
  1871  077A  07AB               	addwf	sprintf@sp,f
  1872  077B                     l1206:
  1873                           
  1874                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1875  077B  082C               	movf	sprintf@c,w
  1876  077C  00A3               	movwf	??_sprintf
  1877  077D  0823               	movf	??_sprintf,w
  1878  077E  00A8               	movwf	sprintf@prec
  1879                           
  1880                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1881  077F  2FB9               	goto	l1214
  1882  0780                     l1208:
  1883                           
  1884                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1885  0780  300A               	movlw	10
  1886  0781  00F8               	movwf	___lwmod@divisor
  1887  0782  3000               	movlw	0
  1888  0783  00F9               	movwf	___lwmod@divisor+1
  1889  0784  0828               	movf	sprintf@prec,w
  1890  0785  00A3               	movwf	??_sprintf
  1891  0786  0723               	addwf	??_sprintf,w
  1892  0787  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1893  0788  0084               	movwf	4
  1894  0789  120A  118A  2003  120A  118A  	fcall	stringdir
  1895  078E  00F0               	movwf	___lwdiv@divisor
  1896  078F  120A  118A  2003  120A  118A  	fcall	stringdir
  1897  0794  00F1               	movwf	___lwdiv@divisor+1
  1898  0795  082A               	movf	sprintf@val+1,w
  1899  0796  00F3               	movwf	___lwdiv@dividend+1
  1900  0797  0829               	movf	sprintf@val,w
  1901  0798  00F2               	movwf	___lwdiv@dividend
  1902  0799  120A  118A  25AF  120A  118A  	fcall	___lwdiv
  1903  079E  0871               	movf	?___lwdiv+1,w
  1904  079F  00FB               	movwf	___lwmod@dividend+1
  1905  07A0  0870               	movf	?___lwdiv,w
  1906  07A1  00FA               	movwf	___lwmod@dividend
  1907  07A2  120A  118A  2575  120A  118A  	fcall	___lwmod
  1908  07A7  0878               	movf	?___lwmod,w
  1909  07A8  3E30               	addlw	48
  1910  07A9  1283               	bcf	3,5	;RP0=0, select bank0
  1911  07AA  1303               	bcf	3,6	;RP1=0, select bank0
  1912  07AB  00A4               	movwf	??_sprintf+1
  1913  07AC  0824               	movf	??_sprintf+1,w
  1914  07AD  00AC               	movwf	sprintf@c
  1915  07AE                     l1210:
  1916                           
  1917                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1918  07AE  082C               	movf	sprintf@c,w
  1919  07AF  00A3               	movwf	??_sprintf
  1920  07B0  082B               	movf	sprintf@sp,w
  1921  07B1  0084               	movwf	4
  1922  07B2  0823               	movf	??_sprintf,w
  1923  07B3  1383               	bcf	3,7	;select IRP bank0
  1924  07B4  0080               	movwf	0
  1925  07B5                     l1212:
  1926  07B5  3001               	movlw	1
  1927  07B6  00A3               	movwf	??_sprintf
  1928  07B7  0823               	movf	??_sprintf,w
  1929  07B8  07AB               	addwf	sprintf@sp,f
  1930  07B9                     l1214:
  1931                           
  1932                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1933  07B9  30FF               	movlw	255
  1934  07BA  00A3               	movwf	??_sprintf
  1935  07BB  0823               	movf	??_sprintf,w
  1936  07BC  07A8               	addwf	sprintf@prec,f
  1937  07BD  0A28               	incf	sprintf@prec,w
  1938  07BE  1D03               	btfss	3,2
  1939  07BF  2FC1               	goto	u591
  1940  07C0  2FC2               	goto	u590
  1941  07C1                     u591:
  1942  07C1  2F80               	goto	l1208
  1943  07C2                     u590:
  1944  07C2                     l1216:
  1945                           
  1946                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1947  07C2  3001               	movlw	1
  1948  07C3  07A0               	addwf	sprintf@f,f
  1949  07C4  30FF               	movlw	-1
  1950  07C5  0720               	addwf	sprintf@f,w
  1951  07C6  0084               	movwf	4
  1952  07C7  120A  118A  2003  120A  118A  	fcall	stringdir
  1953  07CC  00A3               	movwf	??_sprintf
  1954  07CD  0823               	movf	??_sprintf,w
  1955  07CE  00AC               	movwf	sprintf@c
  1956  07CF  082C               	movf	sprintf@c,w
  1957  07D0  1D03               	btfss	3,2
  1958  07D1  2FD3               	goto	u601
  1959  07D2  2FD4               	goto	u600
  1960  07D3                     u601:
  1961  07D3  2EF9               	goto	l1166
  1962  07D4                     u600:
  1963  07D4                     l1218:
  1964                           
  1965                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1966  07D4  082B               	movf	sprintf@sp,w
  1967  07D5  0084               	movwf	4
  1968  07D6  1383               	bcf	3,7	;select IRP bank0
  1969  07D7  0180               	clrf	0
  1970  07D8                     l268:
  1971  07D8  0008               	return
  1972  07D9                     __end_of_sprintf:
  1973                           
  1974                           	psect	text7
  1975  0575                     __ptext7:	
  1976 ;; *************** function ___lwmod *****************
  1977 ;; Defined at:
  1978 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  1979 ;; Parameters:    Size  Location     Type
  1980 ;;  divisor         2    8[COMMON] unsigned int 
  1981 ;;  dividend        2   10[COMMON] unsigned int 
  1982 ;; Auto vars:     Size  Location     Type
  1983 ;;  counter         1   13[COMMON] unsigned char 
  1984 ;; Return value:  Size  Location     Type
  1985 ;;                  2    8[COMMON] unsigned int 
  1986 ;; Registers used:
  1987 ;;		wreg, status,2, status,0
  1988 ;; Tracked objects:
  1989 ;;		On entry : 0/0
  1990 ;;		On exit  : 0/0
  1991 ;;		Unchanged: 0/0
  1992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1993 ;;      Params:         4       0       0       0       0
  1994 ;;      Locals:         1       0       0       0       0
  1995 ;;      Temps:          1       0       0       0       0
  1996 ;;      Totals:         6       0       0       0       0
  1997 ;;Total ram usage:        6 bytes
  1998 ;; Hardware stack levels used: 1
  1999 ;; This function calls:
  2000 ;;		Nothing
  2001 ;; This function is called by:
  2002 ;;		_sprintf
  2003 ;; This function uses a non-reentrant model
  2004 ;;
  2005                           
  2006                           
  2007                           ;psect for function ___lwmod
  2008  0575                     ___lwmod:
  2009  0575                     l1132:	
  2010                           ;incstack = 0
  2011                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2012                           
  2013  0575  0878               	movf	___lwmod@divisor,w
  2014  0576  0479               	iorwf	___lwmod@divisor+1,w
  2015  0577  1903               	btfsc	3,2
  2016  0578  2D7A               	goto	u471
  2017  0579  2D7B               	goto	u470
  2018  057A                     u471:
  2019  057A  2DAA               	goto	l1150
  2020  057B                     u470:
  2021  057B                     l1134:
  2022  057B  01FD               	clrf	___lwmod@counter
  2023  057C  0AFD               	incf	___lwmod@counter,f
  2024  057D  2D89               	goto	l1140
  2025  057E                     l1136:
  2026  057E  3001               	movlw	1
  2027  057F                     u485:
  2028  057F  1003               	clrc
  2029  0580  0DF8               	rlf	___lwmod@divisor,f
  2030  0581  0DF9               	rlf	___lwmod@divisor+1,f
  2031  0582  3EFF               	addlw	-1
  2032  0583  1D03               	skipz
  2033  0584  2D7F               	goto	u485
  2034  0585                     l1138:
  2035  0585  3001               	movlw	1
  2036  0586  00FC               	movwf	??___lwmod
  2037  0587  087C               	movf	??___lwmod,w
  2038  0588  07FD               	addwf	___lwmod@counter,f
  2039  0589                     l1140:
  2040  0589  1FF9               	btfss	___lwmod@divisor+1,7
  2041  058A  2D8C               	goto	u491
  2042  058B  2D8D               	goto	u490
  2043  058C                     u491:
  2044  058C  2D7E               	goto	l1136
  2045  058D                     u490:
  2046  058D                     l1142:
  2047  058D  0879               	movf	___lwmod@divisor+1,w
  2048  058E  027B               	subwf	___lwmod@dividend+1,w
  2049  058F  1D03               	skipz
  2050  0590  2D93               	goto	u505
  2051  0591  0878               	movf	___lwmod@divisor,w
  2052  0592  027A               	subwf	___lwmod@dividend,w
  2053  0593                     u505:
  2054  0593  1C03               	skipc
  2055  0594  2D96               	goto	u501
  2056  0595  2D97               	goto	u500
  2057  0596                     u501:
  2058  0596  2D9D               	goto	l1146
  2059  0597                     u500:
  2060  0597                     l1144:
  2061  0597  0878               	movf	___lwmod@divisor,w
  2062  0598  02FA               	subwf	___lwmod@dividend,f
  2063  0599  0879               	movf	___lwmod@divisor+1,w
  2064  059A  1C03               	skipc
  2065  059B  03FB               	decf	___lwmod@dividend+1,f
  2066  059C  02FB               	subwf	___lwmod@dividend+1,f
  2067  059D                     l1146:
  2068  059D  3001               	movlw	1
  2069  059E                     u515:
  2070  059E  1003               	clrc
  2071  059F  0CF9               	rrf	___lwmod@divisor+1,f
  2072  05A0  0CF8               	rrf	___lwmod@divisor,f
  2073  05A1  3EFF               	addlw	-1
  2074  05A2  1D03               	skipz
  2075  05A3  2D9E               	goto	u515
  2076  05A4                     l1148:
  2077  05A4  3001               	movlw	1
  2078  05A5  02FD               	subwf	___lwmod@counter,f
  2079  05A6  1D03               	btfss	3,2
  2080  05A7  2DA9               	goto	u521
  2081  05A8  2DAA               	goto	u520
  2082  05A9                     u521:
  2083  05A9  2D8D               	goto	l1142
  2084  05AA                     u520:
  2085  05AA                     l1150:
  2086  05AA  087B               	movf	___lwmod@dividend+1,w
  2087  05AB  00F9               	movwf	?___lwmod+1
  2088  05AC  087A               	movf	___lwmod@dividend,w
  2089  05AD  00F8               	movwf	?___lwmod
  2090  05AE                     l554:
  2091  05AE  0008               	return
  2092  05AF                     __end_of___lwmod:
  2093                           
  2094                           	psect	text8
  2095  05AF                     __ptext8:	
  2096 ;; *************** function ___lwdiv *****************
  2097 ;; Defined at:
  2098 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  2099 ;; Parameters:    Size  Location     Type
  2100 ;;  divisor         2    0[COMMON] unsigned int 
  2101 ;;  dividend        2    2[COMMON] unsigned int 
  2102 ;; Auto vars:     Size  Location     Type
  2103 ;;  quotient        2    5[COMMON] unsigned int 
  2104 ;;  counter         1    7[COMMON] unsigned char 
  2105 ;; Return value:  Size  Location     Type
  2106 ;;                  2    0[COMMON] unsigned int 
  2107 ;; Registers used:
  2108 ;;		wreg, status,2, status,0
  2109 ;; Tracked objects:
  2110 ;;		On entry : 0/0
  2111 ;;		On exit  : 0/0
  2112 ;;		Unchanged: 0/0
  2113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2114 ;;      Params:         4       0       0       0       0
  2115 ;;      Locals:         3       0       0       0       0
  2116 ;;      Temps:          1       0       0       0       0
  2117 ;;      Totals:         8       0       0       0       0
  2118 ;;Total ram usage:        8 bytes
  2119 ;; Hardware stack levels used: 1
  2120 ;; This function calls:
  2121 ;;		Nothing
  2122 ;; This function is called by:
  2123 ;;		_sprintf
  2124 ;; This function uses a non-reentrant model
  2125 ;;
  2126                           
  2127                           
  2128                           ;psect for function ___lwdiv
  2129  05AF                     ___lwdiv:
  2130  05AF                     l1106:	
  2131                           ;incstack = 0
  2132                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2133                           
  2134  05AF  01F5               	clrf	___lwdiv@quotient
  2135  05B0  01F6               	clrf	___lwdiv@quotient+1
  2136  05B1                     l1108:
  2137  05B1  0870               	movf	___lwdiv@divisor,w
  2138  05B2  0471               	iorwf	___lwdiv@divisor+1,w
  2139  05B3  1903               	btfsc	3,2
  2140  05B4  2DB6               	goto	u401
  2141  05B5  2DB7               	goto	u400
  2142  05B6                     u401:
  2143  05B6  2DEE               	goto	l1128
  2144  05B7                     u400:
  2145  05B7                     l1110:
  2146  05B7  01F7               	clrf	___lwdiv@counter
  2147  05B8  0AF7               	incf	___lwdiv@counter,f
  2148  05B9  2DC5               	goto	l1116
  2149  05BA                     l1112:
  2150  05BA  3001               	movlw	1
  2151  05BB                     u415:
  2152  05BB  1003               	clrc
  2153  05BC  0DF0               	rlf	___lwdiv@divisor,f
  2154  05BD  0DF1               	rlf	___lwdiv@divisor+1,f
  2155  05BE  3EFF               	addlw	-1
  2156  05BF  1D03               	skipz
  2157  05C0  2DBB               	goto	u415
  2158  05C1                     l1114:
  2159  05C1  3001               	movlw	1
  2160  05C2  00F4               	movwf	??___lwdiv
  2161  05C3  0874               	movf	??___lwdiv,w
  2162  05C4  07F7               	addwf	___lwdiv@counter,f
  2163  05C5                     l1116:
  2164  05C5  1FF1               	btfss	___lwdiv@divisor+1,7
  2165  05C6  2DC8               	goto	u421
  2166  05C7  2DC9               	goto	u420
  2167  05C8                     u421:
  2168  05C8  2DBA               	goto	l1112
  2169  05C9                     u420:
  2170  05C9                     l1118:
  2171  05C9  3001               	movlw	1
  2172  05CA                     u435:
  2173  05CA  1003               	clrc
  2174  05CB  0DF5               	rlf	___lwdiv@quotient,f
  2175  05CC  0DF6               	rlf	___lwdiv@quotient+1,f
  2176  05CD  3EFF               	addlw	-1
  2177  05CE  1D03               	skipz
  2178  05CF  2DCA               	goto	u435
  2179  05D0  0871               	movf	___lwdiv@divisor+1,w
  2180  05D1  0273               	subwf	___lwdiv@dividend+1,w
  2181  05D2  1D03               	skipz
  2182  05D3  2DD6               	goto	u445
  2183  05D4  0870               	movf	___lwdiv@divisor,w
  2184  05D5  0272               	subwf	___lwdiv@dividend,w
  2185  05D6                     u445:
  2186  05D6  1C03               	skipc
  2187  05D7  2DD9               	goto	u441
  2188  05D8  2DDA               	goto	u440
  2189  05D9                     u441:
  2190  05D9  2DE1               	goto	l1124
  2191  05DA                     u440:
  2192  05DA                     l1120:
  2193  05DA  0870               	movf	___lwdiv@divisor,w
  2194  05DB  02F2               	subwf	___lwdiv@dividend,f
  2195  05DC  0871               	movf	___lwdiv@divisor+1,w
  2196  05DD  1C03               	skipc
  2197  05DE  03F3               	decf	___lwdiv@dividend+1,f
  2198  05DF  02F3               	subwf	___lwdiv@dividend+1,f
  2199  05E0                     l1122:
  2200  05E0  1475               	bsf	___lwdiv@quotient,0
  2201  05E1                     l1124:
  2202  05E1  3001               	movlw	1
  2203  05E2                     u455:
  2204  05E2  1003               	clrc
  2205  05E3  0CF1               	rrf	___lwdiv@divisor+1,f
  2206  05E4  0CF0               	rrf	___lwdiv@divisor,f
  2207  05E5  3EFF               	addlw	-1
  2208  05E6  1D03               	skipz
  2209  05E7  2DE2               	goto	u455
  2210  05E8                     l1126:
  2211  05E8  3001               	movlw	1
  2212  05E9  02F7               	subwf	___lwdiv@counter,f
  2213  05EA  1D03               	btfss	3,2
  2214  05EB  2DED               	goto	u461
  2215  05EC  2DEE               	goto	u460
  2216  05ED                     u461:
  2217  05ED  2DC9               	goto	l1118
  2218  05EE                     u460:
  2219  05EE                     l1128:
  2220  05EE  0876               	movf	___lwdiv@quotient+1,w
  2221  05EF  00F1               	movwf	?___lwdiv+1
  2222  05F0  0875               	movf	___lwdiv@quotient,w
  2223  05F1  00F0               	movwf	?___lwdiv
  2224  05F2                     l544:
  2225  05F2  0008               	return
  2226  05F3                     __end_of___lwdiv:
  2227                           
  2228                           	psect	text9
  2229  04BB                     __ptext9:	
  2230 ;; *************** function _UART_Buffer *****************
  2231 ;; Defined at:
  2232 ;;		line 48 in file "UART.c"
  2233 ;; Parameters:    Size  Location     Type
  2234 ;;  buffer          1    wreg     PTR unsigned char 
  2235 ;;		 -> mensaje(19), UART_number@buffer(10), 
  2236 ;;  size            1    5[COMMON] unsigned char 
  2237 ;; Auto vars:     Size  Location     Type
  2238 ;;  buffer          1    8[COMMON] PTR unsigned char 
  2239 ;;		 -> mensaje(19), UART_number@buffer(10), 
  2240 ;;  count           1    7[COMMON] unsigned char 
  2241 ;; Return value:  Size  Location     Type
  2242 ;;                  1    wreg      void 
  2243 ;; Registers used:
  2244 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2245 ;; Tracked objects:
  2246 ;;		On entry : 0/0
  2247 ;;		On exit  : 0/0
  2248 ;;		Unchanged: 0/0
  2249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2250 ;;      Params:         1       0       0       0       0
  2251 ;;      Locals:         2       0       0       0       0
  2252 ;;      Temps:          1       0       0       0       0
  2253 ;;      Totals:         4       0       0       0       0
  2254 ;;Total ram usage:        4 bytes
  2255 ;; Hardware stack levels used: 1
  2256 ;; Hardware stack levels required when called: 1
  2257 ;; This function calls:
  2258 ;;		_UART_Write
  2259 ;; This function is called by:
  2260 ;;		_UART_number
  2261 ;;		_main
  2262 ;; This function uses a non-reentrant model
  2263 ;;
  2264                           
  2265                           
  2266                           ;psect for function _UART_Buffer
  2267  04BB                     _UART_Buffer:
  2268                           
  2269                           ;incstack = 0
  2270                           ; Regs used in _UART_Buffer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2271                           ;UART_Buffer@buffer stored from wreg
  2272  04BB  00F8               	movwf	UART_Buffer@buffer
  2273  04BC                     l1154:
  2274                           
  2275                           ;UART.c: 48: void UART_Buffer(uint8_t *buffer, uint8_t size);UART.c: 49: {;UART.c: 50:  
      +                             char count=0;
  2276  04BC  01F7               	clrf	UART_Buffer@count
  2277                           
  2278                           ;UART.c: 51:     while(count<size)
  2279  04BD  2CCF               	goto	l1162
  2280  04BE                     l1156:
  2281                           
  2282                           ;UART.c: 52:     {;UART.c: 53:         UART_Write(*buffer);
  2283  04BE  0878               	movf	UART_Buffer@buffer,w
  2284  04BF  0084               	movwf	4
  2285  04C0  1383               	bcf	3,7	;select IRP bank0
  2286  04C1  0800               	movf	0,w
  2287  04C2  120A  118A  2470  120A  118A  	fcall	_UART_Write
  2288  04C7                     l1158:
  2289                           
  2290                           ;UART.c: 54:         count++;
  2291  04C7  3001               	movlw	1
  2292  04C8  00F6               	movwf	??_UART_Buffer
  2293  04C9  0876               	movf	??_UART_Buffer,w
  2294  04CA  07F7               	addwf	UART_Buffer@count,f
  2295  04CB                     l1160:
  2296                           
  2297                           ;UART.c: 55:         buffer++;
  2298  04CB  3001               	movlw	1
  2299  04CC  00F6               	movwf	??_UART_Buffer
  2300  04CD  0876               	movf	??_UART_Buffer,w
  2301  04CE  07F8               	addwf	UART_Buffer@buffer,f
  2302  04CF                     l1162:
  2303                           
  2304                           ;UART.c: 51:     while(count<size)
  2305  04CF  0875               	movf	UART_Buffer@size,w
  2306  04D0  0277               	subwf	UART_Buffer@count,w
  2307  04D1  1C03               	skipc
  2308  04D2  2CD4               	goto	u531
  2309  04D3  2CD5               	goto	u530
  2310  04D4                     u531:
  2311  04D4  2CBE               	goto	l1156
  2312  04D5                     u530:
  2313  04D5                     l95:
  2314  04D5  0008               	return
  2315  04D6                     __end_of_UART_Buffer:
  2316                           
  2317                           	psect	text10
  2318  0470                     __ptext10:	
  2319 ;; *************** function _UART_Write *****************
  2320 ;; Defined at:
  2321 ;;		line 34 in file "UART.c"
  2322 ;; Parameters:    Size  Location     Type
  2323 ;;  data            1    wreg     unsigned char 
  2324 ;; Auto vars:     Size  Location     Type
  2325 ;;  data            1    0[COMMON] unsigned char 
  2326 ;; Return value:  Size  Location     Type
  2327 ;;                  1    wreg      void 
  2328 ;; Registers used:
  2329 ;;		wreg
  2330 ;; Tracked objects:
  2331 ;;		On entry : 0/0
  2332 ;;		On exit  : 0/0
  2333 ;;		Unchanged: 0/0
  2334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2335 ;;      Params:         0       0       0       0       0
  2336 ;;      Locals:         1       0       0       0       0
  2337 ;;      Temps:          0       0       0       0       0
  2338 ;;      Totals:         1       0       0       0       0
  2339 ;;Total ram usage:        1 bytes
  2340 ;; Hardware stack levels used: 1
  2341 ;; This function calls:
  2342 ;;		Nothing
  2343 ;; This function is called by:
  2344 ;;		_ADC_print_burst
  2345 ;;		_UART_Buffer
  2346 ;; This function uses a non-reentrant model
  2347 ;;
  2348                           
  2349                           
  2350                           ;psect for function _UART_Write
  2351  0470                     _UART_Write:
  2352                           
  2353                           ;incstack = 0
  2354                           ; Regs used in _UART_Write: [wreg]
  2355                           ;UART_Write@data stored from wreg
  2356  0470  00F0               	movwf	UART_Write@data
  2357  0471                     l1102:
  2358  0471                     l83:	
  2359                           ;UART.c: 34: void UART_Write(uint8_t data);UART.c: 35: {;UART.c: 36:   while(!TRMT);
  2360                           
  2361  0471  1683               	bsf	3,5	;RP0=1, select bank1
  2362  0472  1303               	bcf	3,6	;RP1=0, select bank1
  2363  0473  1C98               	btfss	24,1	;volatile
  2364  0474  2C76               	goto	u391
  2365  0475  2C77               	goto	u390
  2366  0476                     u391:
  2367  0476  2C71               	goto	l83
  2368  0477                     u390:
  2369  0477                     l1104:
  2370                           
  2371                           ;UART.c: 37:   TXREG = data;
  2372  0477  0870               	movf	UART_Write@data,w
  2373  0478  1283               	bcf	3,5	;RP0=0, select bank0
  2374  0479  1303               	bcf	3,6	;RP1=0, select bank0
  2375  047A  0099               	movwf	25	;volatile
  2376  047B                     l86:
  2377  047B  0008               	return
  2378  047C                     __end_of_UART_Write:
  2379                           
  2380                           	psect	text11
  2381  0544                     __ptext11:	
  2382 ;; *************** function _ADC_burst *****************
  2383 ;; Defined at:
  2384 ;;		line 59 in file "ADC.c"
  2385 ;; Parameters:    Size  Location     Type
  2386 ;;  channels        1    wreg     PTR unsigned char 
  2387 ;;		 -> ANChannels(8), 
  2388 ;;  reading         1    3[COMMON] PTR unsigned int 
  2389 ;;		 -> ANRead(16), 
  2390 ;;  numberc         1    4[COMMON] unsigned char 
  2391 ;; Auto vars:     Size  Location     Type
  2392 ;;  channels        1    7[COMMON] PTR unsigned char 
  2393 ;;		 -> ANChannels(8), 
  2394 ;;  n               1    8[COMMON] unsigned char 
  2395 ;; Return value:  Size  Location     Type
  2396 ;;                  1    wreg      void 
  2397 ;; Registers used:
  2398 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2399 ;; Tracked objects:
  2400 ;;		On entry : 0/0
  2401 ;;		On exit  : 0/0
  2402 ;;		Unchanged: 0/0
  2403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2404 ;;      Params:         2       0       0       0       0
  2405 ;;      Locals:         2       0       0       0       0
  2406 ;;      Temps:          2       0       0       0       0
  2407 ;;      Totals:         6       0       0       0       0
  2408 ;;Total ram usage:        6 bytes
  2409 ;; Hardware stack levels used: 1
  2410 ;; Hardware stack levels required when called: 1
  2411 ;; This function calls:
  2412 ;;		_ADC_init_channel
  2413 ;; This function is called by:
  2414 ;;		_main
  2415 ;; This function uses a non-reentrant model
  2416 ;;
  2417                           
  2418                           
  2419                           ;psect for function _ADC_burst
  2420  0544                     _ADC_burst:
  2421                           
  2422                           ;incstack = 0
  2423                           ; Regs used in _ADC_burst: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2424                           ;ADC_burst@channels stored from wreg
  2425  0544  00F7               	movwf	ADC_burst@channels
  2426  0545                     l1272:
  2427                           
  2428                           ;ADC.c: 59: void ADC_burst(uint8_t *channels,uint16_t *reading,uint8_t numberc);ADC.c: 6
      +                          0: {;ADC.c: 61:     for(uint8_t n=0;n<numberc;n++ )
  2429  0545  01F8               	clrf	ADC_burst@n
  2430  0546  2D6E               	goto	l1280
  2431  0547                     l1274:
  2432                           
  2433                           ;ADC.c: 62:     {;ADC.c: 63:         ADC_init_channel(channels[n]);
  2434  0547  0878               	movf	ADC_burst@n,w
  2435  0548  0777               	addwf	ADC_burst@channels,w
  2436  0549  00F5               	movwf	??_ADC_burst
  2437  054A  0875               	movf	??_ADC_burst,w
  2438  054B  0084               	movwf	4
  2439  054C  1383               	bcf	3,7	;select IRP bank0
  2440  054D  0800               	movf	0,w
  2441  054E  120A  118A  24D6  120A  118A  	fcall	_ADC_init_channel
  2442  0553                     l39:	
  2443                           ;ADC.c: 64:         while(ADCON0bits.GO_DONE);
  2444                           
  2445  0553  1283               	bcf	3,5	;RP0=0, select bank0
  2446  0554  1303               	bcf	3,6	;RP1=0, select bank0
  2447  0555  189F               	btfsc	31,1	;volatile
  2448  0556  2D58               	goto	u701
  2449  0557  2D59               	goto	u700
  2450  0558                     u701:
  2451  0558  2D53               	goto	l39
  2452  0559                     u700:
  2453  0559                     l1276:
  2454                           
  2455                           ;ADC.c: 65:         reading[n] = (ADRESH << 8) + ADRESL;
  2456  0559  0878               	movf	ADC_burst@n,w
  2457  055A  00F5               	movwf	??_ADC_burst
  2458  055B  0775               	addwf	??_ADC_burst,w
  2459  055C  0773               	addwf	ADC_burst@reading,w
  2460  055D  00F6               	movwf	??_ADC_burst+1
  2461  055E  0876               	movf	??_ADC_burst+1,w
  2462  055F  0084               	movwf	4
  2463  0560  1683               	bsf	3,5	;RP0=1, select bank1
  2464  0561  1303               	bcf	3,6	;RP1=0, select bank1
  2465  0562  081E               	movf	30,w	;volatile
  2466  0563  1383               	bcf	3,7	;select IRP bank0
  2467  0564  0080               	movwf	0
  2468  0565  0A84               	incf	4,f
  2469  0566  1283               	bcf	3,5	;RP0=0, select bank0
  2470  0567  1303               	bcf	3,6	;RP1=0, select bank0
  2471  0568  081E               	movf	30,w	;volatile
  2472  0569  0080               	movwf	0
  2473  056A                     l1278:
  2474                           
  2475                           ;ADC.c: 66:     }
  2476  056A  3001               	movlw	1
  2477  056B  00F5               	movwf	??_ADC_burst
  2478  056C  0875               	movf	??_ADC_burst,w
  2479  056D  07F8               	addwf	ADC_burst@n,f
  2480  056E                     l1280:
  2481  056E  0874               	movf	ADC_burst@numberc,w
  2482  056F  0278               	subwf	ADC_burst@n,w
  2483  0570  1C03               	skipc
  2484  0571  2D73               	goto	u711
  2485  0572  2D74               	goto	u710
  2486  0573                     u711:
  2487  0573  2D47               	goto	l1274
  2488  0574                     u710:
  2489  0574                     l43:
  2490  0574  0008               	return
  2491  0575                     __end_of_ADC_burst:
  2492                           
  2493                           	psect	text12
  2494  04D6                     __ptext12:	
  2495 ;; *************** function _ADC_init_channel *****************
  2496 ;; Defined at:
  2497 ;;		line 19 in file "ADC.c"
  2498 ;; Parameters:    Size  Location     Type
  2499 ;;  channel         1    wreg     unsigned char 
  2500 ;; Auto vars:     Size  Location     Type
  2501 ;;  channel         1    2[COMMON] unsigned char 
  2502 ;; Return value:  Size  Location     Type
  2503 ;;                  1    wreg      void 
  2504 ;; Registers used:
  2505 ;;		wreg, status,2, status,0
  2506 ;; Tracked objects:
  2507 ;;		On entry : 0/0
  2508 ;;		On exit  : 0/0
  2509 ;;		Unchanged: 0/0
  2510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2511 ;;      Params:         0       0       0       0       0
  2512 ;;      Locals:         1       0       0       0       0
  2513 ;;      Temps:          2       0       0       0       0
  2514 ;;      Totals:         3       0       0       0       0
  2515 ;;Total ram usage:        3 bytes
  2516 ;; Hardware stack levels used: 1
  2517 ;; This function calls:
  2518 ;;		Nothing
  2519 ;; This function is called by:
  2520 ;;		_ADC_burst
  2521 ;; This function uses a non-reentrant model
  2522 ;;
  2523                           
  2524                           
  2525                           ;psect for function _ADC_init_channel
  2526  04D6                     _ADC_init_channel:
  2527                           
  2528                           ;incstack = 0
  2529                           ; Regs used in _ADC_init_channel: [wreg+status,2+status,0]
  2530                           ;ADC_init_channel@channel stored from wreg
  2531  04D6  00F2               	movwf	ADC_init_channel@channel
  2532  04D7                     l1236:
  2533                           
  2534                           ;ADC.c: 19: void ADC_init_channel(char channel);ADC.c: 20: {;ADC.c: 22:     ADCON0 = 0x8
      +                          1;
  2535  04D7  3081               	movlw	129
  2536  04D8  1283               	bcf	3,5	;RP0=0, select bank0
  2537  04D9  1303               	bcf	3,6	;RP1=0, select bank0
  2538  04DA  009F               	movwf	31	;volatile
  2539                           
  2540                           ;ADC.c: 23:     ADCON1 = 0x80;
  2541  04DB  3080               	movlw	128
  2542  04DC  1683               	bsf	3,5	;RP0=1, select bank1
  2543  04DD  1303               	bcf	3,6	;RP1=0, select bank1
  2544  04DE  009F               	movwf	31	;volatile
  2545  04DF                     l1238:
  2546                           
  2547                           ;ADC.c: 24:     ADCON0 |= (channel<<2);
  2548  04DF  0872               	movf	ADC_init_channel@channel,w	;volatile
  2549  04E0  00F0               	movwf	??_ADC_init_channel
  2550  04E1  3001               	movlw	1
  2551  04E2                     u625:
  2552  04E2  1003               	clrc
  2553  04E3  0DF0               	rlf	??_ADC_init_channel,f
  2554  04E4  3EFF               	addlw	-1
  2555  04E5  1D03               	skipz
  2556  04E6  2CE2               	goto	u625
  2557  04E7  1003               	clrc
  2558  04E8  0D70               	rlf	??_ADC_init_channel,w
  2559  04E9  00F1               	movwf	??_ADC_init_channel+1
  2560  04EA  0871               	movf	??_ADC_init_channel+1,w
  2561  04EB  1283               	bcf	3,5	;RP0=0, select bank0
  2562  04EC  1303               	bcf	3,6	;RP1=0, select bank0
  2563  04ED  049F               	iorwf	31,f	;volatile
  2564  04EE                     l1240:
  2565                           
  2566                           ;ADC.c: 27:     _delay((unsigned long)((5)*(16000000/4000000.0)));
  2567  04EE  3006               	movlw	6
  2568  04EF  00F0               	movwf	??_ADC_init_channel
  2569  04F0                     u767:
  2570  04F0  0BF0               	decfsz	??_ADC_init_channel,f
  2571  04F1  2CF0               	goto	u767
  2572  04F2  0000               	nop
  2573  04F3                     l1242:
  2574                           
  2575                           ;ADC.c: 30:     GO_DONE = 1;
  2576  04F3  1283               	bcf	3,5	;RP0=0, select bank0
  2577  04F4  1303               	bcf	3,6	;RP1=0, select bank0
  2578  04F5  149F               	bsf	31,1	;volatile
  2579  04F6                     l31:
  2580  04F6  0008               	return
  2581  04F7                     __end_of_ADC_init_channel:
  2582  007E                     btemp	set	126	;btemp
  2583  007E                     wtemp0	set	126
  2584                           
  2585                           	psect	config
  2586                           
  2587                           ;Config register CONFIG1 @ 0x2007
  2588                           ;	Oscillator Selection bits
  2589                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  2590                           ;	Watchdog Timer Enable bit
  2591                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2592                           ;	Power-up Timer Enable bit
  2593                           ;	PWRTE = OFF, PWRT disabled
  2594                           ;	RE3/MCLR pin function select bit
  2595                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  2596                           ;	Code Protection bit
  2597                           ;	CP = OFF, Program memory code protection is disabled
  2598                           ;	Data Code Protection bit
  2599                           ;	CPD = OFF, Data memory code protection is disabled
  2600                           ;	Brown Out Reset Selection bits
  2601                           ;	BOREN = OFF, BOR disabled
  2602                           ;	Internal External Switchover bit
  2603                           ;	IESO = ON, Internal/External Switchover mode is enabled
  2604                           ;	Fail-Safe Clock Monitor Enabled bit
  2605                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2606                           ;	Low Voltage Programming Enable bit
  2607                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2608                           ;	In-Circuit Debugger Mode bit
  2609                           ;	DEBUG = 0x1, unprogrammed default
  2610  2007                     	org	8199
  2611  2007  24F2               	dw	9458
  2612                           
  2613                           ;Config register CONFIG2 @ 0x2008
  2614                           ;	Brown-out Reset Selection bit
  2615                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2616                           ;	Flash Program Memory Self Write Enable bits
  2617                           ;	WRT = OFF, Write protection off
  2618  2008                     	org	8200
  2619  2008  3FFF               	dw	16383

Data Sizes:
    Strings     4
    Constant    10
    Data        27
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     33      63
    BANK1            80      0      19
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 19
		 -> mensaje(BANK1[19]), UART_number@buffer(BANK0[10]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 19
		 -> mensaje(BANK1[19]), UART_number@buffer(BANK0[10]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_1(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> UART_number@buffer(BANK0[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    UART_Buffer@buffer	PTR unsigned char  size(1) Largest target is 19
		 -> mensaje(BANK1[19]), UART_number@buffer(BANK0[10]), 

    ADC_print_burst@BurstReadings	PTR unsigned int  size(1) Largest target is 16
		 -> ANRead(BANK0[16]), 

    ADC_burst@reading	PTR unsigned int  size(1) Largest target is 16
		 -> ANRead(BANK0[16]), 

    ADC_burst@channels	PTR unsigned char  size(1) Largest target is 8
		 -> ANChannels(BANK0[8]), 


Critical Paths under _main in COMMON

    _UART_TX_Init->___lldiv
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _UART_Buffer->_strlen
    _ADC_burst->_ADC_init_channel

Critical Paths under _main in BANK0

    _main->_ADC_print_burst
    _ADC_print_burst->_UART_number
    _UART_number->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3334
                                             31 BANK0      2     2      0
                          _ADC_burst
                    _ADC_print_burst
                        _UART_Buffer
                       _UART_TX_Init
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _UART_TX_Init                                        10     6      4     457
                                              0 BANK0     10     6      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _ADC_print_burst                                      5     4      1    2071
                                             26 BANK0      5     4      1
                         _UART_Write
                        _UART_number
 ---------------------------------------------------------------------------------
 (2) _UART_number                                         13    11      2    1850
                                             13 BANK0     13    11      2
                        _UART_Buffer
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strlen                                               5     3      2     156
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             21    18      3    1211
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _UART_Buffer                                          4     3      1     309
                                              5 COMMON     4     3      1
                         _UART_Write
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_burst                                            6     4      2     341
                                              3 COMMON     6     4      2
                   _ADC_init_channel
 ---------------------------------------------------------------------------------
 (2) _ADC_init_channel                                     3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_burst
     _ADC_init_channel
   _ADC_print_burst
     _UART_Write
     _UART_number
       _UART_Buffer
         _UART_Write
         _strlen (ARG)
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
       _strlen
   _UART_Buffer
   _UART_TX_Init
     ___lldiv
   _strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      13       7       23.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     21      3F       5       78.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      60      12        0.0%
ABS                  0      0      60       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Jun 08 18:52:01 2022

                            pc 0002                             l31 04F6                             l43 0574  
                           l39 0553                             l80 068A                             l49 0543  
                           l83 0471                             l86 047B                             l95 04D5  
                           l98 0519                             fsr 0004             __size_of_ADC_burst 0031  
                          l308 06F0                            l268 07D8                            l544 05F2  
                          l554 05AE                            l726 04BA                            _GIE 005F  
                          _RC2 003A                            u400 05B7                            u401 05B6  
                          u420 05C9                            u500 0597                            u421 05C8  
                          u501 0596                            u415 05BB                            u440 05DA  
                          u520 05AA                            u600 07D4                            u441 05D9  
                          u521 05A9                            u505 0593                            u601 07D3  
                          u530 04D5                            u610 04B4                            u531 04D4  
                          u435 05CA                            u515 059E                            u611 04B3  
                          u700 0559                            u460 05EE                            u540 06FF  
                          u701 0558                            u461 05ED                            u445 05D6  
                          u541 06FE                            u710 0574                            u390 0477  
                          u470 057B                            u550 0739                            u630 069B  
                          u711 0573                            u391 0476                            u455 05E2  
                          u471 057A                            u551 0738                            u631 069A  
                          u560 075F                            u720 053D                            u625 04E2  
                          u561 075E                            u721 053C                            u490 058D  
                          u570 076A                            u650 06AF                            u730 0665  
                          u491 058C                            u571 0769                            u651 06AE  
                          u580 0770                            u485 057F                            u581 076F  
                          u565 075B                            u645 06A0                            u590 07C2  
                          u670 06CA                            u591 07C1                            u671 06C9  
                          u735 0660                            u665 06B1                            u690 06E8  
                          u691 06E7                            u675 06C6                            u685 06DA  
                          u757 0636                            u767 04F0                            fsr0 0004  
                          indf 0000                           l1102 0471                           l1110 05B7  
                         l1104 0477                           l1120 05DA                           l1112 05BA  
                         l1200 076A                           l1122 05E0                           l1114 05C1  
                         l1106 05AF                           l1210 07AE                           l1202 0770  
                         l1124 05E1                           l1116 05C5                           l1108 05B1  
                         l1140 0589                           l1132 0575                           l1212 07B5  
                         l1204 0777                           l1300 067C                           l1126 05E8  
                         l1118 05C9                           l1142 058D                           l1134 057B  
                         l1150 05AA                           l1214 07B9                           l1206 077B  
                         l1230 04AC                           l1302 0682                           l1240 04EE  
                         l1160 04CB                           l1128 05EE                           l1144 0597  
                         l1136 057E                           l1208 0780                           l1216 07C2  
                         l1232 04B4                           l1304 0683                           l1242 04F3  
                         l1162 04CF                           l1154 04BC                           l1146 059D  
                         l1138 0585                           l1218 07D4                           l1170 0706  
                         l1226 04A3                           l1250 069B                           l1306 0686  
                         l1236 04D7                           l1156 04BE                           l1148 05A4  
                         l1180 0731                           l1172 070B                           l1164 06F4  
                         l1228 04A8                           l1244 04F7                           l1260 06CA  
                         l1252 069E                           l1308 0689                           l1238 04DF  
                         l1158 04C7                           l1182 0735                           l1166 06F9  
                         l1246 0507                           l1262 06D8                           l1254 06AB  
                         l1280 056E                           l1272 0545                           l1184 0739  
                         l1176 070C                           l1168 06FF                           l1264 06D9  
                         l1256 06AF                           l1248 068B                           l1274 0547  
                         l1194 0744                           l1186 073D                           l1178 0729  
                         l1290 053D                           l1282 051D                           l1266 06E2  
                         l1258 06B8                           l1370 0624                           l1276 0559  
                         l1188 0742                           l1284 051F                           l1268 06E8  
                         l1292 063E                           l1372 0630                           l1364 05F3  
                         l1278 056A                           l1198 0760                           l1286 0531  
                         l1294 0670                           l1366 0602                           l1288 0537  
                         l1296 0673                           l1368 0614                           l1394 071E  
                         l1298 0676                           _ADIE 0466                           _ADIF 0066  
                         STR_1 0013                           _BRGH 04C2               ?_ADC_print_burst 003A  
                         _PEIE 005E                           _TMR1 000E                           _SPEN 00C7  
                         _TRMT 04C1                           _TXEN 04C5                           _SYNC 04C4  
                         _main 05F3                           btemp 007E                           start 0000  
    __size_of_ADC_init_channel 0021  ADC_print_burst@NumberReadings 003A                          ?_main 0070  
                        _BRG16 0C3B                __end_of___lldiv 06F1                __end_of___lwdiv 05F3  
              __end_of___lwmod 05AF                          _SPBRG 0099                          _TXREG 0019  
                  ?_UART_Write 0070                __end_of_dpowers 0013                          pclath 000A  
                        status 0003                          wtemp0 007E                __end_of_sprintf 07D9  
            __end_of_ADC_burst 0575                __initialization 07D9                   __end_of_main 063E  
                       ??_main 003F                         _ADCON0 001F                         _ADCON1 009F  
                       _ADRESH 001E                         _ADRESL 009E                         _ANRead 0047  
                       _TMR1IE 0460                         _TMR1IF 0060                         _TMR1CS 0081  
                       _SPBRGH 009A                         _TMR1ON 0080                         _TRISC6 043E  
                 ?_UART_Buffer 0075            __size_of_UART_Write 000C               UART_TX_Init@baud 0020  
                    ??___lldiv 0078              ADC_burst@channels 0077                      ??___lwdiv 0074  
             UART_TX_Init@temp 0028                      ??___lwmod 007C                   ?_UART_number 002D  
                       _strlen 04A2                      ??_sprintf 0023               UART_Buffer@count 0077  
      __end_of__initialization 07FC               _ADC_init_channel 04D6                 __pcstackCOMMON 0070  
                 __pidataBANK0 0468                   __pidataBANK1 048F         _timer_overflow_counter 0041  
                   __pbssBANK0 0041               ADC_print_burst@n 003E                     __pmaintext 05F3  
                      _AN0_RES 0045                        _T1CKPS0 0084                        _T1CKPS1 0085  
                      ?_strlen 0070                        _GO_DONE 00F9                   ??_UART_Write 0070  
                ?_UART_TX_Init 0020                     __stringtab 0003                     ADC_burst@n 0078  
     __size_of_ADC_print_burst 002A           __size_of_UART_Buffer 001B                      _ADC_burst 0544  
                      ___lldiv 068B             __end_of_UART_Write 047C                        ___lwdiv 05AF  
                      ___lwmod 0575                        __ptext1 063E                        __ptext2 068B  
                      __ptext3 051A                        __ptext4 04F7                        __ptext5 04A2  
                      __ptext6 06F1                        __ptext7 0575                        __ptext8 05AF  
                      __ptext9 04BB           __size_of_UART_number 0023                __size_of_strlen 0019  
                      _dpowers 0009                        _mensaje 00A0                 ??_UART_TX_Init 0024  
                      _sprintf 06F1                        clrloop0 0461           end_of_initialization 07FC  
              ___lldiv@divisor 0070                ___lldiv@counter 007D                     ?_ADC_burst 0073  
                      strlen@s 0074                 UART_Write@data 0070              UART_Buffer@buffer 0078  
     __end_of_ADC_init_channel 04F7              ??_ADC_print_burst 003B              UART_number@buffer 0030  
               __end_of_strlen 04BB              UART_number@number 002D            start_initialization 07D9  
              _timer_overflows 0043                    ??_ADC_burst 0075                     init_fetch0 047C  
         __end_of_UART_TX_Init 068B                    __pdataBANK0 0057                    __pdataBANK1 00A0  
             ADC_burst@reading 0073                       ??_strlen 0072               ADC_burst@numberc 0074  
              UART_Buffer@size 0075                      ___latbits 0002                  __pcstackBANK0 0020  
                  sprintf@flag 0027                    sprintf@prec 0028               ___lwdiv@dividend 0072  
 ADC_print_burst@BurstReadings 003D                       ?___lldiv 0070                       ?___lwdiv 0070  
                     ?___lwmod 0078                      __pstrings 0003               ___lwdiv@quotient 0075  
                     ?_sprintf 0020                  ??_UART_Buffer 0076                      clear_ram0 0460  
                ??_UART_number 002F                     _ADCON0bits 001F                    __stringbase 0008  
            ?_ADC_init_channel 0070             ??_ADC_init_channel 0070                _ADC_print_burst 051A  
        __size_of_UART_TX_Init 004D            __end_of_UART_Buffer 04D6               __size_of___lldiv 0066  
             __size_of___lwdiv 0044               __size_of___lwmod 003A             __end_of__stringtab 0009  
                   sprintf@val 0029            __end_of_UART_number 051A                ___lwdiv@divisor 0070  
              ___lwdiv@counter 0077                       __ptext10 0470                       __ptext11 0544  
                     __ptext12 04D6               __size_of_sprintf 00E8                   _UART_TX_Init 063E  
                   _ANChannels 0057                  __size_of_main 004B                       init_ram0 0480  
      ADC_init_channel@channel 0072        __end_of_ADC_print_burst 0544                      sprintf@ap 0026  
                    sprintf@sp 002B               ___lwmod@dividend 007A               ___lldiv@dividend 0074  
                  _UART_Buffer 04BB                      stringcode 0003                    _UART_number 04F7  
                     sprintf@c 002C                       sprintf@f 0020               ___lldiv@quotient 0079  
              ___lwmod@divisor 0078                       strlen@cp 0073                ___lwmod@counter 007D  
                     stringdir 0003                       stringtab 0003                     _UART_Write 0470  
