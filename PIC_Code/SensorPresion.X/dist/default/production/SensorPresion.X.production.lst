

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Jun 06 14:38:45 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    21                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.20
    32                           ; Generated 12/02/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F886 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  0089                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  008F                     	;# 
   108  0090                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0094                     	;# 
   115  0095                     	;# 
   116  0096                     	;# 
   117  0097                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009A                     	;# 
   121  009B                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  0105                     	;# 
   127  0107                     	;# 
   128  0108                     	;# 
   129  0109                     	;# 
   130  010C                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  010F                     	;# 
   135  0185                     	;# 
   136  0187                     	;# 
   137  0188                     	;# 
   138  0189                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  0000                     	;# 
   142  0001                     	;# 
   143  0002                     	;# 
   144  0003                     	;# 
   145  0004                     	;# 
   146  0005                     	;# 
   147  0006                     	;# 
   148  0007                     	;# 
   149  0009                     	;# 
   150  000A                     	;# 
   151  000B                     	;# 
   152  000C                     	;# 
   153  000D                     	;# 
   154  000E                     	;# 
   155  000E                     	;# 
   156  000F                     	;# 
   157  0010                     	;# 
   158  0011                     	;# 
   159  0012                     	;# 
   160  0013                     	;# 
   161  0014                     	;# 
   162  0015                     	;# 
   163  0015                     	;# 
   164  0016                     	;# 
   165  0017                     	;# 
   166  0018                     	;# 
   167  0019                     	;# 
   168  001A                     	;# 
   169  001B                     	;# 
   170  001B                     	;# 
   171  001C                     	;# 
   172  001D                     	;# 
   173  001E                     	;# 
   174  001F                     	;# 
   175  0081                     	;# 
   176  0085                     	;# 
   177  0086                     	;# 
   178  0087                     	;# 
   179  0089                     	;# 
   180  008C                     	;# 
   181  008D                     	;# 
   182  008E                     	;# 
   183  008F                     	;# 
   184  0090                     	;# 
   185  0091                     	;# 
   186  0092                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0093                     	;# 
   190  0094                     	;# 
   191  0095                     	;# 
   192  0096                     	;# 
   193  0097                     	;# 
   194  0098                     	;# 
   195  0099                     	;# 
   196  009A                     	;# 
   197  009B                     	;# 
   198  009C                     	;# 
   199  009D                     	;# 
   200  009E                     	;# 
   201  009F                     	;# 
   202  0105                     	;# 
   203  0107                     	;# 
   204  0108                     	;# 
   205  0109                     	;# 
   206  010C                     	;# 
   207  010C                     	;# 
   208  010D                     	;# 
   209  010E                     	;# 
   210  010F                     	;# 
   211  0185                     	;# 
   212  0187                     	;# 
   213  0188                     	;# 
   214  0189                     	;# 
   215  018C                     	;# 
   216  018D                     	;# 
   217  0000                     	;# 
   218  0001                     	;# 
   219  0002                     	;# 
   220  0003                     	;# 
   221  0004                     	;# 
   222  0005                     	;# 
   223  0006                     	;# 
   224  0007                     	;# 
   225  0009                     	;# 
   226  000A                     	;# 
   227  000B                     	;# 
   228  000C                     	;# 
   229  000D                     	;# 
   230  000E                     	;# 
   231  000E                     	;# 
   232  000F                     	;# 
   233  0010                     	;# 
   234  0011                     	;# 
   235  0012                     	;# 
   236  0013                     	;# 
   237  0014                     	;# 
   238  0015                     	;# 
   239  0015                     	;# 
   240  0016                     	;# 
   241  0017                     	;# 
   242  0018                     	;# 
   243  0019                     	;# 
   244  001A                     	;# 
   245  001B                     	;# 
   246  001B                     	;# 
   247  001C                     	;# 
   248  001D                     	;# 
   249  001E                     	;# 
   250  001F                     	;# 
   251  0081                     	;# 
   252  0085                     	;# 
   253  0086                     	;# 
   254  0087                     	;# 
   255  0089                     	;# 
   256  008C                     	;# 
   257  008D                     	;# 
   258  008E                     	;# 
   259  008F                     	;# 
   260  0090                     	;# 
   261  0091                     	;# 
   262  0092                     	;# 
   263  0093                     	;# 
   264  0093                     	;# 
   265  0093                     	;# 
   266  0094                     	;# 
   267  0095                     	;# 
   268  0096                     	;# 
   269  0097                     	;# 
   270  0098                     	;# 
   271  0099                     	;# 
   272  009A                     	;# 
   273  009B                     	;# 
   274  009C                     	;# 
   275  009D                     	;# 
   276  009E                     	;# 
   277  009F                     	;# 
   278  0105                     	;# 
   279  0107                     	;# 
   280  0108                     	;# 
   281  0109                     	;# 
   282  010C                     	;# 
   283  010C                     	;# 
   284  010D                     	;# 
   285  010E                     	;# 
   286  010F                     	;# 
   287  0185                     	;# 
   288  0187                     	;# 
   289  0188                     	;# 
   290  0189                     	;# 
   291  018C                     	;# 
   292  018D                     	;# 
   293  0000                     	;# 
   294  0001                     	;# 
   295  0002                     	;# 
   296  0003                     	;# 
   297  0004                     	;# 
   298  0005                     	;# 
   299  0006                     	;# 
   300  0007                     	;# 
   301  0009                     	;# 
   302  000A                     	;# 
   303  000B                     	;# 
   304  000C                     	;# 
   305  000D                     	;# 
   306  000E                     	;# 
   307  000E                     	;# 
   308  000F                     	;# 
   309  0010                     	;# 
   310  0011                     	;# 
   311  0012                     	;# 
   312  0013                     	;# 
   313  0014                     	;# 
   314  0015                     	;# 
   315  0015                     	;# 
   316  0016                     	;# 
   317  0017                     	;# 
   318  0018                     	;# 
   319  0019                     	;# 
   320  001A                     	;# 
   321  001B                     	;# 
   322  001B                     	;# 
   323  001C                     	;# 
   324  001D                     	;# 
   325  001E                     	;# 
   326  001F                     	;# 
   327  0081                     	;# 
   328  0085                     	;# 
   329  0086                     	;# 
   330  0087                     	;# 
   331  0089                     	;# 
   332  008C                     	;# 
   333  008D                     	;# 
   334  008E                     	;# 
   335  008F                     	;# 
   336  0090                     	;# 
   337  0091                     	;# 
   338  0092                     	;# 
   339  0093                     	;# 
   340  0093                     	;# 
   341  0093                     	;# 
   342  0094                     	;# 
   343  0095                     	;# 
   344  0096                     	;# 
   345  0097                     	;# 
   346  0098                     	;# 
   347  0099                     	;# 
   348  009A                     	;# 
   349  009B                     	;# 
   350  009C                     	;# 
   351  009D                     	;# 
   352  009E                     	;# 
   353  009F                     	;# 
   354  0105                     	;# 
   355  0107                     	;# 
   356  0108                     	;# 
   357  0109                     	;# 
   358  010C                     	;# 
   359  010C                     	;# 
   360  010D                     	;# 
   361  010E                     	;# 
   362  010F                     	;# 
   363  0185                     	;# 
   364  0187                     	;# 
   365  0188                     	;# 
   366  0189                     	;# 
   367  018C                     	;# 
   368  018D                     	;# 
   369  0000                     	;# 
   370  0001                     	;# 
   371  0002                     	;# 
   372  0003                     	;# 
   373  0004                     	;# 
   374  0005                     	;# 
   375  0006                     	;# 
   376  0007                     	;# 
   377  0009                     	;# 
   378  000A                     	;# 
   379  000B                     	;# 
   380  000C                     	;# 
   381  000D                     	;# 
   382  000E                     	;# 
   383  000E                     	;# 
   384  000F                     	;# 
   385  0010                     	;# 
   386  0011                     	;# 
   387  0012                     	;# 
   388  0013                     	;# 
   389  0014                     	;# 
   390  0015                     	;# 
   391  0015                     	;# 
   392  0016                     	;# 
   393  0017                     	;# 
   394  0018                     	;# 
   395  0019                     	;# 
   396  001A                     	;# 
   397  001B                     	;# 
   398  001B                     	;# 
   399  001C                     	;# 
   400  001D                     	;# 
   401  001E                     	;# 
   402  001F                     	;# 
   403  0081                     	;# 
   404  0085                     	;# 
   405  0086                     	;# 
   406  0087                     	;# 
   407  0089                     	;# 
   408  008C                     	;# 
   409  008D                     	;# 
   410  008E                     	;# 
   411  008F                     	;# 
   412  0090                     	;# 
   413  0091                     	;# 
   414  0092                     	;# 
   415  0093                     	;# 
   416  0093                     	;# 
   417  0093                     	;# 
   418  0094                     	;# 
   419  0095                     	;# 
   420  0096                     	;# 
   421  0097                     	;# 
   422  0098                     	;# 
   423  0099                     	;# 
   424  009A                     	;# 
   425  009B                     	;# 
   426  009C                     	;# 
   427  009D                     	;# 
   428  009E                     	;# 
   429  009F                     	;# 
   430  0105                     	;# 
   431  0107                     	;# 
   432  0108                     	;# 
   433  0109                     	;# 
   434  010C                     	;# 
   435  010C                     	;# 
   436  010D                     	;# 
   437  010E                     	;# 
   438  010F                     	;# 
   439  0185                     	;# 
   440  0187                     	;# 
   441  0188                     	;# 
   442  0189                     	;# 
   443  018C                     	;# 
   444  018D                     	;# 
   445  0000                     	;# 
   446  0001                     	;# 
   447  0002                     	;# 
   448  0003                     	;# 
   449  0004                     	;# 
   450  0005                     	;# 
   451  0006                     	;# 
   452  0007                     	;# 
   453  0009                     	;# 
   454  000A                     	;# 
   455  000B                     	;# 
   456  000C                     	;# 
   457  000D                     	;# 
   458  000E                     	;# 
   459  000E                     	;# 
   460  000F                     	;# 
   461  0010                     	;# 
   462  0011                     	;# 
   463  0012                     	;# 
   464  0013                     	;# 
   465  0014                     	;# 
   466  0015                     	;# 
   467  0015                     	;# 
   468  0016                     	;# 
   469  0017                     	;# 
   470  0018                     	;# 
   471  0019                     	;# 
   472  001A                     	;# 
   473  001B                     	;# 
   474  001B                     	;# 
   475  001C                     	;# 
   476  001D                     	;# 
   477  001E                     	;# 
   478  001F                     	;# 
   479  0081                     	;# 
   480  0085                     	;# 
   481  0086                     	;# 
   482  0087                     	;# 
   483  0089                     	;# 
   484  008C                     	;# 
   485  008D                     	;# 
   486  008E                     	;# 
   487  008F                     	;# 
   488  0090                     	;# 
   489  0091                     	;# 
   490  0092                     	;# 
   491  0093                     	;# 
   492  0093                     	;# 
   493  0093                     	;# 
   494  0094                     	;# 
   495  0095                     	;# 
   496  0096                     	;# 
   497  0097                     	;# 
   498  0098                     	;# 
   499  0099                     	;# 
   500  009A                     	;# 
   501  009B                     	;# 
   502  009C                     	;# 
   503  009D                     	;# 
   504  009E                     	;# 
   505  009F                     	;# 
   506  0105                     	;# 
   507  0107                     	;# 
   508  0108                     	;# 
   509  0109                     	;# 
   510  010C                     	;# 
   511  010C                     	;# 
   512  010D                     	;# 
   513  010E                     	;# 
   514  010F                     	;# 
   515  0185                     	;# 
   516  0187                     	;# 
   517  0188                     	;# 
   518  0189                     	;# 
   519  018C                     	;# 
   520  018D                     	;# 
   521                           
   522                           	psect	idataBANK0
   523  0467                     __pidataBANK0:
   524                           
   525                           ;initializer for _ANChannels
   526  0467  340C               	retlw	12
   527  0468  340A               	retlw	10
   528  0469  3408               	retlw	8
   529  046A  3409               	retlw	9
   530  046B  340B               	retlw	11
   531  046C  340D               	retlw	13
   532  046D  3401               	retlw	1
   533  046E  3400               	retlw	0
   534                           
   535                           	psect	idataBANK1
   536  048E                     __pidataBANK1:
   537                           
   538                           ;initializer for _mensaje
   539  048E  3450               	retlw	80
   540  048F  3472               	retlw	114
   541  0490  346F               	retlw	111
   542  0491  3467               	retlw	103
   543  0492  3472               	retlw	114
   544  0493  3461               	retlw	97
   545  0494  346D               	retlw	109
   546  0495  3461               	retlw	97
   547  0496  3420               	retlw	32
   548  0497  3449               	retlw	73
   549  0498  346E               	retlw	110
   550  0499  3469               	retlw	105
   551  049A  3463               	retlw	99
   552  049B  3469               	retlw	105
   553  049C  3461               	retlw	97
   554  049D  3464               	retlw	100
   555  049E  346F               	retlw	111
   556  049F  340A               	retlw	10
   557  04A0  3400               	retlw	0
   558                           
   559                           	psect	strings
   560  0003                     __pstrings:
   561  0003                     stringtab:
   562  0003                     __stringtab:
   563  0003                     stringcode:	
   564                           ;	String table - string pointers are 1 byte each
   565                           
   566  0003                     stringdir:
   567  0003  3000               	movlw	high stringdir
   568  0004  008A               	movwf	10
   569  0005  0804               	movf	4,w
   570  0006  0A84               	incf	4,f
   571  0007  0782               	addwf	2,f
   572  0008                     __stringbase:
   573  0008  3400               	retlw	0
   574  0009                     __end_of__stringtab:
   575  0009                     _dpowers:
   576  0009  3401               	retlw	1
   577  000A  3400               	retlw	0
   578  000B  340A               	retlw	10
   579  000C  3400               	retlw	0
   580  000D  3464               	retlw	100
   581  000E  3400               	retlw	0
   582  000F  34E8               	retlw	232
   583  0010  3403               	retlw	3
   584  0011  3410               	retlw	16
   585  0012  3427               	retlw	39
   586  0013                     __end_of_dpowers:
   587  000E                     _TMR1	set	14
   588  0019                     _TXREG	set	25
   589  001E                     _ADRESH	set	30
   590  001F                     _ADCON0bits	set	31
   591  001F                     _ADCON0	set	31
   592  003A                     _RC2	set	58
   593  0080                     _TMR1ON	set	128
   594  0060                     _TMR1IF	set	96
   595  0085                     _T1CKPS1	set	133
   596  0084                     _T1CKPS0	set	132
   597  0081                     _TMR1CS	set	129
   598  00C7                     _SPEN	set	199
   599  005F                     _GIE	set	95
   600  005E                     _PEIE	set	94
   601  0066                     _ADIF	set	102
   602  00F9                     _GO_DONE	set	249
   603  009A                     _SPBRGH	set	154
   604  0099                     _SPBRG	set	153
   605  009E                     _ADRESL	set	158
   606  009F                     _ADCON1	set	159
   607  0460                     _TMR1IE	set	1120
   608  04C1                     _TRMT	set	1217
   609  04C5                     _TXEN	set	1221
   610  043E                     _TRISC6	set	1086
   611  04C4                     _SYNC	set	1220
   612  04C2                     _BRGH	set	1218
   613  0466                     _ADIE	set	1126
   614  0C3B                     _BRG16	set	3131
   615  0013                     STR_1:
   616  0013  3425               	retlw	37	;'%'
   617  0014  3464               	retlw	100	;'d'
   618  0015  340A               	retlw	10
   619  0016  3400               	retlw	0
   620                           
   621                           	psect	cinit
   622  07D9                     start_initialization:	
   623                           ; #config settings
   624                           
   625  07D9                     __initialization:
   626                           
   627                           ; Initialize objects allocated to BANK1
   628  07D9  1383               	bcf	3,7	;select IRP bank0
   629  07DA  30B3               	movlw	low (__pdataBANK1+19)
   630  07DB  00FD               	movwf	btemp+-1
   631  07DC  3004               	movlw	high __pidataBANK1
   632  07DD  00FE               	movwf	btemp
   633  07DE  308E               	movlw	low __pidataBANK1
   634  07DF  00FF               	movwf	btemp+1
   635  07E0  30A0               	movlw	low __pdataBANK1
   636  07E1  0084               	movwf	4
   637  07E2  120A  118A  247F  120A  118A  	fcall	init_ram0
   638                           
   639                           ; Initialize objects allocated to BANK0
   640  07E7  305F               	movlw	low (__pdataBANK0+8)
   641  07E8  00FD               	movwf	btemp+-1
   642  07E9  3004               	movlw	high __pidataBANK0
   643  07EA  00FE               	movwf	btemp
   644  07EB  3067               	movlw	low __pidataBANK0
   645  07EC  00FF               	movwf	btemp+1
   646  07ED  3057               	movlw	low __pdataBANK0
   647  07EE  0084               	movwf	4
   648  07EF  120A  118A  247F  120A  118A  	fcall	init_ram0
   649                           
   650                           ; Clear objects allocated to BANK0
   651  07F4  3041               	movlw	low __pbssBANK0
   652  07F5  0084               	movwf	4
   653  07F6  3057               	movlw	low (__pbssBANK0+22)
   654  07F7  120A  118A  245F  120A  118A  	fcall	clear_ram0
   655  07FC                     end_of_initialization:	
   656                           ;End of C runtime variable initialization code
   657                           
   658  07FC                     __end_of__initialization:
   659  07FC  0183               	clrf	3
   660  07FD  120A  118A  2DF2   	ljmp	_main	;jump to C main() function
   661                           
   662                           	psect	bssBANK0
   663  0041                     __pbssBANK0:
   664  0041                     _timer_overflow_counter:
   665  0041                     	ds	2
   666  0043                     _timer_overflows:
   667  0043                     	ds	2
   668  0045                     _AN0_RES:
   669  0045                     	ds	2
   670  0047                     _ANRead:
   671  0047                     	ds	16
   672                           
   673                           	psect	dataBANK0
   674  0057                     __pdataBANK0:
   675  0057                     _ANChannels:
   676  0057                     	ds	8
   677                           
   678                           	psect	dataBANK1
   679  00A0                     __pdataBANK1:
   680  00A0                     _mensaje:
   681  00A0                     	ds	19
   682                           
   683                           	psect	inittext
   684  047B                     init_fetch0:	
   685                           ;	Called with low address in FSR and high address in W
   686                           
   687  047B  087E               	movf	btemp,w
   688  047C  008A               	movwf	10
   689  047D  087F               	movf	btemp+1,w
   690  047E  0082               	movwf	2
   691  047F                     init_ram0:	
   692                           ;Called with:
   693                           ;	high address of idata address in btemp 
   694                           ;	low address of idata address in btemp+1 
   695                           ;	low address of data in FSR
   696                           ;	high address + 1 of data in btemp-1
   697                           
   698  047F  120A  118A  247B  120A  118A  	fcall	init_fetch0
   699  0484  0080               	movwf	0
   700  0485  0A84               	incf	4,f
   701  0486  0804               	movf	4,w
   702  0487  067D               	xorwf	btemp+-1,w
   703  0488  1903               	btfsc	3,2
   704  0489  3400               	retlw	0
   705  048A  0AFF               	incf	btemp+1,f
   706  048B  1903               	btfsc	3,2
   707  048C  0AFE               	incf	btemp,f
   708  048D  2C7F               	goto	init_ram0
   709                           
   710                           	psect	clrtext
   711  045F                     clear_ram0:	
   712                           ;	Called with FSR containing the base address, and
   713                           ;	W with the last address+1
   714                           
   715  045F  0064               	clrwdt	;clear the watchdog before getting into this loop
   716  0460                     clrloop0:
   717  0460  0180               	clrf	0	;clear RAM location pointed to by FSR
   718  0461  0A84               	incf	4,f	;increment pointer
   719  0462  0604               	xorwf	4,w	;XOR with final address
   720  0463  1903               	btfsc	3,2	;have we reached the end yet?
   721  0464  3400               	retlw	0	;all done for this memory range, return
   722  0465  0604               	xorwf	4,w	;XOR again to restore value
   723  0466  2C60               	goto	clrloop0	;do the next byte
   724                           
   725                           	psect	cstackCOMMON
   726  0070                     __pcstackCOMMON:
   727  0070                     ?_UART_Write:
   728  0070                     ??_UART_Write:	
   729                           ; 1 bytes @ 0x0
   730                           
   731  0070                     ?_ADC_init_channel:	
   732                           ; 1 bytes @ 0x0
   733                           
   734  0070                     ??_ADC_init_channel:	
   735                           ; 1 bytes @ 0x0
   736                           
   737  0070                     ?_main:	
   738                           ; 1 bytes @ 0x0
   739                           
   740  0070                     ?_strlen:	
   741                           ; 1 bytes @ 0x0
   742                           
   743  0070                     ?___lwdiv:	
   744                           ; 2 bytes @ 0x0
   745                           
   746  0070                     ?___lldiv:	
   747                           ; 2 bytes @ 0x0
   748                           
   749  0070                     UART_Write@data:	
   750                           ; 4 bytes @ 0x0
   751                           
   752  0070                     ___lwdiv@divisor:	
   753                           ; 1 bytes @ 0x0
   754                           
   755  0070                     ___lldiv@divisor:	
   756                           ; 2 bytes @ 0x0
   757                           
   758                           
   759                           ; 4 bytes @ 0x0
   760  0070                     	ds	2
   761  0072                     ??_strlen:
   762  0072                     ADC_init_channel@channel:	
   763                           ; 1 bytes @ 0x2
   764                           
   765  0072                     ___lwdiv@dividend:	
   766                           ; 1 bytes @ 0x2
   767                           
   768                           
   769                           ; 2 bytes @ 0x2
   770  0072                     	ds	1
   771  0073                     ?_ADC_burst:
   772  0073                     ADC_burst@reading:	
   773                           ; 1 bytes @ 0x3
   774                           
   775  0073                     strlen@cp:	
   776                           ; 1 bytes @ 0x3
   777                           
   778                           
   779                           ; 1 bytes @ 0x3
   780  0073                     	ds	1
   781  0074                     ??___lwdiv:
   782  0074                     ADC_burst@numberc:	
   783                           ; 1 bytes @ 0x4
   784                           
   785  0074                     strlen@s:	
   786                           ; 1 bytes @ 0x4
   787                           
   788  0074                     ___lldiv@dividend:	
   789                           ; 1 bytes @ 0x4
   790                           
   791                           
   792                           ; 4 bytes @ 0x4
   793  0074                     	ds	1
   794  0075                     ??_ADC_burst:
   795  0075                     ?_UART_Buffer:	
   796                           ; 1 bytes @ 0x5
   797                           
   798  0075                     UART_Buffer@size:	
   799                           ; 1 bytes @ 0x5
   800                           
   801  0075                     ___lwdiv@quotient:	
   802                           ; 1 bytes @ 0x5
   803                           
   804                           
   805                           ; 2 bytes @ 0x5
   806  0075                     	ds	1
   807  0076                     ??_UART_Buffer:
   808                           
   809                           ; 1 bytes @ 0x6
   810  0076                     	ds	1
   811  0077                     ADC_burst@channels:
   812  0077                     UART_Buffer@count:	
   813                           ; 1 bytes @ 0x7
   814                           
   815  0077                     ___lwdiv@counter:	
   816                           ; 1 bytes @ 0x7
   817                           
   818                           
   819                           ; 1 bytes @ 0x7
   820  0077                     	ds	1
   821  0078                     ??___lldiv:
   822  0078                     ?___lwmod:	
   823                           ; 1 bytes @ 0x8
   824                           
   825  0078                     ADC_burst@n:	
   826                           ; 2 bytes @ 0x8
   827                           
   828  0078                     UART_Buffer@buffer:	
   829                           ; 1 bytes @ 0x8
   830                           
   831  0078                     ___lwmod@divisor:	
   832                           ; 1 bytes @ 0x8
   833                           
   834                           
   835                           ; 2 bytes @ 0x8
   836  0078                     	ds	1
   837  0079                     ___lldiv@quotient:
   838                           
   839                           ; 4 bytes @ 0x9
   840  0079                     	ds	1
   841  007A                     ___lwmod@dividend:
   842                           
   843                           ; 2 bytes @ 0xA
   844  007A                     	ds	2
   845  007C                     ??___lwmod:
   846                           
   847                           ; 1 bytes @ 0xC
   848  007C                     	ds	1
   849  007D                     ___lldiv@counter:
   850  007D                     ___lwmod@counter:	
   851                           ; 1 bytes @ 0xD
   852                           
   853                           
   854                           ; 1 bytes @ 0xD
   855  007D                     	ds	1
   856                           
   857                           	psect	cstackBANK0
   858  0020                     __pcstackBANK0:
   859  0020                     ?_UART_TX_Init:
   860  0020                     ?_sprintf:	
   861                           ; 1 bytes @ 0x0
   862                           
   863  0020                     sprintf@f:	
   864                           ; 2 bytes @ 0x0
   865                           
   866  0020                     UART_TX_Init@baud:	
   867                           ; 1 bytes @ 0x0
   868                           
   869                           
   870                           ; 4 bytes @ 0x0
   871  0020                     	ds	3
   872  0023                     ??_sprintf:
   873                           
   874                           ; 1 bytes @ 0x3
   875  0023                     	ds	1
   876  0024                     ??_UART_TX_Init:
   877                           
   878                           ; 1 bytes @ 0x4
   879  0024                     	ds	2
   880  0026                     sprintf@ap:
   881                           
   882                           ; 1 bytes @ 0x6
   883  0026                     	ds	1
   884  0027                     sprintf@flag:
   885                           
   886                           ; 1 bytes @ 0x7
   887  0027                     	ds	1
   888  0028                     sprintf@prec:
   889  0028                     UART_TX_Init@temp:	
   890                           ; 1 bytes @ 0x8
   891                           
   892                           
   893                           ; 2 bytes @ 0x8
   894  0028                     	ds	1
   895  0029                     sprintf@val:
   896                           
   897                           ; 2 bytes @ 0x9
   898  0029                     	ds	2
   899  002B                     sprintf@sp:
   900                           
   901                           ; 1 bytes @ 0xB
   902  002B                     	ds	1
   903  002C                     sprintf@c:
   904                           
   905                           ; 1 bytes @ 0xC
   906  002C                     	ds	1
   907  002D                     ?_UART_number:
   908  002D                     UART_number@number:	
   909                           ; 1 bytes @ 0xD
   910                           
   911                           
   912                           ; 2 bytes @ 0xD
   913  002D                     	ds	2
   914  002F                     ??_UART_number:
   915                           
   916                           ; 1 bytes @ 0xF
   917  002F                     	ds	1
   918  0030                     UART_number@buffer:
   919                           
   920                           ; 10 bytes @ 0x10
   921  0030                     	ds	10
   922  003A                     ?_ADC_print_burst:
   923  003A                     ADC_print_burst@NumberReadings:	
   924                           ; 1 bytes @ 0x1A
   925                           
   926                           
   927                           ; 1 bytes @ 0x1A
   928  003A                     	ds	1
   929  003B                     ??_ADC_print_burst:
   930                           
   931                           ; 1 bytes @ 0x1B
   932  003B                     	ds	2
   933  003D                     ADC_print_burst@BurstReadings:
   934                           
   935                           ; 1 bytes @ 0x1D
   936  003D                     	ds	1
   937  003E                     ADC_print_burst@n:
   938                           
   939                           ; 1 bytes @ 0x1E
   940  003E                     	ds	1
   941  003F                     ??_main:
   942                           
   943                           ; 1 bytes @ 0x1F
   944  003F                     	ds	2
   945                           
   946                           	psect	maintext
   947  05F2                     __pmaintext:	
   948 ;;
   949 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   950 ;;
   951 ;; *************** function _main *****************
   952 ;; Defined at:
   953 ;;		line 19 in file "2_ADC_Test_Burst.c"
   954 ;; Parameters:    Size  Location     Type
   955 ;;		None
   956 ;; Auto vars:     Size  Location     Type
   957 ;;		None
   958 ;; Return value:  Size  Location     Type
   959 ;;                  1    wreg      void 
   960 ;; Registers used:
   961 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   962 ;; Tracked objects:
   963 ;;		On entry : B00/0
   964 ;;		On exit  : 0/0
   965 ;;		Unchanged: 0/0
   966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   967 ;;      Params:         0       0       0       0       0
   968 ;;      Locals:         0       0       0       0       0
   969 ;;      Temps:          0       2       0       0       0
   970 ;;      Totals:         0       2       0       0       0
   971 ;;Total ram usage:        2 bytes
   972 ;; Hardware stack levels required when called: 4
   973 ;; This function calls:
   974 ;;		_ADC_burst
   975 ;;		_ADC_print_burst
   976 ;;		_UART_Buffer
   977 ;;		_UART_TX_Init
   978 ;;		_strlen
   979 ;; This function is called by:
   980 ;;		Startup code after reset
   981 ;; This function uses a non-reentrant model
   982 ;;
   983                           
   984                           
   985                           ;psect for function _main
   986  05F2                     _main:
   987  05F2                     l1310:	
   988                           ;incstack = 0
   989                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   990                           
   991  05F2  3000               	movlw	0
   992  05F3  1283               	bcf	3,5	;RP0=0, select bank0
   993  05F4  1303               	bcf	3,6	;RP1=0, select bank0
   994  05F5  00A3               	movwf	UART_TX_Init@baud+3
   995  05F6  3003               	movlw	3
   996  05F7  00A2               	movwf	UART_TX_Init@baud+2
   997  05F8  3084               	movlw	132
   998  05F9  00A1               	movwf	UART_TX_Init@baud+1
   999  05FA  3000               	movlw	0
  1000  05FB  00A0               	movwf	UART_TX_Init@baud
  1001  05FC  120A  118A  263E  120A  118A  	fcall	_UART_TX_Init
  1002  0601                     l1312:
  1003  0601  30A0               	movlw	(low (_mensaje| 0))& (0+255)
  1004  0602  120A  118A  24A1  120A  118A  	fcall	_strlen
  1005  0607  0870               	movf	?_strlen,w
  1006  0608  1283               	bcf	3,5	;RP0=0, select bank0
  1007  0609  1303               	bcf	3,6	;RP1=0, select bank0
  1008  060A  00BF               	movwf	??_main
  1009  060B  083F               	movf	??_main,w
  1010  060C  00F5               	movwf	UART_Buffer@size
  1011  060D  30A0               	movlw	(low (_mensaje| 0))& (0+255)
  1012  060E  120A  118A  24BA  120A  118A  	fcall	_UART_Buffer
  1013  0613                     l1314:
  1014  0613  3047               	movlw	(low (_ANRead| 0))& (0+255)
  1015  0614  1283               	bcf	3,5	;RP0=0, select bank0
  1016  0615  1303               	bcf	3,6	;RP1=0, select bank0
  1017  0616  00BF               	movwf	??_main
  1018  0617  083F               	movf	??_main,w
  1019  0618  00F3               	movwf	ADC_burst@reading
  1020  0619  3008               	movlw	8
  1021  061A  00C0               	movwf	??_main+1
  1022  061B  0840               	movf	??_main+1,w
  1023  061C  00F4               	movwf	ADC_burst@numberc
  1024  061D  3057               	movlw	(low (_ANChannels| 0))& (0+255)
  1025  061E  120A  118A  2543  120A  118A  	fcall	_ADC_burst
  1026  0623                     l1316:
  1027  0623  3008               	movlw	8
  1028  0624  1283               	bcf	3,5	;RP0=0, select bank0
  1029  0625  1303               	bcf	3,6	;RP1=0, select bank0
  1030  0626  00BF               	movwf	??_main
  1031  0627  083F               	movf	??_main,w
  1032  0628  00BA               	movwf	ADC_print_burst@NumberReadings
  1033  0629  3047               	movlw	(low (_ANRead| 0))& (0+255)
  1034  062A  120A  118A  2519  120A  118A  	fcall	_ADC_print_burst
  1035  062F                     l1318:
  1036  062F  3027               	movlw	39
  1037  0630  1283               	bcf	3,5	;RP0=0, select bank0
  1038  0631  1303               	bcf	3,6	;RP1=0, select bank0
  1039  0632  00C0               	movwf	??_main+1
  1040  0633  3054               	movlw	84
  1041  0634  00BF               	movwf	??_main
  1042  0635                     u757:
  1043  0635  0BBF               	decfsz	??_main,f
  1044  0636  2E35               	goto	u757
  1045  0637  0BC0               	decfsz	??_main+1,f
  1046  0638  2E35               	goto	u757
  1047  0639  0000               	nop
  1048  063A  2E13               	goto	l1314
  1049  063B  120A  118A  2800   	ljmp	start
  1050  063E                     __end_of_main:
  1051                           
  1052                           	psect	text1
  1053  063E                     __ptext1:	
  1054 ;; *************** function _UART_TX_Init *****************
  1055 ;; Defined at:
  1056 ;;		line 15 in file "UART.c"
  1057 ;; Parameters:    Size  Location     Type
  1058 ;;  baud            4    0[BANK0 ] unsigned long 
  1059 ;; Auto vars:     Size  Location     Type
  1060 ;;  temp            2    8[BANK0 ] unsigned int 
  1061 ;; Return value:  Size  Location     Type
  1062 ;;                  1    wreg      void 
  1063 ;; Registers used:
  1064 ;;		wreg, status,2, status,0, pclath, cstack
  1065 ;; Tracked objects:
  1066 ;;		On entry : 0/0
  1067 ;;		On exit  : 0/0
  1068 ;;		Unchanged: 0/0
  1069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1070 ;;      Params:         0       4       0       0       0
  1071 ;;      Locals:         0       2       0       0       0
  1072 ;;      Temps:          0       4       0       0       0
  1073 ;;      Totals:         0      10       0       0       0
  1074 ;;Total ram usage:       10 bytes
  1075 ;; Hardware stack levels used: 1
  1076 ;; Hardware stack levels required when called: 1
  1077 ;; This function calls:
  1078 ;;		___lldiv
  1079 ;; This function is called by:
  1080 ;;		_main
  1081 ;; This function uses a non-reentrant model
  1082 ;;
  1083                           
  1084                           
  1085                           ;psect for function _UART_TX_Init
  1086  063E                     _UART_TX_Init:
  1087  063E                     l1292:	
  1088                           ;incstack = 0
  1089                           ; Regs used in _UART_TX_Init: [wreg+status,2+status,0+pclath+cstack]
  1090                           
  1091                           
  1092                           ;UART.c: 15: void UART_TX_Init(uint32_t baud);UART.c: 16: {;UART.c: 18:   uint16_t temp;
      +                          ;UART.c: 19:   temp= (uint16_t)(((16000000/baud)/4)-1);
  1093  063E  1283               	bcf	3,5	;RP0=0, select bank0
  1094  063F  1303               	bcf	3,6	;RP1=0, select bank0
  1095  0640  0823               	movf	UART_TX_Init@baud+3,w
  1096  0641  00F3               	movwf	___lldiv@divisor+3
  1097  0642  0822               	movf	UART_TX_Init@baud+2,w
  1098  0643  00F2               	movwf	___lldiv@divisor+2
  1099  0644  0821               	movf	UART_TX_Init@baud+1,w
  1100  0645  00F1               	movwf	___lldiv@divisor+1
  1101  0646  0820               	movf	UART_TX_Init@baud,w
  1102  0647  00F0               	movwf	___lldiv@divisor
  1103  0648  3000               	movlw	0
  1104  0649  00F7               	movwf	___lldiv@dividend+3
  1105  064A  30F4               	movlw	244
  1106  064B  00F6               	movwf	___lldiv@dividend+2
  1107  064C  3024               	movlw	36
  1108  064D  00F5               	movwf	___lldiv@dividend+1
  1109  064E  3000               	movlw	0
  1110  064F  00F4               	movwf	___lldiv@dividend
  1111  0650  120A  118A  268B  120A  118A  	fcall	___lldiv
  1112  0655  0870               	movf	?___lldiv,w
  1113  0656  1283               	bcf	3,5	;RP0=0, select bank0
  1114  0657  1303               	bcf	3,6	;RP1=0, select bank0
  1115  0658  00A4               	movwf	??_UART_TX_Init
  1116  0659  0871               	movf	?___lldiv+1,w
  1117  065A  00A5               	movwf	??_UART_TX_Init+1
  1118  065B  0872               	movf	?___lldiv+2,w
  1119  065C  00A6               	movwf	??_UART_TX_Init+2
  1120  065D  0873               	movf	?___lldiv+3,w
  1121  065E  00A7               	movwf	??_UART_TX_Init+3
  1122  065F  3002               	movlw	2
  1123  0660                     u735:
  1124  0660  1003               	clrc
  1125  0661  0CA7               	rrf	??_UART_TX_Init+3,f
  1126  0662  0CA6               	rrf	??_UART_TX_Init+2,f
  1127  0663  0CA5               	rrf	??_UART_TX_Init+1,f
  1128  0664  0CA4               	rrf	??_UART_TX_Init,f
  1129  0665                     u730:
  1130  0665  3EFF               	addlw	-1
  1131  0666  1D03               	skipz
  1132  0667  2E60               	goto	u735
  1133  0668  0824               	movf	??_UART_TX_Init,w
  1134  0669  3EFF               	addlw	255
  1135  066A  00A8               	movwf	UART_TX_Init@temp
  1136  066B  0825               	movf	??_UART_TX_Init+1,w
  1137  066C  1803               	skipnc
  1138  066D  3E01               	addlw	1
  1139  066E  3EFF               	addlw	255
  1140  066F  00A9               	movwf	UART_TX_Init@temp+1
  1141  0670                     l1294:
  1142                           
  1143                           ;UART.c: 20:   BRGH = 1;
  1144  0670  1683               	bsf	3,5	;RP0=1, select bank1
  1145  0671  1303               	bcf	3,6	;RP1=0, select bank1
  1146  0672  1518               	bsf	24,2	;volatile
  1147  0673                     l1296:
  1148                           
  1149                           ;UART.c: 21:   BRG16=1;
  1150  0673  1683               	bsf	3,5	;RP0=1, select bank3
  1151  0674  1703               	bsf	3,6	;RP1=1, select bank3
  1152  0675  1587               	bsf	7,3	;volatile
  1153  0676                     l1298:
  1154                           
  1155                           ;UART.c: 22:   SPBRG = 0xFF&temp;
  1156  0676  1283               	bcf	3,5	;RP0=0, select bank0
  1157  0677  1303               	bcf	3,6	;RP1=0, select bank0
  1158  0678  0828               	movf	UART_TX_Init@temp,w
  1159  0679  1683               	bsf	3,5	;RP0=1, select bank1
  1160  067A  1303               	bcf	3,6	;RP1=0, select bank1
  1161  067B  0099               	movwf	25	;volatile
  1162  067C                     l1300:
  1163                           
  1164                           ;UART.c: 23:   SPBRGH= (temp&0xFF00)>>(8);
  1165  067C  1283               	bcf	3,5	;RP0=0, select bank0
  1166  067D  1303               	bcf	3,6	;RP1=0, select bank0
  1167  067E  0829               	movf	UART_TX_Init@temp+1,w
  1168  067F  1683               	bsf	3,5	;RP0=1, select bank1
  1169  0680  1303               	bcf	3,6	;RP1=0, select bank1
  1170  0681  009A               	movwf	26	;volatile
  1171  0682                     l1302:
  1172                           
  1173                           ;UART.c: 26:   SYNC = 0;
  1174  0682  1218               	bcf	24,4	;volatile
  1175  0683                     l1304:
  1176                           
  1177                           ;UART.c: 27:   SPEN = 1;
  1178  0683  1283               	bcf	3,5	;RP0=0, select bank0
  1179  0684  1303               	bcf	3,6	;RP1=0, select bank0
  1180  0685  1798               	bsf	24,7	;volatile
  1181  0686                     l1306:
  1182                           
  1183                           ;UART.c: 29:   TRISC6 = 1;
  1184  0686  1683               	bsf	3,5	;RP0=1, select bank1
  1185  0687  1303               	bcf	3,6	;RP1=0, select bank1
  1186  0688  1707               	bsf	7,6	;volatile
  1187  0689                     l1308:
  1188                           
  1189                           ;UART.c: 30:   TXEN = 1;
  1190  0689  1698               	bsf	24,5	;volatile
  1191  068A                     l80:
  1192  068A  0008               	return
  1193  068B                     __end_of_UART_TX_Init:
  1194                           
  1195                           	psect	text2
  1196  068B                     __ptext2:	
  1197 ;; *************** function ___lldiv *****************
  1198 ;; Defined at:
  1199 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  1200 ;; Parameters:    Size  Location     Type
  1201 ;;  divisor         4    0[COMMON] unsigned long 
  1202 ;;  dividend        4    4[COMMON] unsigned long 
  1203 ;; Auto vars:     Size  Location     Type
  1204 ;;  quotient        4    9[COMMON] unsigned long 
  1205 ;;  counter         1   13[COMMON] unsigned char 
  1206 ;; Return value:  Size  Location     Type
  1207 ;;                  4    0[COMMON] unsigned long 
  1208 ;; Registers used:
  1209 ;;		wreg, status,2, status,0
  1210 ;; Tracked objects:
  1211 ;;		On entry : 0/0
  1212 ;;		On exit  : 0/0
  1213 ;;		Unchanged: 0/0
  1214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1215 ;;      Params:         8       0       0       0       0
  1216 ;;      Locals:         5       0       0       0       0
  1217 ;;      Temps:          1       0       0       0       0
  1218 ;;      Totals:        14       0       0       0       0
  1219 ;;Total ram usage:       14 bytes
  1220 ;; Hardware stack levels used: 1
  1221 ;; This function calls:
  1222 ;;		Nothing
  1223 ;; This function is called by:
  1224 ;;		_UART_TX_Init
  1225 ;; This function uses a non-reentrant model
  1226 ;;
  1227                           
  1228                           
  1229                           ;psect for function ___lldiv
  1230  068B                     ___lldiv:
  1231  068B                     l1248:	
  1232                           ;incstack = 0
  1233                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1234                           
  1235  068B  3000               	movlw	0
  1236  068C  00FC               	movwf	___lldiv@quotient+3
  1237  068D  3000               	movlw	0
  1238  068E  00FB               	movwf	___lldiv@quotient+2
  1239  068F  3000               	movlw	0
  1240  0690  00FA               	movwf	___lldiv@quotient+1
  1241  0691  3000               	movlw	0
  1242  0692  00F9               	movwf	___lldiv@quotient
  1243  0693  0873               	movf	___lldiv@divisor+3,w
  1244  0694  0472               	iorwf	___lldiv@divisor+2,w
  1245  0695  0471               	iorwf	___lldiv@divisor+1,w
  1246  0696  0470               	iorwf	___lldiv@divisor,w
  1247  0697  1903               	skipnz
  1248  0698  2E9A               	goto	u631
  1249  0699  2E9B               	goto	u630
  1250  069A                     u631:
  1251  069A  2EE8               	goto	l1268
  1252  069B                     u630:
  1253  069B                     l1250:
  1254  069B  01FD               	clrf	___lldiv@counter
  1255  069C  0AFD               	incf	___lldiv@counter,f
  1256  069D  2EAB               	goto	l1254
  1257  069E                     l1252:
  1258  069E  3001               	movlw	1
  1259  069F  00F8               	movwf	??___lldiv
  1260  06A0                     u645:
  1261  06A0  1003               	clrc
  1262  06A1  0DF0               	rlf	___lldiv@divisor,f
  1263  06A2  0DF1               	rlf	___lldiv@divisor+1,f
  1264  06A3  0DF2               	rlf	___lldiv@divisor+2,f
  1265  06A4  0DF3               	rlf	___lldiv@divisor+3,f
  1266  06A5  0BF8               	decfsz	??___lldiv,f
  1267  06A6  2EA0               	goto	u645
  1268  06A7  3001               	movlw	1
  1269  06A8  00F8               	movwf	??___lldiv
  1270  06A9  0878               	movf	??___lldiv,w
  1271  06AA  07FD               	addwf	___lldiv@counter,f
  1272  06AB                     l1254:
  1273  06AB  1FF3               	btfss	___lldiv@divisor+3,7
  1274  06AC  2EAE               	goto	u651
  1275  06AD  2EAF               	goto	u650
  1276  06AE                     u651:
  1277  06AE  2E9E               	goto	l1252
  1278  06AF                     u650:
  1279  06AF                     l1256:
  1280  06AF  3001               	movlw	1
  1281  06B0  00F8               	movwf	??___lldiv
  1282  06B1                     u665:
  1283  06B1  1003               	clrc
  1284  06B2  0DF9               	rlf	___lldiv@quotient,f
  1285  06B3  0DFA               	rlf	___lldiv@quotient+1,f
  1286  06B4  0DFB               	rlf	___lldiv@quotient+2,f
  1287  06B5  0DFC               	rlf	___lldiv@quotient+3,f
  1288  06B6  0BF8               	decfsz	??___lldiv,f
  1289  06B7  2EB1               	goto	u665
  1290  06B8                     l1258:
  1291  06B8  0873               	movf	___lldiv@divisor+3,w
  1292  06B9  0277               	subwf	___lldiv@dividend+3,w
  1293  06BA  1D03               	skipz
  1294  06BB  2EC6               	goto	u675
  1295  06BC  0872               	movf	___lldiv@divisor+2,w
  1296  06BD  0276               	subwf	___lldiv@dividend+2,w
  1297  06BE  1D03               	skipz
  1298  06BF  2EC6               	goto	u675
  1299  06C0  0871               	movf	___lldiv@divisor+1,w
  1300  06C1  0275               	subwf	___lldiv@dividend+1,w
  1301  06C2  1D03               	skipz
  1302  06C3  2EC6               	goto	u675
  1303  06C4  0870               	movf	___lldiv@divisor,w
  1304  06C5  0274               	subwf	___lldiv@dividend,w
  1305  06C6                     u675:
  1306  06C6  1C03               	skipc
  1307  06C7  2EC9               	goto	u671
  1308  06C8  2ECA               	goto	u670
  1309  06C9                     u671:
  1310  06C9  2ED9               	goto	l1264
  1311  06CA                     u670:
  1312  06CA                     l1260:
  1313  06CA  0870               	movf	___lldiv@divisor,w
  1314  06CB  02F4               	subwf	___lldiv@dividend,f
  1315  06CC  0871               	movf	___lldiv@divisor+1,w
  1316  06CD  1C03               	skipc
  1317  06CE  0F71               	incfsz	___lldiv@divisor+1,w
  1318  06CF  02F5               	subwf	___lldiv@dividend+1,f
  1319  06D0  0872               	movf	___lldiv@divisor+2,w
  1320  06D1  1C03               	skipc
  1321  06D2  0F72               	incfsz	___lldiv@divisor+2,w
  1322  06D3  02F6               	subwf	___lldiv@dividend+2,f
  1323  06D4  0873               	movf	___lldiv@divisor+3,w
  1324  06D5  1C03               	skipc
  1325  06D6  0F73               	incfsz	___lldiv@divisor+3,w
  1326  06D7  02F7               	subwf	___lldiv@dividend+3,f
  1327  06D8                     l1262:
  1328  06D8  1479               	bsf	___lldiv@quotient,0
  1329  06D9                     l1264:
  1330  06D9  3001               	movlw	1
  1331  06DA                     u685:
  1332  06DA  1003               	clrc
  1333  06DB  0CF3               	rrf	___lldiv@divisor+3,f
  1334  06DC  0CF2               	rrf	___lldiv@divisor+2,f
  1335  06DD  0CF1               	rrf	___lldiv@divisor+1,f
  1336  06DE  0CF0               	rrf	___lldiv@divisor,f
  1337  06DF  3EFF               	addlw	-1
  1338  06E0  1D03               	skipz
  1339  06E1  2EDA               	goto	u685
  1340  06E2                     l1266:
  1341  06E2  3001               	movlw	1
  1342  06E3  02FD               	subwf	___lldiv@counter,f
  1343  06E4  1D03               	btfss	3,2
  1344  06E5  2EE7               	goto	u691
  1345  06E6  2EE8               	goto	u690
  1346  06E7                     u691:
  1347  06E7  2EAF               	goto	l1256
  1348  06E8                     u690:
  1349  06E8                     l1268:
  1350  06E8  087C               	movf	___lldiv@quotient+3,w
  1351  06E9  00F3               	movwf	?___lldiv+3
  1352  06EA  087B               	movf	___lldiv@quotient+2,w
  1353  06EB  00F2               	movwf	?___lldiv+2
  1354  06EC  087A               	movf	___lldiv@quotient+1,w
  1355  06ED  00F1               	movwf	?___lldiv+1
  1356  06EE  0879               	movf	___lldiv@quotient,w
  1357  06EF  00F0               	movwf	?___lldiv
  1358  06F0                     l308:
  1359  06F0  0008               	return
  1360  06F1                     __end_of___lldiv:
  1361                           
  1362                           	psect	text3
  1363  0519                     __ptext3:	
  1364 ;; *************** function _ADC_print_burst *****************
  1365 ;; Defined at:
  1366 ;;		line 70 in file "ADC.c"
  1367 ;; Parameters:    Size  Location     Type
  1368 ;;  BurstReading    1    wreg     PTR unsigned int 
  1369 ;;		 -> ANRead(16), 
  1370 ;;  NumberReadin    1   26[BANK0 ] unsigned char 
  1371 ;; Auto vars:     Size  Location     Type
  1372 ;;  BurstReading    1   29[BANK0 ] PTR unsigned int 
  1373 ;;		 -> ANRead(16), 
  1374 ;;  n               1   30[BANK0 ] unsigned char 
  1375 ;; Return value:  Size  Location     Type
  1376 ;;                  1    wreg      void 
  1377 ;; Registers used:
  1378 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1379 ;; Tracked objects:
  1380 ;;		On entry : 0/0
  1381 ;;		On exit  : 0/0
  1382 ;;		Unchanged: 0/0
  1383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1384 ;;      Params:         0       1       0       0       0
  1385 ;;      Locals:         0       2       0       0       0
  1386 ;;      Temps:          0       2       0       0       0
  1387 ;;      Totals:         0       5       0       0       0
  1388 ;;Total ram usage:        5 bytes
  1389 ;; Hardware stack levels used: 1
  1390 ;; Hardware stack levels required when called: 3
  1391 ;; This function calls:
  1392 ;;		_UART_Write
  1393 ;;		_UART_number
  1394 ;; This function is called by:
  1395 ;;		_main
  1396 ;; This function uses a non-reentrant model
  1397 ;;
  1398                           
  1399                           
  1400                           ;psect for function _ADC_print_burst
  1401  0519                     _ADC_print_burst:
  1402                           
  1403                           ;incstack = 0
  1404                           ; Regs used in _ADC_print_burst: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1405                           ;ADC_print_burst@BurstReadings stored from wreg
  1406  0519  1283               	bcf	3,5	;RP0=0, select bank0
  1407  051A  1303               	bcf	3,6	;RP1=0, select bank0
  1408  051B  00BD               	movwf	ADC_print_burst@BurstReadings
  1409  051C                     l1282:
  1410                           
  1411                           ;ADC.c: 70: void ADC_print_burst(uint16_t *BurstReadings, uint8_t NumberReadings);ADC.c:
      +                           71: {;ADC.c: 72:     for(uint8_t n=0; n<NumberReadings;n++)
  1412  051C  01BE               	clrf	ADC_print_burst@n
  1413  051D  2D36               	goto	l1288
  1414  051E                     l1284:
  1415                           
  1416                           ;ADC.c: 73:         {;ADC.c: 74:             UART_number((int)BurstReadings[n]);
  1417  051E  083E               	movf	ADC_print_burst@n,w
  1418  051F  00BB               	movwf	??_ADC_print_burst
  1419  0520  073B               	addwf	??_ADC_print_burst,w
  1420  0521  073D               	addwf	ADC_print_burst@BurstReadings,w
  1421  0522  00BC               	movwf	??_ADC_print_burst+1
  1422  0523  083C               	movf	??_ADC_print_burst+1,w
  1423  0524  0084               	movwf	4
  1424  0525  1383               	bcf	3,7	;select IRP bank0
  1425  0526  0800               	movf	0,w
  1426  0527  00AD               	movwf	UART_number@number
  1427  0528  0A84               	incf	4,f
  1428  0529  0800               	movf	0,w
  1429  052A  00AE               	movwf	UART_number@number+1
  1430  052B  120A  118A  24F6  120A  118A  	fcall	_UART_number
  1431  0530                     l1286:
  1432                           
  1433                           ;ADC.c: 75:         }
  1434  0530  3001               	movlw	1
  1435  0531  1283               	bcf	3,5	;RP0=0, select bank0
  1436  0532  1303               	bcf	3,6	;RP1=0, select bank0
  1437  0533  00BB               	movwf	??_ADC_print_burst
  1438  0534  083B               	movf	??_ADC_print_burst,w
  1439  0535  07BE               	addwf	ADC_print_burst@n,f
  1440  0536                     l1288:
  1441  0536  083A               	movf	ADC_print_burst@NumberReadings,w
  1442  0537  023E               	subwf	ADC_print_burst@n,w
  1443  0538  1C03               	skipc
  1444  0539  2D3B               	goto	u721
  1445  053A  2D3C               	goto	u720
  1446  053B                     u721:
  1447  053B  2D1E               	goto	l1284
  1448  053C                     u720:
  1449  053C                     l1290:
  1450                           
  1451                           ;ADC.c: 76:     UART_Write(10);
  1452  053C  300A               	movlw	10
  1453  053D  120A  118A  246F  120A  118A  	fcall	_UART_Write
  1454  0542                     l49:
  1455  0542  0008               	return
  1456  0543                     __end_of_ADC_print_burst:
  1457                           
  1458                           	psect	text4
  1459  04F6                     __ptext4:	
  1460 ;; *************** function _UART_number *****************
  1461 ;; Defined at:
  1462 ;;		line 60 in file "UART.c"
  1463 ;; Parameters:    Size  Location     Type
  1464 ;;  number          2   13[BANK0 ] int 
  1465 ;; Auto vars:     Size  Location     Type
  1466 ;;  buffer         10   16[BANK0 ] unsigned char [10]
  1467 ;; Return value:  Size  Location     Type
  1468 ;;                  1    wreg      void 
  1469 ;; Registers used:
  1470 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1471 ;; Tracked objects:
  1472 ;;		On entry : 0/0
  1473 ;;		On exit  : 0/0
  1474 ;;		Unchanged: 0/0
  1475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1476 ;;      Params:         0       2       0       0       0
  1477 ;;      Locals:         0      10       0       0       0
  1478 ;;      Temps:          0       1       0       0       0
  1479 ;;      Totals:         0      13       0       0       0
  1480 ;;Total ram usage:       13 bytes
  1481 ;; Hardware stack levels used: 1
  1482 ;; Hardware stack levels required when called: 2
  1483 ;; This function calls:
  1484 ;;		_UART_Buffer
  1485 ;;		_sprintf
  1486 ;;		_strlen
  1487 ;; This function is called by:
  1488 ;;		_ADC_print_burst
  1489 ;; This function uses a non-reentrant model
  1490 ;;
  1491                           
  1492                           
  1493                           ;psect for function _UART_number
  1494  04F6                     _UART_number:
  1495  04F6                     l1244:	
  1496                           ;incstack = 0
  1497                           ; Regs used in _UART_number: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1498                           
  1499                           
  1500                           ;UART.c: 60: void UART_number(int number);UART.c: 61: {;UART.c: 62:  uint8_t buffer[10];
      +                          ;UART.c: 63:  sprintf((char *)buffer,"%d\n",number);
  1501  04F6  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1502  04F7  1283               	bcf	3,5	;RP0=0, select bank0
  1503  04F8  1303               	bcf	3,6	;RP1=0, select bank0
  1504  04F9  00AF               	movwf	??_UART_number
  1505  04FA  082F               	movf	??_UART_number,w
  1506  04FB  00A0               	movwf	sprintf@f
  1507  04FC  082E               	movf	UART_number@number+1,w
  1508  04FD  00A2               	movwf	?_sprintf+2
  1509  04FE  082D               	movf	UART_number@number,w
  1510  04FF  00A1               	movwf	?_sprintf+1
  1511  0500  3030               	movlw	(low (UART_number@buffer| 0))& (0+255)
  1512  0501  120A  118A  26F1  120A  118A  	fcall	_sprintf
  1513  0506                     l1246:
  1514                           
  1515                           ;UART.c: 64:  UART_Buffer(buffer,strlen((char *)buffer));
  1516  0506  3030               	movlw	(low (UART_number@buffer| 0))& (0+255)
  1517  0507  120A  118A  24A1  120A  118A  	fcall	_strlen
  1518  050C  0870               	movf	?_strlen,w
  1519  050D  1283               	bcf	3,5	;RP0=0, select bank0
  1520  050E  1303               	bcf	3,6	;RP1=0, select bank0
  1521  050F  00AF               	movwf	??_UART_number
  1522  0510  082F               	movf	??_UART_number,w
  1523  0511  00F5               	movwf	UART_Buffer@size
  1524  0512  3030               	movlw	(low (UART_number@buffer| 0))& (0+255)
  1525  0513  120A  118A  24BA  120A  118A  	fcall	_UART_Buffer
  1526  0518                     l98:
  1527  0518  0008               	return
  1528  0519                     __end_of_UART_number:
  1529                           
  1530                           	psect	text5
  1531  04A1                     __ptext5:	
  1532 ;; *************** function _strlen *****************
  1533 ;; Defined at:
  1534 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\strlen.c"
  1535 ;; Parameters:    Size  Location     Type
  1536 ;;  s               1    wreg     PTR const unsigned char 
  1537 ;;		 -> mensaje(19), UART_number@buffer(10), 
  1538 ;; Auto vars:     Size  Location     Type
  1539 ;;  s               1    4[COMMON] PTR const unsigned char 
  1540 ;;		 -> mensaje(19), UART_number@buffer(10), 
  1541 ;;  cp              1    3[COMMON] PTR const unsigned char 
  1542 ;;		 -> mensaje(19), UART_number@buffer(10), 
  1543 ;; Return value:  Size  Location     Type
  1544 ;;                  2    0[COMMON] unsigned int 
  1545 ;; Registers used:
  1546 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1547 ;; Tracked objects:
  1548 ;;		On entry : 0/0
  1549 ;;		On exit  : 0/0
  1550 ;;		Unchanged: 0/0
  1551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1552 ;;      Params:         2       0       0       0       0
  1553 ;;      Locals:         2       0       0       0       0
  1554 ;;      Temps:          1       0       0       0       0
  1555 ;;      Totals:         5       0       0       0       0
  1556 ;;Total ram usage:        5 bytes
  1557 ;; Hardware stack levels used: 1
  1558 ;; This function calls:
  1559 ;;		Nothing
  1560 ;; This function is called by:
  1561 ;;		_UART_number
  1562 ;;		_main
  1563 ;; This function uses a non-reentrant model
  1564 ;;
  1565                           
  1566                           
  1567                           ;psect for function _strlen
  1568  04A1                     _strlen:
  1569                           
  1570                           ;incstack = 0
  1571                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  1572                           ;strlen@s stored from wreg
  1573  04A1  00F4               	movwf	strlen@s
  1574  04A2                     l1226:
  1575  04A2  0874               	movf	strlen@s,w
  1576  04A3  00F2               	movwf	??_strlen
  1577  04A4  0872               	movf	??_strlen,w
  1578  04A5  00F3               	movwf	strlen@cp
  1579  04A6  2CAB               	goto	l1230
  1580  04A7                     l1228:
  1581  04A7  3001               	movlw	1
  1582  04A8  00F2               	movwf	??_strlen
  1583  04A9  0872               	movf	??_strlen,w
  1584  04AA  07F3               	addwf	strlen@cp,f
  1585  04AB                     l1230:
  1586  04AB  0873               	movf	strlen@cp,w
  1587  04AC  0084               	movwf	4
  1588  04AD  1383               	bcf	3,7	;select IRP bank0
  1589  04AE  0800               	movf	0,w
  1590  04AF  1D03               	btfss	3,2
  1591  04B0  2CB2               	goto	u611
  1592  04B1  2CB3               	goto	u610
  1593  04B2                     u611:
  1594  04B2  2CA7               	goto	l1228
  1595  04B3                     u610:
  1596  04B3                     l1232:
  1597  04B3  0874               	movf	strlen@s,w
  1598  04B4  0273               	subwf	strlen@cp,w
  1599  04B5  00F0               	movwf	?_strlen
  1600  04B6  01F1               	clrf	?_strlen+1
  1601  04B7  1BF0               	btfsc	?_strlen,7
  1602  04B8  03F1               	decf	?_strlen+1,f
  1603  04B9                     l726:
  1604  04B9  0008               	return
  1605  04BA                     __end_of_strlen:
  1606                           
  1607                           	psect	text6
  1608  06F1                     __ptext6:	
  1609 ;; *************** function _sprintf *****************
  1610 ;; Defined at:
  1611 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  1612 ;; Parameters:    Size  Location     Type
  1613 ;;  sp              1    wreg     PTR unsigned char 
  1614 ;;		 -> UART_number@buffer(10), 
  1615 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1616 ;;		 -> STR_1(4), 
  1617 ;; Auto vars:     Size  Location     Type
  1618 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  1619 ;;		 -> UART_number@buffer(10), 
  1620 ;;  tmpval          4    0        struct .
  1621 ;;  val             2    9[BANK0 ] unsigned int 
  1622 ;;  cp              2    0        PTR const unsigned char 
  1623 ;;  len             2    0        unsigned int 
  1624 ;;  c               1   12[BANK0 ] unsigned char 
  1625 ;;  prec            1    8[BANK0 ] char 
  1626 ;;  flag            1    7[BANK0 ] unsigned char 
  1627 ;;  ap              1    6[BANK0 ] PTR void [1]
  1628 ;;		 -> ?_sprintf(2), 
  1629 ;; Return value:  Size  Location     Type
  1630 ;;                  2    0[BANK0 ] int 
  1631 ;; Registers used:
  1632 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1633 ;; Tracked objects:
  1634 ;;		On entry : 0/0
  1635 ;;		On exit  : 0/0
  1636 ;;		Unchanged: 0/0
  1637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1638 ;;      Params:         0       3       0       0       0
  1639 ;;      Locals:         0       7       0       0       0
  1640 ;;      Temps:          0       3       0       0       0
  1641 ;;      Totals:         0      13       0       0       0
  1642 ;;Total ram usage:       13 bytes
  1643 ;; Hardware stack levels used: 1
  1644 ;; Hardware stack levels required when called: 1
  1645 ;; This function calls:
  1646 ;;		___lwdiv
  1647 ;;		___lwmod
  1648 ;; This function is called by:
  1649 ;;		_UART_number
  1650 ;; This function uses a non-reentrant model
  1651 ;;
  1652                           
  1653                           
  1654                           ;psect for function _sprintf
  1655  06F1                     _sprintf:
  1656                           
  1657                           ;incstack = 0
  1658                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1659                           ;sprintf@sp stored from wreg
  1660  06F1  1283               	bcf	3,5	;RP0=0, select bank0
  1661  06F2  1303               	bcf	3,6	;RP1=0, select bank0
  1662  06F3  00AB               	movwf	sprintf@sp
  1663  06F4                     l1164:
  1664                           
  1665                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1666  06F4  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1667  06F5  00A3               	movwf	??_sprintf
  1668  06F6  0823               	movf	??_sprintf,w
  1669  06F7  00A6               	movwf	sprintf@ap
  1670                           
  1671                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1672  06F8  2FC2               	goto	l1216
  1673  06F9                     l1166:
  1674                           
  1675                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1676  06F9  3025               	movlw	37
  1677  06FA  062C               	xorwf	sprintf@c,w
  1678  06FB  1903               	btfsc	3,2
  1679  06FC  2EFE               	goto	u541
  1680  06FD  2EFF               	goto	u540
  1681  06FE                     u541:
  1682  06FE  2F0B               	goto	l1172
  1683  06FF                     u540:
  1684  06FF                     l1168:
  1685                           
  1686                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1687  06FF  082C               	movf	sprintf@c,w
  1688  0700  00A3               	movwf	??_sprintf
  1689  0701  082B               	movf	sprintf@sp,w
  1690  0702  0084               	movwf	4
  1691  0703  0823               	movf	??_sprintf,w
  1692  0704  1383               	bcf	3,7	;select IRP bank0
  1693  0705  0080               	movwf	0
  1694  0706                     l1170:
  1695  0706  3001               	movlw	1
  1696  0707  00A3               	movwf	??_sprintf
  1697  0708  0823               	movf	??_sprintf,w
  1698  0709  07AB               	addwf	sprintf@sp,f
  1699                           
  1700                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 559:    continue;
  1701  070A  2FC2               	goto	l1216
  1702  070B                     l1172:
  1703                           
  1704                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1705  070B  01A7               	clrf	sprintf@flag
  1706  070C                     l1176:	
  1707                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1708                           
  1709  070C  3001               	movlw	1
  1710  070D  07A0               	addwf	sprintf@f,f
  1711  070E  30FF               	movlw	-1
  1712  070F  0720               	addwf	sprintf@f,w
  1713  0710  0084               	movwf	4
  1714  0711  120A  118A  2003  120A  118A  	fcall	stringdir
  1715  0716  00AC               	movwf	sprintf@c
  1716  0717  00A3               	movwf	??_sprintf
  1717  0718  01A4               	clrf	??_sprintf+1
  1718                           
  1719                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1720                           ; Switch size 1, requested type "simple"
  1721                           ; Number of cases is 1, Range of values is 0 to 0
  1722                           ; switch strategies available:
  1723                           ; Name         Instructions Cycles
  1724                           ; simple_byte            4     3 (average)
  1725                           ; direct_byte           11     8 (fixed)
  1726                           ; jumptable            260     6 (fixed)
  1727                           ;	Chosen strategy is simple_byte
  1728  0719  0824               	movf	??_sprintf+1,w
  1729  071A  3A00               	xorlw	0	; case 0
  1730  071B  1903               	skipnz
  1731  071C  2F1E               	goto	l1394
  1732  071D  2FC2               	goto	l1216
  1733  071E                     l1394:
  1734                           
  1735                           ; Switch size 1, requested type "simple"
  1736                           ; Number of cases is 3, Range of values is 0 to 105
  1737                           ; switch strategies available:
  1738                           ; Name         Instructions Cycles
  1739                           ; simple_byte           10     6 (average)
  1740                           ; jumptable            260     6 (fixed)
  1741                           ;	Chosen strategy is simple_byte
  1742  071E  0823               	movf	??_sprintf,w
  1743  071F  3A00               	xorlw	0	; case 0
  1744  0720  1903               	skipnz
  1745  0721  2FD4               	goto	l1218
  1746  0722  3A64               	xorlw	100	; case 100
  1747  0723  1903               	skipnz
  1748  0724  2F29               	goto	l1178
  1749  0725  3A0D               	xorlw	13	; case 105
  1750  0726  1903               	skipnz
  1751  0727  2F29               	goto	l1178
  1752  0728  2FC2               	goto	l1216
  1753  0729                     l1178:
  1754                           
  1755                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1756  0729  0826               	movf	sprintf@ap,w
  1757  072A  0084               	movwf	4
  1758  072B  1383               	bcf	3,7	;select IRP bank0
  1759  072C  0800               	movf	0,w
  1760  072D  00A9               	movwf	sprintf@val
  1761  072E  0A84               	incf	4,f
  1762  072F  0800               	movf	0,w
  1763  0730  00AA               	movwf	sprintf@val+1
  1764  0731                     l1180:
  1765  0731  3002               	movlw	2
  1766  0732  00A3               	movwf	??_sprintf
  1767  0733  0823               	movf	??_sprintf,w
  1768  0734  07A6               	addwf	sprintf@ap,f
  1769  0735                     l1182:
  1770                           
  1771                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1772  0735  1FAA               	btfss	sprintf@val+1,7
  1773  0736  2F38               	goto	u551
  1774  0737  2F39               	goto	u550
  1775  0738                     u551:
  1776  0738  2F42               	goto	l1188
  1777  0739                     u550:
  1778  0739                     l1184:
  1779                           
  1780                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1781  0739  3003               	movlw	3
  1782  073A  00A3               	movwf	??_sprintf
  1783  073B  0823               	movf	??_sprintf,w
  1784  073C  04A7               	iorwf	sprintf@flag,f
  1785  073D                     l1186:
  1786                           
  1787                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1788  073D  09A9               	comf	sprintf@val,f
  1789  073E  09AA               	comf	sprintf@val+1,f
  1790  073F  0AA9               	incf	sprintf@val,f
  1791  0740  1903               	skipnz
  1792  0741  0AAA               	incf	sprintf@val+1,f
  1793  0742                     l1188:
  1794                           
  1795                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1796  0742  01AC               	clrf	sprintf@c
  1797  0743  0AAC               	incf	sprintf@c,f
  1798  0744                     l1194:
  1799                           
  1800                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1801  0744  082C               	movf	sprintf@c,w
  1802  0745  00A3               	movwf	??_sprintf
  1803  0746  0723               	addwf	??_sprintf,w
  1804  0747  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1805  0748  0084               	movwf	4
  1806  0749  120A  118A  2003  120A  118A  	fcall	stringdir
  1807  074E  00A4               	movwf	??_sprintf+1
  1808  074F  120A  118A  2003  120A  118A  	fcall	stringdir
  1809  0754  00A5               	movwf	??_sprintf+2
  1810  0755  0825               	movf	??_sprintf+2,w
  1811  0756  022A               	subwf	sprintf@val+1,w
  1812  0757  1D03               	skipz
  1813  0758  2F5B               	goto	u565
  1814  0759  0824               	movf	??_sprintf+1,w
  1815  075A  0229               	subwf	sprintf@val,w
  1816  075B                     u565:
  1817  075B  1803               	skipnc
  1818  075C  2F5E               	goto	u561
  1819  075D  2F5F               	goto	u560
  1820  075E                     u561:
  1821  075E  2F60               	goto	l1198
  1822  075F                     u560:
  1823  075F  2F6A               	goto	l1200
  1824  0760                     l1198:
  1825  0760  3001               	movlw	1
  1826  0761  00A3               	movwf	??_sprintf
  1827  0762  0823               	movf	??_sprintf,w
  1828  0763  07AC               	addwf	sprintf@c,f
  1829  0764  3005               	movlw	5
  1830  0765  062C               	xorwf	sprintf@c,w
  1831  0766  1D03               	btfss	3,2
  1832  0767  2F69               	goto	u571
  1833  0768  2F6A               	goto	u570
  1834  0769                     u571:
  1835  0769  2F44               	goto	l1194
  1836  076A                     u570:
  1837  076A                     l1200:
  1838                           
  1839                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1840  076A  0827               	movf	sprintf@flag,w
  1841  076B  3903               	andlw	3
  1842  076C  1903               	btfsc	3,2
  1843  076D  2F6F               	goto	u581
  1844  076E  2F70               	goto	u580
  1845  076F                     u581:
  1846  076F  2F7B               	goto	l1206
  1847  0770                     u580:
  1848  0770                     l1202:
  1849                           
  1850                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1851  0770  302D               	movlw	45
  1852  0771  00A3               	movwf	??_sprintf
  1853  0772  082B               	movf	sprintf@sp,w
  1854  0773  0084               	movwf	4
  1855  0774  0823               	movf	??_sprintf,w
  1856  0775  1383               	bcf	3,7	;select IRP bank0
  1857  0776  0080               	movwf	0
  1858  0777                     l1204:
  1859  0777  3001               	movlw	1
  1860  0778  00A3               	movwf	??_sprintf
  1861  0779  0823               	movf	??_sprintf,w
  1862  077A  07AB               	addwf	sprintf@sp,f
  1863  077B                     l1206:
  1864                           
  1865                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1866  077B  082C               	movf	sprintf@c,w
  1867  077C  00A3               	movwf	??_sprintf
  1868  077D  0823               	movf	??_sprintf,w
  1869  077E  00A8               	movwf	sprintf@prec
  1870                           
  1871                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1872  077F  2FB9               	goto	l1214
  1873  0780                     l1208:
  1874                           
  1875                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1876  0780  300A               	movlw	10
  1877  0781  00F8               	movwf	___lwmod@divisor
  1878  0782  3000               	movlw	0
  1879  0783  00F9               	movwf	___lwmod@divisor+1
  1880  0784  0828               	movf	sprintf@prec,w
  1881  0785  00A3               	movwf	??_sprintf
  1882  0786  0723               	addwf	??_sprintf,w
  1883  0787  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1884  0788  0084               	movwf	4
  1885  0789  120A  118A  2003  120A  118A  	fcall	stringdir
  1886  078E  00F0               	movwf	___lwdiv@divisor
  1887  078F  120A  118A  2003  120A  118A  	fcall	stringdir
  1888  0794  00F1               	movwf	___lwdiv@divisor+1
  1889  0795  082A               	movf	sprintf@val+1,w
  1890  0796  00F3               	movwf	___lwdiv@dividend+1
  1891  0797  0829               	movf	sprintf@val,w
  1892  0798  00F2               	movwf	___lwdiv@dividend
  1893  0799  120A  118A  25AE  120A  118A  	fcall	___lwdiv
  1894  079E  0871               	movf	?___lwdiv+1,w
  1895  079F  00FB               	movwf	___lwmod@dividend+1
  1896  07A0  0870               	movf	?___lwdiv,w
  1897  07A1  00FA               	movwf	___lwmod@dividend
  1898  07A2  120A  118A  2574  120A  118A  	fcall	___lwmod
  1899  07A7  0878               	movf	?___lwmod,w
  1900  07A8  3E30               	addlw	48
  1901  07A9  1283               	bcf	3,5	;RP0=0, select bank0
  1902  07AA  1303               	bcf	3,6	;RP1=0, select bank0
  1903  07AB  00A4               	movwf	??_sprintf+1
  1904  07AC  0824               	movf	??_sprintf+1,w
  1905  07AD  00AC               	movwf	sprintf@c
  1906  07AE                     l1210:
  1907                           
  1908                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1909  07AE  082C               	movf	sprintf@c,w
  1910  07AF  00A3               	movwf	??_sprintf
  1911  07B0  082B               	movf	sprintf@sp,w
  1912  07B1  0084               	movwf	4
  1913  07B2  0823               	movf	??_sprintf,w
  1914  07B3  1383               	bcf	3,7	;select IRP bank0
  1915  07B4  0080               	movwf	0
  1916  07B5                     l1212:
  1917  07B5  3001               	movlw	1
  1918  07B6  00A3               	movwf	??_sprintf
  1919  07B7  0823               	movf	??_sprintf,w
  1920  07B8  07AB               	addwf	sprintf@sp,f
  1921  07B9                     l1214:
  1922                           
  1923                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1924  07B9  30FF               	movlw	255
  1925  07BA  00A3               	movwf	??_sprintf
  1926  07BB  0823               	movf	??_sprintf,w
  1927  07BC  07A8               	addwf	sprintf@prec,f
  1928  07BD  0A28               	incf	sprintf@prec,w
  1929  07BE  1D03               	btfss	3,2
  1930  07BF  2FC1               	goto	u591
  1931  07C0  2FC2               	goto	u590
  1932  07C1                     u591:
  1933  07C1  2F80               	goto	l1208
  1934  07C2                     u590:
  1935  07C2                     l1216:
  1936                           
  1937                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1938  07C2  3001               	movlw	1
  1939  07C3  07A0               	addwf	sprintf@f,f
  1940  07C4  30FF               	movlw	-1
  1941  07C5  0720               	addwf	sprintf@f,w
  1942  07C6  0084               	movwf	4
  1943  07C7  120A  118A  2003  120A  118A  	fcall	stringdir
  1944  07CC  00A3               	movwf	??_sprintf
  1945  07CD  0823               	movf	??_sprintf,w
  1946  07CE  00AC               	movwf	sprintf@c
  1947  07CF  082C               	movf	sprintf@c,w
  1948  07D0  1D03               	btfss	3,2
  1949  07D1  2FD3               	goto	u601
  1950  07D2  2FD4               	goto	u600
  1951  07D3                     u601:
  1952  07D3  2EF9               	goto	l1166
  1953  07D4                     u600:
  1954  07D4                     l1218:
  1955                           
  1956                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1957  07D4  082B               	movf	sprintf@sp,w
  1958  07D5  0084               	movwf	4
  1959  07D6  1383               	bcf	3,7	;select IRP bank0
  1960  07D7  0180               	clrf	0
  1961  07D8                     l268:
  1962  07D8  0008               	return
  1963  07D9                     __end_of_sprintf:
  1964                           
  1965                           	psect	text7
  1966  0574                     __ptext7:	
  1967 ;; *************** function ___lwmod *****************
  1968 ;; Defined at:
  1969 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  1970 ;; Parameters:    Size  Location     Type
  1971 ;;  divisor         2    8[COMMON] unsigned int 
  1972 ;;  dividend        2   10[COMMON] unsigned int 
  1973 ;; Auto vars:     Size  Location     Type
  1974 ;;  counter         1   13[COMMON] unsigned char 
  1975 ;; Return value:  Size  Location     Type
  1976 ;;                  2    8[COMMON] unsigned int 
  1977 ;; Registers used:
  1978 ;;		wreg, status,2, status,0
  1979 ;; Tracked objects:
  1980 ;;		On entry : 0/0
  1981 ;;		On exit  : 0/0
  1982 ;;		Unchanged: 0/0
  1983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1984 ;;      Params:         4       0       0       0       0
  1985 ;;      Locals:         1       0       0       0       0
  1986 ;;      Temps:          1       0       0       0       0
  1987 ;;      Totals:         6       0       0       0       0
  1988 ;;Total ram usage:        6 bytes
  1989 ;; Hardware stack levels used: 1
  1990 ;; This function calls:
  1991 ;;		Nothing
  1992 ;; This function is called by:
  1993 ;;		_sprintf
  1994 ;; This function uses a non-reentrant model
  1995 ;;
  1996                           
  1997                           
  1998                           ;psect for function ___lwmod
  1999  0574                     ___lwmod:
  2000  0574                     l1132:	
  2001                           ;incstack = 0
  2002                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2003                           
  2004  0574  0878               	movf	___lwmod@divisor,w
  2005  0575  0479               	iorwf	___lwmod@divisor+1,w
  2006  0576  1903               	btfsc	3,2
  2007  0577  2D79               	goto	u471
  2008  0578  2D7A               	goto	u470
  2009  0579                     u471:
  2010  0579  2DA9               	goto	l1150
  2011  057A                     u470:
  2012  057A                     l1134:
  2013  057A  01FD               	clrf	___lwmod@counter
  2014  057B  0AFD               	incf	___lwmod@counter,f
  2015  057C  2D88               	goto	l1140
  2016  057D                     l1136:
  2017  057D  3001               	movlw	1
  2018  057E                     u485:
  2019  057E  1003               	clrc
  2020  057F  0DF8               	rlf	___lwmod@divisor,f
  2021  0580  0DF9               	rlf	___lwmod@divisor+1,f
  2022  0581  3EFF               	addlw	-1
  2023  0582  1D03               	skipz
  2024  0583  2D7E               	goto	u485
  2025  0584                     l1138:
  2026  0584  3001               	movlw	1
  2027  0585  00FC               	movwf	??___lwmod
  2028  0586  087C               	movf	??___lwmod,w
  2029  0587  07FD               	addwf	___lwmod@counter,f
  2030  0588                     l1140:
  2031  0588  1FF9               	btfss	___lwmod@divisor+1,7
  2032  0589  2D8B               	goto	u491
  2033  058A  2D8C               	goto	u490
  2034  058B                     u491:
  2035  058B  2D7D               	goto	l1136
  2036  058C                     u490:
  2037  058C                     l1142:
  2038  058C  0879               	movf	___lwmod@divisor+1,w
  2039  058D  027B               	subwf	___lwmod@dividend+1,w
  2040  058E  1D03               	skipz
  2041  058F  2D92               	goto	u505
  2042  0590  0878               	movf	___lwmod@divisor,w
  2043  0591  027A               	subwf	___lwmod@dividend,w
  2044  0592                     u505:
  2045  0592  1C03               	skipc
  2046  0593  2D95               	goto	u501
  2047  0594  2D96               	goto	u500
  2048  0595                     u501:
  2049  0595  2D9C               	goto	l1146
  2050  0596                     u500:
  2051  0596                     l1144:
  2052  0596  0878               	movf	___lwmod@divisor,w
  2053  0597  02FA               	subwf	___lwmod@dividend,f
  2054  0598  0879               	movf	___lwmod@divisor+1,w
  2055  0599  1C03               	skipc
  2056  059A  03FB               	decf	___lwmod@dividend+1,f
  2057  059B  02FB               	subwf	___lwmod@dividend+1,f
  2058  059C                     l1146:
  2059  059C  3001               	movlw	1
  2060  059D                     u515:
  2061  059D  1003               	clrc
  2062  059E  0CF9               	rrf	___lwmod@divisor+1,f
  2063  059F  0CF8               	rrf	___lwmod@divisor,f
  2064  05A0  3EFF               	addlw	-1
  2065  05A1  1D03               	skipz
  2066  05A2  2D9D               	goto	u515
  2067  05A3                     l1148:
  2068  05A3  3001               	movlw	1
  2069  05A4  02FD               	subwf	___lwmod@counter,f
  2070  05A5  1D03               	btfss	3,2
  2071  05A6  2DA8               	goto	u521
  2072  05A7  2DA9               	goto	u520
  2073  05A8                     u521:
  2074  05A8  2D8C               	goto	l1142
  2075  05A9                     u520:
  2076  05A9                     l1150:
  2077  05A9  087B               	movf	___lwmod@dividend+1,w
  2078  05AA  00F9               	movwf	?___lwmod+1
  2079  05AB  087A               	movf	___lwmod@dividend,w
  2080  05AC  00F8               	movwf	?___lwmod
  2081  05AD                     l554:
  2082  05AD  0008               	return
  2083  05AE                     __end_of___lwmod:
  2084                           
  2085                           	psect	text8
  2086  05AE                     __ptext8:	
  2087 ;; *************** function ___lwdiv *****************
  2088 ;; Defined at:
  2089 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  2090 ;; Parameters:    Size  Location     Type
  2091 ;;  divisor         2    0[COMMON] unsigned int 
  2092 ;;  dividend        2    2[COMMON] unsigned int 
  2093 ;; Auto vars:     Size  Location     Type
  2094 ;;  quotient        2    5[COMMON] unsigned int 
  2095 ;;  counter         1    7[COMMON] unsigned char 
  2096 ;; Return value:  Size  Location     Type
  2097 ;;                  2    0[COMMON] unsigned int 
  2098 ;; Registers used:
  2099 ;;		wreg, status,2, status,0
  2100 ;; Tracked objects:
  2101 ;;		On entry : 0/0
  2102 ;;		On exit  : 0/0
  2103 ;;		Unchanged: 0/0
  2104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2105 ;;      Params:         4       0       0       0       0
  2106 ;;      Locals:         3       0       0       0       0
  2107 ;;      Temps:          1       0       0       0       0
  2108 ;;      Totals:         8       0       0       0       0
  2109 ;;Total ram usage:        8 bytes
  2110 ;; Hardware stack levels used: 1
  2111 ;; This function calls:
  2112 ;;		Nothing
  2113 ;; This function is called by:
  2114 ;;		_sprintf
  2115 ;; This function uses a non-reentrant model
  2116 ;;
  2117                           
  2118                           
  2119                           ;psect for function ___lwdiv
  2120  05AE                     ___lwdiv:
  2121  05AE                     l1106:	
  2122                           ;incstack = 0
  2123                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2124                           
  2125  05AE  01F5               	clrf	___lwdiv@quotient
  2126  05AF  01F6               	clrf	___lwdiv@quotient+1
  2127  05B0                     l1108:
  2128  05B0  0870               	movf	___lwdiv@divisor,w
  2129  05B1  0471               	iorwf	___lwdiv@divisor+1,w
  2130  05B2  1903               	btfsc	3,2
  2131  05B3  2DB5               	goto	u401
  2132  05B4  2DB6               	goto	u400
  2133  05B5                     u401:
  2134  05B5  2DED               	goto	l1128
  2135  05B6                     u400:
  2136  05B6                     l1110:
  2137  05B6  01F7               	clrf	___lwdiv@counter
  2138  05B7  0AF7               	incf	___lwdiv@counter,f
  2139  05B8  2DC4               	goto	l1116
  2140  05B9                     l1112:
  2141  05B9  3001               	movlw	1
  2142  05BA                     u415:
  2143  05BA  1003               	clrc
  2144  05BB  0DF0               	rlf	___lwdiv@divisor,f
  2145  05BC  0DF1               	rlf	___lwdiv@divisor+1,f
  2146  05BD  3EFF               	addlw	-1
  2147  05BE  1D03               	skipz
  2148  05BF  2DBA               	goto	u415
  2149  05C0                     l1114:
  2150  05C0  3001               	movlw	1
  2151  05C1  00F4               	movwf	??___lwdiv
  2152  05C2  0874               	movf	??___lwdiv,w
  2153  05C3  07F7               	addwf	___lwdiv@counter,f
  2154  05C4                     l1116:
  2155  05C4  1FF1               	btfss	___lwdiv@divisor+1,7
  2156  05C5  2DC7               	goto	u421
  2157  05C6  2DC8               	goto	u420
  2158  05C7                     u421:
  2159  05C7  2DB9               	goto	l1112
  2160  05C8                     u420:
  2161  05C8                     l1118:
  2162  05C8  3001               	movlw	1
  2163  05C9                     u435:
  2164  05C9  1003               	clrc
  2165  05CA  0DF5               	rlf	___lwdiv@quotient,f
  2166  05CB  0DF6               	rlf	___lwdiv@quotient+1,f
  2167  05CC  3EFF               	addlw	-1
  2168  05CD  1D03               	skipz
  2169  05CE  2DC9               	goto	u435
  2170  05CF  0871               	movf	___lwdiv@divisor+1,w
  2171  05D0  0273               	subwf	___lwdiv@dividend+1,w
  2172  05D1  1D03               	skipz
  2173  05D2  2DD5               	goto	u445
  2174  05D3  0870               	movf	___lwdiv@divisor,w
  2175  05D4  0272               	subwf	___lwdiv@dividend,w
  2176  05D5                     u445:
  2177  05D5  1C03               	skipc
  2178  05D6  2DD8               	goto	u441
  2179  05D7  2DD9               	goto	u440
  2180  05D8                     u441:
  2181  05D8  2DE0               	goto	l1124
  2182  05D9                     u440:
  2183  05D9                     l1120:
  2184  05D9  0870               	movf	___lwdiv@divisor,w
  2185  05DA  02F2               	subwf	___lwdiv@dividend,f
  2186  05DB  0871               	movf	___lwdiv@divisor+1,w
  2187  05DC  1C03               	skipc
  2188  05DD  03F3               	decf	___lwdiv@dividend+1,f
  2189  05DE  02F3               	subwf	___lwdiv@dividend+1,f
  2190  05DF                     l1122:
  2191  05DF  1475               	bsf	___lwdiv@quotient,0
  2192  05E0                     l1124:
  2193  05E0  3001               	movlw	1
  2194  05E1                     u455:
  2195  05E1  1003               	clrc
  2196  05E2  0CF1               	rrf	___lwdiv@divisor+1,f
  2197  05E3  0CF0               	rrf	___lwdiv@divisor,f
  2198  05E4  3EFF               	addlw	-1
  2199  05E5  1D03               	skipz
  2200  05E6  2DE1               	goto	u455
  2201  05E7                     l1126:
  2202  05E7  3001               	movlw	1
  2203  05E8  02F7               	subwf	___lwdiv@counter,f
  2204  05E9  1D03               	btfss	3,2
  2205  05EA  2DEC               	goto	u461
  2206  05EB  2DED               	goto	u460
  2207  05EC                     u461:
  2208  05EC  2DC8               	goto	l1118
  2209  05ED                     u460:
  2210  05ED                     l1128:
  2211  05ED  0876               	movf	___lwdiv@quotient+1,w
  2212  05EE  00F1               	movwf	?___lwdiv+1
  2213  05EF  0875               	movf	___lwdiv@quotient,w
  2214  05F0  00F0               	movwf	?___lwdiv
  2215  05F1                     l544:
  2216  05F1  0008               	return
  2217  05F2                     __end_of___lwdiv:
  2218                           
  2219                           	psect	text9
  2220  04BA                     __ptext9:	
  2221 ;; *************** function _UART_Buffer *****************
  2222 ;; Defined at:
  2223 ;;		line 48 in file "UART.c"
  2224 ;; Parameters:    Size  Location     Type
  2225 ;;  buffer          1    wreg     PTR unsigned char 
  2226 ;;		 -> mensaje(19), UART_number@buffer(10), 
  2227 ;;  size            1    5[COMMON] unsigned char 
  2228 ;; Auto vars:     Size  Location     Type
  2229 ;;  buffer          1    8[COMMON] PTR unsigned char 
  2230 ;;		 -> mensaje(19), UART_number@buffer(10), 
  2231 ;;  count           1    7[COMMON] unsigned char 
  2232 ;; Return value:  Size  Location     Type
  2233 ;;                  1    wreg      void 
  2234 ;; Registers used:
  2235 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2236 ;; Tracked objects:
  2237 ;;		On entry : 0/0
  2238 ;;		On exit  : 0/0
  2239 ;;		Unchanged: 0/0
  2240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2241 ;;      Params:         1       0       0       0       0
  2242 ;;      Locals:         2       0       0       0       0
  2243 ;;      Temps:          1       0       0       0       0
  2244 ;;      Totals:         4       0       0       0       0
  2245 ;;Total ram usage:        4 bytes
  2246 ;; Hardware stack levels used: 1
  2247 ;; Hardware stack levels required when called: 1
  2248 ;; This function calls:
  2249 ;;		_UART_Write
  2250 ;; This function is called by:
  2251 ;;		_UART_number
  2252 ;;		_main
  2253 ;; This function uses a non-reentrant model
  2254 ;;
  2255                           
  2256                           
  2257                           ;psect for function _UART_Buffer
  2258  04BA                     _UART_Buffer:
  2259                           
  2260                           ;incstack = 0
  2261                           ; Regs used in _UART_Buffer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2262                           ;UART_Buffer@buffer stored from wreg
  2263  04BA  00F8               	movwf	UART_Buffer@buffer
  2264  04BB                     l1154:
  2265                           
  2266                           ;UART.c: 48: void UART_Buffer(uint8_t *buffer, uint8_t size);UART.c: 49: {;UART.c: 50:  
      +                             char count=0;
  2267  04BB  01F7               	clrf	UART_Buffer@count
  2268                           
  2269                           ;UART.c: 51:     while(count<size)
  2270  04BC  2CCE               	goto	l1162
  2271  04BD                     l1156:
  2272                           
  2273                           ;UART.c: 52:     {;UART.c: 53:         UART_Write(*buffer);
  2274  04BD  0878               	movf	UART_Buffer@buffer,w
  2275  04BE  0084               	movwf	4
  2276  04BF  1383               	bcf	3,7	;select IRP bank0
  2277  04C0  0800               	movf	0,w
  2278  04C1  120A  118A  246F  120A  118A  	fcall	_UART_Write
  2279  04C6                     l1158:
  2280                           
  2281                           ;UART.c: 54:         count++;
  2282  04C6  3001               	movlw	1
  2283  04C7  00F6               	movwf	??_UART_Buffer
  2284  04C8  0876               	movf	??_UART_Buffer,w
  2285  04C9  07F7               	addwf	UART_Buffer@count,f
  2286  04CA                     l1160:
  2287                           
  2288                           ;UART.c: 55:         buffer++;
  2289  04CA  3001               	movlw	1
  2290  04CB  00F6               	movwf	??_UART_Buffer
  2291  04CC  0876               	movf	??_UART_Buffer,w
  2292  04CD  07F8               	addwf	UART_Buffer@buffer,f
  2293  04CE                     l1162:
  2294                           
  2295                           ;UART.c: 51:     while(count<size)
  2296  04CE  0875               	movf	UART_Buffer@size,w
  2297  04CF  0277               	subwf	UART_Buffer@count,w
  2298  04D0  1C03               	skipc
  2299  04D1  2CD3               	goto	u531
  2300  04D2  2CD4               	goto	u530
  2301  04D3                     u531:
  2302  04D3  2CBD               	goto	l1156
  2303  04D4                     u530:
  2304  04D4                     l95:
  2305  04D4  0008               	return
  2306  04D5                     __end_of_UART_Buffer:
  2307                           
  2308                           	psect	text10
  2309  046F                     __ptext10:	
  2310 ;; *************** function _UART_Write *****************
  2311 ;; Defined at:
  2312 ;;		line 34 in file "UART.c"
  2313 ;; Parameters:    Size  Location     Type
  2314 ;;  data            1    wreg     unsigned char 
  2315 ;; Auto vars:     Size  Location     Type
  2316 ;;  data            1    0[COMMON] unsigned char 
  2317 ;; Return value:  Size  Location     Type
  2318 ;;                  1    wreg      void 
  2319 ;; Registers used:
  2320 ;;		wreg
  2321 ;; Tracked objects:
  2322 ;;		On entry : 0/0
  2323 ;;		On exit  : 0/0
  2324 ;;		Unchanged: 0/0
  2325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2326 ;;      Params:         0       0       0       0       0
  2327 ;;      Locals:         1       0       0       0       0
  2328 ;;      Temps:          0       0       0       0       0
  2329 ;;      Totals:         1       0       0       0       0
  2330 ;;Total ram usage:        1 bytes
  2331 ;; Hardware stack levels used: 1
  2332 ;; This function calls:
  2333 ;;		Nothing
  2334 ;; This function is called by:
  2335 ;;		_ADC_print_burst
  2336 ;;		_UART_Buffer
  2337 ;; This function uses a non-reentrant model
  2338 ;;
  2339                           
  2340                           
  2341                           ;psect for function _UART_Write
  2342  046F                     _UART_Write:
  2343                           
  2344                           ;incstack = 0
  2345                           ; Regs used in _UART_Write: [wreg]
  2346                           ;UART_Write@data stored from wreg
  2347  046F  00F0               	movwf	UART_Write@data
  2348  0470                     l1102:
  2349  0470                     l83:	
  2350                           ;UART.c: 34: void UART_Write(uint8_t data);UART.c: 35: {;UART.c: 36:   while(!TRMT);
  2351                           
  2352  0470  1683               	bsf	3,5	;RP0=1, select bank1
  2353  0471  1303               	bcf	3,6	;RP1=0, select bank1
  2354  0472  1C98               	btfss	24,1	;volatile
  2355  0473  2C75               	goto	u391
  2356  0474  2C76               	goto	u390
  2357  0475                     u391:
  2358  0475  2C70               	goto	l83
  2359  0476                     u390:
  2360  0476                     l1104:
  2361                           
  2362                           ;UART.c: 37:   TXREG = data;
  2363  0476  0870               	movf	UART_Write@data,w
  2364  0477  1283               	bcf	3,5	;RP0=0, select bank0
  2365  0478  1303               	bcf	3,6	;RP1=0, select bank0
  2366  0479  0099               	movwf	25	;volatile
  2367  047A                     l86:
  2368  047A  0008               	return
  2369  047B                     __end_of_UART_Write:
  2370                           
  2371                           	psect	text11
  2372  0543                     __ptext11:	
  2373 ;; *************** function _ADC_burst *****************
  2374 ;; Defined at:
  2375 ;;		line 59 in file "ADC.c"
  2376 ;; Parameters:    Size  Location     Type
  2377 ;;  channels        1    wreg     PTR unsigned char 
  2378 ;;		 -> ANChannels(8), 
  2379 ;;  reading         1    3[COMMON] PTR unsigned int 
  2380 ;;		 -> ANRead(16), 
  2381 ;;  numberc         1    4[COMMON] unsigned char 
  2382 ;; Auto vars:     Size  Location     Type
  2383 ;;  channels        1    7[COMMON] PTR unsigned char 
  2384 ;;		 -> ANChannels(8), 
  2385 ;;  n               1    8[COMMON] unsigned char 
  2386 ;; Return value:  Size  Location     Type
  2387 ;;                  1    wreg      void 
  2388 ;; Registers used:
  2389 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2390 ;; Tracked objects:
  2391 ;;		On entry : 0/0
  2392 ;;		On exit  : 0/0
  2393 ;;		Unchanged: 0/0
  2394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2395 ;;      Params:         2       0       0       0       0
  2396 ;;      Locals:         2       0       0       0       0
  2397 ;;      Temps:          2       0       0       0       0
  2398 ;;      Totals:         6       0       0       0       0
  2399 ;;Total ram usage:        6 bytes
  2400 ;; Hardware stack levels used: 1
  2401 ;; Hardware stack levels required when called: 1
  2402 ;; This function calls:
  2403 ;;		_ADC_init_channel
  2404 ;; This function is called by:
  2405 ;;		_main
  2406 ;; This function uses a non-reentrant model
  2407 ;;
  2408                           
  2409                           
  2410                           ;psect for function _ADC_burst
  2411  0543                     _ADC_burst:
  2412                           
  2413                           ;incstack = 0
  2414                           ; Regs used in _ADC_burst: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2415                           ;ADC_burst@channels stored from wreg
  2416  0543  00F7               	movwf	ADC_burst@channels
  2417  0544                     l1272:
  2418                           
  2419                           ;ADC.c: 59: void ADC_burst(uint8_t *channels,uint16_t *reading,uint8_t numberc);ADC.c: 6
      +                          0: {;ADC.c: 61:     for(uint8_t n=0;n<numberc;n++ )
  2420  0544  01F8               	clrf	ADC_burst@n
  2421  0545  2D6D               	goto	l1280
  2422  0546                     l1274:
  2423                           
  2424                           ;ADC.c: 62:     {;ADC.c: 63:         ADC_init_channel(channels[n]);
  2425  0546  0878               	movf	ADC_burst@n,w
  2426  0547  0777               	addwf	ADC_burst@channels,w
  2427  0548  00F5               	movwf	??_ADC_burst
  2428  0549  0875               	movf	??_ADC_burst,w
  2429  054A  0084               	movwf	4
  2430  054B  1383               	bcf	3,7	;select IRP bank0
  2431  054C  0800               	movf	0,w
  2432  054D  120A  118A  24D5  120A  118A  	fcall	_ADC_init_channel
  2433  0552                     l39:	
  2434                           ;ADC.c: 64:         while(ADCON0bits.GO_DONE);
  2435                           
  2436  0552  1283               	bcf	3,5	;RP0=0, select bank0
  2437  0553  1303               	bcf	3,6	;RP1=0, select bank0
  2438  0554  189F               	btfsc	31,1	;volatile
  2439  0555  2D57               	goto	u701
  2440  0556  2D58               	goto	u700
  2441  0557                     u701:
  2442  0557  2D52               	goto	l39
  2443  0558                     u700:
  2444  0558                     l1276:
  2445                           
  2446                           ;ADC.c: 65:         reading[n] = (ADRESH << 8) + ADRESL;
  2447  0558  0878               	movf	ADC_burst@n,w
  2448  0559  00F5               	movwf	??_ADC_burst
  2449  055A  0775               	addwf	??_ADC_burst,w
  2450  055B  0773               	addwf	ADC_burst@reading,w
  2451  055C  00F6               	movwf	??_ADC_burst+1
  2452  055D  0876               	movf	??_ADC_burst+1,w
  2453  055E  0084               	movwf	4
  2454  055F  1683               	bsf	3,5	;RP0=1, select bank1
  2455  0560  1303               	bcf	3,6	;RP1=0, select bank1
  2456  0561  081E               	movf	30,w	;volatile
  2457  0562  1383               	bcf	3,7	;select IRP bank0
  2458  0563  0080               	movwf	0
  2459  0564  0A84               	incf	4,f
  2460  0565  1283               	bcf	3,5	;RP0=0, select bank0
  2461  0566  1303               	bcf	3,6	;RP1=0, select bank0
  2462  0567  081E               	movf	30,w	;volatile
  2463  0568  0080               	movwf	0
  2464  0569                     l1278:
  2465                           
  2466                           ;ADC.c: 66:     }
  2467  0569  3001               	movlw	1
  2468  056A  00F5               	movwf	??_ADC_burst
  2469  056B  0875               	movf	??_ADC_burst,w
  2470  056C  07F8               	addwf	ADC_burst@n,f
  2471  056D                     l1280:
  2472  056D  0874               	movf	ADC_burst@numberc,w
  2473  056E  0278               	subwf	ADC_burst@n,w
  2474  056F  1C03               	skipc
  2475  0570  2D72               	goto	u711
  2476  0571  2D73               	goto	u710
  2477  0572                     u711:
  2478  0572  2D46               	goto	l1274
  2479  0573                     u710:
  2480  0573                     l43:
  2481  0573  0008               	return
  2482  0574                     __end_of_ADC_burst:
  2483                           
  2484                           	psect	text12
  2485  04D5                     __ptext12:	
  2486 ;; *************** function _ADC_init_channel *****************
  2487 ;; Defined at:
  2488 ;;		line 19 in file "ADC.c"
  2489 ;; Parameters:    Size  Location     Type
  2490 ;;  channel         1    wreg     unsigned char 
  2491 ;; Auto vars:     Size  Location     Type
  2492 ;;  channel         1    2[COMMON] unsigned char 
  2493 ;; Return value:  Size  Location     Type
  2494 ;;                  1    wreg      void 
  2495 ;; Registers used:
  2496 ;;		wreg, status,2, status,0
  2497 ;; Tracked objects:
  2498 ;;		On entry : 0/0
  2499 ;;		On exit  : 0/0
  2500 ;;		Unchanged: 0/0
  2501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2502 ;;      Params:         0       0       0       0       0
  2503 ;;      Locals:         1       0       0       0       0
  2504 ;;      Temps:          2       0       0       0       0
  2505 ;;      Totals:         3       0       0       0       0
  2506 ;;Total ram usage:        3 bytes
  2507 ;; Hardware stack levels used: 1
  2508 ;; This function calls:
  2509 ;;		Nothing
  2510 ;; This function is called by:
  2511 ;;		_ADC_burst
  2512 ;; This function uses a non-reentrant model
  2513 ;;
  2514                           
  2515                           
  2516                           ;psect for function _ADC_init_channel
  2517  04D5                     _ADC_init_channel:
  2518                           
  2519                           ;incstack = 0
  2520                           ; Regs used in _ADC_init_channel: [wreg+status,2+status,0]
  2521                           ;ADC_init_channel@channel stored from wreg
  2522  04D5  00F2               	movwf	ADC_init_channel@channel
  2523  04D6                     l1236:
  2524                           
  2525                           ;ADC.c: 19: void ADC_init_channel(char channel);ADC.c: 20: {;ADC.c: 22:     ADCON0 = 0x8
      +                          1;
  2526  04D6  3081               	movlw	129
  2527  04D7  1283               	bcf	3,5	;RP0=0, select bank0
  2528  04D8  1303               	bcf	3,6	;RP1=0, select bank0
  2529  04D9  009F               	movwf	31	;volatile
  2530                           
  2531                           ;ADC.c: 23:     ADCON1 = 0x80;
  2532  04DA  3080               	movlw	128
  2533  04DB  1683               	bsf	3,5	;RP0=1, select bank1
  2534  04DC  1303               	bcf	3,6	;RP1=0, select bank1
  2535  04DD  009F               	movwf	31	;volatile
  2536  04DE                     l1238:
  2537                           
  2538                           ;ADC.c: 24:     ADCON0 |= (channel<<2);
  2539  04DE  0872               	movf	ADC_init_channel@channel,w	;volatile
  2540  04DF  00F0               	movwf	??_ADC_init_channel
  2541  04E0  3001               	movlw	1
  2542  04E1                     u625:
  2543  04E1  1003               	clrc
  2544  04E2  0DF0               	rlf	??_ADC_init_channel,f
  2545  04E3  3EFF               	addlw	-1
  2546  04E4  1D03               	skipz
  2547  04E5  2CE1               	goto	u625
  2548  04E6  1003               	clrc
  2549  04E7  0D70               	rlf	??_ADC_init_channel,w
  2550  04E8  00F1               	movwf	??_ADC_init_channel+1
  2551  04E9  0871               	movf	??_ADC_init_channel+1,w
  2552  04EA  1283               	bcf	3,5	;RP0=0, select bank0
  2553  04EB  1303               	bcf	3,6	;RP1=0, select bank0
  2554  04EC  049F               	iorwf	31,f	;volatile
  2555  04ED                     l1240:
  2556                           
  2557                           ;ADC.c: 27:     _delay((unsigned long)((5)*(16000000/4000000.0)));
  2558  04ED  3006               	movlw	6
  2559  04EE  00F0               	movwf	??_ADC_init_channel
  2560  04EF                     u767:
  2561  04EF  0BF0               	decfsz	??_ADC_init_channel,f
  2562  04F0  2CEF               	goto	u767
  2563  04F1  0000               	nop
  2564  04F2                     l1242:
  2565                           
  2566                           ;ADC.c: 30:     GO_DONE = 1;
  2567  04F2  1283               	bcf	3,5	;RP0=0, select bank0
  2568  04F3  1303               	bcf	3,6	;RP1=0, select bank0
  2569  04F4  149F               	bsf	31,1	;volatile
  2570  04F5                     l31:
  2571  04F5  0008               	return
  2572  04F6                     __end_of_ADC_init_channel:
  2573  007E                     btemp	set	126	;btemp
  2574  007E                     wtemp0	set	126
  2575                           
  2576                           	psect	config
  2577                           
  2578                           ;Config register CONFIG1 @ 0x2007
  2579                           ;	Oscillator Selection bits
  2580                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  2581                           ;	Watchdog Timer Enable bit
  2582                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2583                           ;	Power-up Timer Enable bit
  2584                           ;	PWRTE = OFF, PWRT disabled
  2585                           ;	RE3/MCLR pin function select bit
  2586                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  2587                           ;	Code Protection bit
  2588                           ;	CP = OFF, Program memory code protection is disabled
  2589                           ;	Data Code Protection bit
  2590                           ;	CPD = OFF, Data memory code protection is disabled
  2591                           ;	Brown Out Reset Selection bits
  2592                           ;	BOREN = OFF, BOR disabled
  2593                           ;	Internal External Switchover bit
  2594                           ;	IESO = ON, Internal/External Switchover mode is enabled
  2595                           ;	Fail-Safe Clock Monitor Enabled bit
  2596                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2597                           ;	Low Voltage Programming Enable bit
  2598                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2599                           ;	In-Circuit Debugger Mode bit
  2600                           ;	DEBUG = 0x1, unprogrammed default
  2601  2007                     	org	8199
  2602  2007  24F2               	dw	9458
  2603                           
  2604                           ;Config register CONFIG2 @ 0x2008
  2605                           ;	Brown-out Reset Selection bit
  2606                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2607                           ;	Flash Program Memory Self Write Enable bits
  2608                           ;	WRT = OFF, Write protection off
  2609  2008                     	org	8200
  2610  2008  3FFF               	dw	16383

Data Sizes:
    Strings     4
    Constant    10
    Data        27
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     33      63
    BANK1            80      0      19
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 19
		 -> mensaje(BANK1[19]), UART_number@buffer(BANK0[10]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 19
		 -> mensaje(BANK1[19]), UART_number@buffer(BANK0[10]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_1(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> UART_number@buffer(BANK0[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    UART_Buffer@buffer	PTR unsigned char  size(1) Largest target is 19
		 -> mensaje(BANK1[19]), UART_number@buffer(BANK0[10]), 

    ADC_print_burst@BurstReadings	PTR unsigned int  size(1) Largest target is 16
		 -> ANRead(BANK0[16]), 

    ADC_burst@reading	PTR unsigned int  size(1) Largest target is 16
		 -> ANRead(BANK0[16]), 

    ADC_burst@channels	PTR unsigned char  size(1) Largest target is 8
		 -> ANChannels(BANK0[8]), 


Critical Paths under _main in COMMON

    _UART_TX_Init->___lldiv
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _UART_Buffer->_strlen
    _ADC_burst->_ADC_init_channel

Critical Paths under _main in BANK0

    _main->_ADC_print_burst
    _ADC_print_burst->_UART_number
    _UART_number->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3334
                                             31 BANK0      2     2      0
                          _ADC_burst
                    _ADC_print_burst
                        _UART_Buffer
                       _UART_TX_Init
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _UART_TX_Init                                        10     6      4     457
                                              0 BANK0     10     6      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _ADC_print_burst                                      5     4      1    2071
                                             26 BANK0      5     4      1
                         _UART_Write
                        _UART_number
 ---------------------------------------------------------------------------------
 (2) _UART_number                                         13    11      2    1850
                                             13 BANK0     13    11      2
                        _UART_Buffer
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strlen                                               5     3      2     156
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             21    18      3    1211
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _UART_Buffer                                          4     3      1     309
                                              5 COMMON     4     3      1
                         _UART_Write
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_burst                                            6     4      2     341
                                              3 COMMON     6     4      2
                   _ADC_init_channel
 ---------------------------------------------------------------------------------
 (2) _ADC_init_channel                                     3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_burst
     _ADC_init_channel
   _ADC_print_burst
     _UART_Write
     _UART_number
       _UART_Buffer
         _UART_Write
         _strlen (ARG)
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
       _strlen
   _UART_Buffer
   _UART_TX_Init
     ___lldiv
   _strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      13       7       23.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     21      3F       5       78.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      60      12        0.0%
ABS                  0      0      60       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Jun 06 14:38:45 2022

                            pc 0002                             l31 04F5                             l43 0573  
                           l39 0552                             l80 068A                             l49 0542  
                           l83 0470                             l86 047A                             l95 04D4  
                           l98 0518                             fsr 0004             __size_of_ADC_burst 0031  
                          l308 06F0                            l268 07D8                            l544 05F1  
                          l554 05AD                            l726 04B9                            _GIE 005F  
                          _RC2 003A                            u400 05B6                            u401 05B5  
                          u420 05C8                            u500 0596                            u421 05C7  
                          u501 0595                            u415 05BA                            u440 05D9  
                          u520 05A9                            u600 07D4                            u441 05D8  
                          u521 05A8                            u505 0592                            u601 07D3  
                          u530 04D4                            u610 04B3                            u531 04D3  
                          u435 05C9                            u515 059D                            u611 04B2  
                          u700 0558                            u460 05ED                            u540 06FF  
                          u701 0557                            u461 05EC                            u445 05D5  
                          u541 06FE                            u710 0573                            u390 0476  
                          u470 057A                            u550 0739                            u630 069B  
                          u711 0572                            u391 0475                            u455 05E1  
                          u471 0579                            u551 0738                            u631 069A  
                          u560 075F                            u720 053C                            u625 04E1  
                          u561 075E                            u721 053B                            u490 058C  
                          u570 076A                            u650 06AF                            u730 0665  
                          u491 058B                            u571 0769                            u651 06AE  
                          u580 0770                            u485 057E                            u581 076F  
                          u565 075B                            u645 06A0                            u590 07C2  
                          u670 06CA                            u591 07C1                            u671 06C9  
                          u735 0660                            u665 06B1                            u690 06E8  
                          u691 06E7                            u675 06C6                            u685 06DA  
                          u757 0635                            u767 04EF                            fsr0 0004  
                          indf 0000                           l1102 0470                           l1110 05B6  
                         l1104 0476                           l1120 05D9                           l1112 05B9  
                         l1200 076A                           l1122 05DF                           l1114 05C0  
                         l1106 05AE                           l1210 07AE                           l1202 0770  
                         l1124 05E0                           l1116 05C4                           l1108 05B0  
                         l1140 0588                           l1132 0574                           l1212 07B5  
                         l1204 0777                           l1300 067C                           l1126 05E7  
                         l1118 05C8                           l1142 058C                           l1134 057A  
                         l1150 05A9                           l1214 07B9                           l1206 077B  
                         l1230 04AB                           l1302 0682                           l1310 05F2  
                         l1240 04ED                           l1160 04CA                           l1128 05ED  
                         l1144 0596                           l1136 057D                           l1208 0780  
                         l1216 07C2                           l1232 04B3                           l1304 0683  
                         l1312 0601                           l1242 04F2                           l1162 04CE  
                         l1154 04BB                           l1146 059C                           l1138 0584  
                         l1218 07D4                           l1170 0706                           l1226 04A2  
                         l1250 069B                           l1306 0686                           l1314 0613  
                         l1236 04D6                           l1156 04BD                           l1148 05A3  
                         l1180 0731                           l1172 070B                           l1164 06F4  
                         l1228 04A7                           l1244 04F6                           l1260 06CA  
                         l1252 069E                           l1308 0689                           l1316 0623  
                         l1238 04DE                           l1158 04C6                           l1182 0735  
                         l1166 06F9                           l1246 0506                           l1262 06D8  
                         l1254 06AB                           l1318 062F                           l1280 056D  
                         l1272 0544                           l1184 0739                           l1176 070C  
                         l1168 06FF                           l1264 06D9                           l1256 06AF  
                         l1248 068B                           l1274 0546                           l1194 0744  
                         l1186 073D                           l1178 0729                           l1290 053C  
                         l1282 051C                           l1266 06E2                           l1258 06B8  
                         l1276 0558                           l1188 0742                           l1284 051E  
                         l1268 06E8                           l1292 063E                           l1278 0569  
                         l1198 0760                           l1286 0530                           l1294 0670  
                         l1288 0536                           l1296 0673                           l1394 071E  
                         l1298 0676                           _ADIE 0466                           _ADIF 0066  
                         STR_1 0013                           _BRGH 04C2               ?_ADC_print_burst 003A  
                         _PEIE 005E                           _TMR1 000E                           _SPEN 00C7  
                         _TRMT 04C1                           _TXEN 04C5                           _SYNC 04C4  
                         _main 05F2                           btemp 007E                           start 0000  
    __size_of_ADC_init_channel 0021  ADC_print_burst@NumberReadings 003A                          ?_main 0070  
                        _BRG16 0C3B                __end_of___lldiv 06F1                __end_of___lwdiv 05F2  
              __end_of___lwmod 05AE                          _SPBRG 0099                          _TXREG 0019  
                  ?_UART_Write 0070                __end_of_dpowers 0013                          pclath 000A  
                        status 0003                          wtemp0 007E                __end_of_sprintf 07D9  
            __end_of_ADC_burst 0574                __initialization 07D9                   __end_of_main 063E  
                       ??_main 003F                         _ADCON0 001F                         _ADCON1 009F  
                       _ADRESH 001E                         _ADRESL 009E                         _ANRead 0047  
                       _TMR1IE 0460                         _TMR1IF 0060                         _TMR1CS 0081  
                       _SPBRGH 009A                         _TMR1ON 0080                         _TRISC6 043E  
                 ?_UART_Buffer 0075            __size_of_UART_Write 000C               UART_TX_Init@baud 0020  
                    ??___lldiv 0078              ADC_burst@channels 0077                      ??___lwdiv 0074  
             UART_TX_Init@temp 0028                      ??___lwmod 007C                   ?_UART_number 002D  
                       _strlen 04A1                      ??_sprintf 0023               UART_Buffer@count 0077  
      __end_of__initialization 07FC               _ADC_init_channel 04D5                 __pcstackCOMMON 0070  
                 __pidataBANK0 0467                   __pidataBANK1 048E         _timer_overflow_counter 0041  
                   __pbssBANK0 0041               ADC_print_burst@n 003E                     __pmaintext 05F2  
                      _AN0_RES 0045                        _T1CKPS0 0084                        _T1CKPS1 0085  
                      ?_strlen 0070                        _GO_DONE 00F9                   ??_UART_Write 0070  
                ?_UART_TX_Init 0020                     __stringtab 0003                     ADC_burst@n 0078  
     __size_of_ADC_print_burst 002A           __size_of_UART_Buffer 001B                      _ADC_burst 0543  
                      ___lldiv 068B             __end_of_UART_Write 047B                        ___lwdiv 05AE  
                      ___lwmod 0574                        __ptext1 063E                        __ptext2 068B  
                      __ptext3 0519                        __ptext4 04F6                        __ptext5 04A1  
                      __ptext6 06F1                        __ptext7 0574                        __ptext8 05AE  
                      __ptext9 04BA           __size_of_UART_number 0023                __size_of_strlen 0019  
                      _dpowers 0009                        _mensaje 00A0                 ??_UART_TX_Init 0024  
                      _sprintf 06F1                        clrloop0 0460           end_of_initialization 07FC  
              ___lldiv@divisor 0070                ___lldiv@counter 007D                     ?_ADC_burst 0073  
                      strlen@s 0074                 UART_Write@data 0070              UART_Buffer@buffer 0078  
     __end_of_ADC_init_channel 04F6              ??_ADC_print_burst 003B              UART_number@buffer 0030  
               __end_of_strlen 04BA              UART_number@number 002D            start_initialization 07D9  
              _timer_overflows 0043                    ??_ADC_burst 0075                     init_fetch0 047B  
         __end_of_UART_TX_Init 068B                    __pdataBANK0 0057                    __pdataBANK1 00A0  
             ADC_burst@reading 0073                       ??_strlen 0072               ADC_burst@numberc 0074  
              UART_Buffer@size 0075                      ___latbits 0002                  __pcstackBANK0 0020  
                  sprintf@flag 0027                    sprintf@prec 0028               ___lwdiv@dividend 0072  
 ADC_print_burst@BurstReadings 003D                       ?___lldiv 0070                       ?___lwdiv 0070  
                     ?___lwmod 0078                      __pstrings 0003               ___lwdiv@quotient 0075  
                     ?_sprintf 0020                  ??_UART_Buffer 0076                      clear_ram0 045F  
                ??_UART_number 002F                     _ADCON0bits 001F                    __stringbase 0008  
            ?_ADC_init_channel 0070             ??_ADC_init_channel 0070                _ADC_print_burst 0519  
        __size_of_UART_TX_Init 004D            __end_of_UART_Buffer 04D5               __size_of___lldiv 0066  
             __size_of___lwdiv 0044               __size_of___lwmod 003A             __end_of__stringtab 0009  
                   sprintf@val 0029            __end_of_UART_number 0519                ___lwdiv@divisor 0070  
              ___lwdiv@counter 0077                       __ptext10 046F                       __ptext11 0543  
                     __ptext12 04D5               __size_of_sprintf 00E8                   _UART_TX_Init 063E  
                   _ANChannels 0057                  __size_of_main 004C                       init_ram0 047F  
      ADC_init_channel@channel 0072        __end_of_ADC_print_burst 0543                      sprintf@ap 0026  
                    sprintf@sp 002B               ___lwmod@dividend 007A               ___lldiv@dividend 0074  
                  _UART_Buffer 04BA                      stringcode 0003                    _UART_number 04F6  
                     sprintf@c 002C                       sprintf@f 0020               ___lldiv@quotient 0079  
              ___lwmod@divisor 0078                       strlen@cp 0073                ___lwmod@counter 007D  
                     stringdir 0003                       stringtab 0003                     _UART_Write 046F  
