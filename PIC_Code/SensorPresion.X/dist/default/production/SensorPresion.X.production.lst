

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Jun 06 00:23:42 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    21                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.20
    32                           ; Generated 12/02/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F886 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  0089                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  008F                     	;# 
   108  0090                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0094                     	;# 
   115  0095                     	;# 
   116  0096                     	;# 
   117  0097                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009A                     	;# 
   121  009B                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  0105                     	;# 
   127  0107                     	;# 
   128  0108                     	;# 
   129  0109                     	;# 
   130  010C                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  010F                     	;# 
   135  0185                     	;# 
   136  0187                     	;# 
   137  0188                     	;# 
   138  0189                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  0000                     	;# 
   142  0001                     	;# 
   143  0002                     	;# 
   144  0003                     	;# 
   145  0004                     	;# 
   146  0005                     	;# 
   147  0006                     	;# 
   148  0007                     	;# 
   149  0009                     	;# 
   150  000A                     	;# 
   151  000B                     	;# 
   152  000C                     	;# 
   153  000D                     	;# 
   154  000E                     	;# 
   155  000E                     	;# 
   156  000F                     	;# 
   157  0010                     	;# 
   158  0011                     	;# 
   159  0012                     	;# 
   160  0013                     	;# 
   161  0014                     	;# 
   162  0015                     	;# 
   163  0015                     	;# 
   164  0016                     	;# 
   165  0017                     	;# 
   166  0018                     	;# 
   167  0019                     	;# 
   168  001A                     	;# 
   169  001B                     	;# 
   170  001B                     	;# 
   171  001C                     	;# 
   172  001D                     	;# 
   173  001E                     	;# 
   174  001F                     	;# 
   175  0081                     	;# 
   176  0085                     	;# 
   177  0086                     	;# 
   178  0087                     	;# 
   179  0089                     	;# 
   180  008C                     	;# 
   181  008D                     	;# 
   182  008E                     	;# 
   183  008F                     	;# 
   184  0090                     	;# 
   185  0091                     	;# 
   186  0092                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0093                     	;# 
   190  0094                     	;# 
   191  0095                     	;# 
   192  0096                     	;# 
   193  0097                     	;# 
   194  0098                     	;# 
   195  0099                     	;# 
   196  009A                     	;# 
   197  009B                     	;# 
   198  009C                     	;# 
   199  009D                     	;# 
   200  009E                     	;# 
   201  009F                     	;# 
   202  0105                     	;# 
   203  0107                     	;# 
   204  0108                     	;# 
   205  0109                     	;# 
   206  010C                     	;# 
   207  010C                     	;# 
   208  010D                     	;# 
   209  010E                     	;# 
   210  010F                     	;# 
   211  0185                     	;# 
   212  0187                     	;# 
   213  0188                     	;# 
   214  0189                     	;# 
   215  018C                     	;# 
   216  018D                     	;# 
   217  0000                     	;# 
   218  0001                     	;# 
   219  0002                     	;# 
   220  0003                     	;# 
   221  0004                     	;# 
   222  0005                     	;# 
   223  0006                     	;# 
   224  0007                     	;# 
   225  0009                     	;# 
   226  000A                     	;# 
   227  000B                     	;# 
   228  000C                     	;# 
   229  000D                     	;# 
   230  000E                     	;# 
   231  000E                     	;# 
   232  000F                     	;# 
   233  0010                     	;# 
   234  0011                     	;# 
   235  0012                     	;# 
   236  0013                     	;# 
   237  0014                     	;# 
   238  0015                     	;# 
   239  0015                     	;# 
   240  0016                     	;# 
   241  0017                     	;# 
   242  0018                     	;# 
   243  0019                     	;# 
   244  001A                     	;# 
   245  001B                     	;# 
   246  001B                     	;# 
   247  001C                     	;# 
   248  001D                     	;# 
   249  001E                     	;# 
   250  001F                     	;# 
   251  0081                     	;# 
   252  0085                     	;# 
   253  0086                     	;# 
   254  0087                     	;# 
   255  0089                     	;# 
   256  008C                     	;# 
   257  008D                     	;# 
   258  008E                     	;# 
   259  008F                     	;# 
   260  0090                     	;# 
   261  0091                     	;# 
   262  0092                     	;# 
   263  0093                     	;# 
   264  0093                     	;# 
   265  0093                     	;# 
   266  0094                     	;# 
   267  0095                     	;# 
   268  0096                     	;# 
   269  0097                     	;# 
   270  0098                     	;# 
   271  0099                     	;# 
   272  009A                     	;# 
   273  009B                     	;# 
   274  009C                     	;# 
   275  009D                     	;# 
   276  009E                     	;# 
   277  009F                     	;# 
   278  0105                     	;# 
   279  0107                     	;# 
   280  0108                     	;# 
   281  0109                     	;# 
   282  010C                     	;# 
   283  010C                     	;# 
   284  010D                     	;# 
   285  010E                     	;# 
   286  010F                     	;# 
   287  0185                     	;# 
   288  0187                     	;# 
   289  0188                     	;# 
   290  0189                     	;# 
   291  018C                     	;# 
   292  018D                     	;# 
   293  0000                     	;# 
   294  0001                     	;# 
   295  0002                     	;# 
   296  0003                     	;# 
   297  0004                     	;# 
   298  0005                     	;# 
   299  0006                     	;# 
   300  0007                     	;# 
   301  0009                     	;# 
   302  000A                     	;# 
   303  000B                     	;# 
   304  000C                     	;# 
   305  000D                     	;# 
   306  000E                     	;# 
   307  000E                     	;# 
   308  000F                     	;# 
   309  0010                     	;# 
   310  0011                     	;# 
   311  0012                     	;# 
   312  0013                     	;# 
   313  0014                     	;# 
   314  0015                     	;# 
   315  0015                     	;# 
   316  0016                     	;# 
   317  0017                     	;# 
   318  0018                     	;# 
   319  0019                     	;# 
   320  001A                     	;# 
   321  001B                     	;# 
   322  001B                     	;# 
   323  001C                     	;# 
   324  001D                     	;# 
   325  001E                     	;# 
   326  001F                     	;# 
   327  0081                     	;# 
   328  0085                     	;# 
   329  0086                     	;# 
   330  0087                     	;# 
   331  0089                     	;# 
   332  008C                     	;# 
   333  008D                     	;# 
   334  008E                     	;# 
   335  008F                     	;# 
   336  0090                     	;# 
   337  0091                     	;# 
   338  0092                     	;# 
   339  0093                     	;# 
   340  0093                     	;# 
   341  0093                     	;# 
   342  0094                     	;# 
   343  0095                     	;# 
   344  0096                     	;# 
   345  0097                     	;# 
   346  0098                     	;# 
   347  0099                     	;# 
   348  009A                     	;# 
   349  009B                     	;# 
   350  009C                     	;# 
   351  009D                     	;# 
   352  009E                     	;# 
   353  009F                     	;# 
   354  0105                     	;# 
   355  0107                     	;# 
   356  0108                     	;# 
   357  0109                     	;# 
   358  010C                     	;# 
   359  010C                     	;# 
   360  010D                     	;# 
   361  010E                     	;# 
   362  010F                     	;# 
   363  0185                     	;# 
   364  0187                     	;# 
   365  0188                     	;# 
   366  0189                     	;# 
   367  018C                     	;# 
   368  018D                     	;# 
   369  0000                     	;# 
   370  0001                     	;# 
   371  0002                     	;# 
   372  0003                     	;# 
   373  0004                     	;# 
   374  0005                     	;# 
   375  0006                     	;# 
   376  0007                     	;# 
   377  0009                     	;# 
   378  000A                     	;# 
   379  000B                     	;# 
   380  000C                     	;# 
   381  000D                     	;# 
   382  000E                     	;# 
   383  000E                     	;# 
   384  000F                     	;# 
   385  0010                     	;# 
   386  0011                     	;# 
   387  0012                     	;# 
   388  0013                     	;# 
   389  0014                     	;# 
   390  0015                     	;# 
   391  0015                     	;# 
   392  0016                     	;# 
   393  0017                     	;# 
   394  0018                     	;# 
   395  0019                     	;# 
   396  001A                     	;# 
   397  001B                     	;# 
   398  001B                     	;# 
   399  001C                     	;# 
   400  001D                     	;# 
   401  001E                     	;# 
   402  001F                     	;# 
   403  0081                     	;# 
   404  0085                     	;# 
   405  0086                     	;# 
   406  0087                     	;# 
   407  0089                     	;# 
   408  008C                     	;# 
   409  008D                     	;# 
   410  008E                     	;# 
   411  008F                     	;# 
   412  0090                     	;# 
   413  0091                     	;# 
   414  0092                     	;# 
   415  0093                     	;# 
   416  0093                     	;# 
   417  0093                     	;# 
   418  0094                     	;# 
   419  0095                     	;# 
   420  0096                     	;# 
   421  0097                     	;# 
   422  0098                     	;# 
   423  0099                     	;# 
   424  009A                     	;# 
   425  009B                     	;# 
   426  009C                     	;# 
   427  009D                     	;# 
   428  009E                     	;# 
   429  009F                     	;# 
   430  0105                     	;# 
   431  0107                     	;# 
   432  0108                     	;# 
   433  0109                     	;# 
   434  010C                     	;# 
   435  010C                     	;# 
   436  010D                     	;# 
   437  010E                     	;# 
   438  010F                     	;# 
   439  0185                     	;# 
   440  0187                     	;# 
   441  0188                     	;# 
   442  0189                     	;# 
   443  018C                     	;# 
   444  018D                     	;# 
   445  0000                     	;# 
   446  0001                     	;# 
   447  0002                     	;# 
   448  0003                     	;# 
   449  0004                     	;# 
   450  0005                     	;# 
   451  0006                     	;# 
   452  0007                     	;# 
   453  0009                     	;# 
   454  000A                     	;# 
   455  000B                     	;# 
   456  000C                     	;# 
   457  000D                     	;# 
   458  000E                     	;# 
   459  000E                     	;# 
   460  000F                     	;# 
   461  0010                     	;# 
   462  0011                     	;# 
   463  0012                     	;# 
   464  0013                     	;# 
   465  0014                     	;# 
   466  0015                     	;# 
   467  0015                     	;# 
   468  0016                     	;# 
   469  0017                     	;# 
   470  0018                     	;# 
   471  0019                     	;# 
   472  001A                     	;# 
   473  001B                     	;# 
   474  001B                     	;# 
   475  001C                     	;# 
   476  001D                     	;# 
   477  001E                     	;# 
   478  001F                     	;# 
   479  0081                     	;# 
   480  0085                     	;# 
   481  0086                     	;# 
   482  0087                     	;# 
   483  0089                     	;# 
   484  008C                     	;# 
   485  008D                     	;# 
   486  008E                     	;# 
   487  008F                     	;# 
   488  0090                     	;# 
   489  0091                     	;# 
   490  0092                     	;# 
   491  0093                     	;# 
   492  0093                     	;# 
   493  0093                     	;# 
   494  0094                     	;# 
   495  0095                     	;# 
   496  0096                     	;# 
   497  0097                     	;# 
   498  0098                     	;# 
   499  0099                     	;# 
   500  009A                     	;# 
   501  009B                     	;# 
   502  009C                     	;# 
   503  009D                     	;# 
   504  009E                     	;# 
   505  009F                     	;# 
   506  0105                     	;# 
   507  0107                     	;# 
   508  0108                     	;# 
   509  0109                     	;# 
   510  010C                     	;# 
   511  010C                     	;# 
   512  010D                     	;# 
   513  010E                     	;# 
   514  010F                     	;# 
   515  0185                     	;# 
   516  0187                     	;# 
   517  0188                     	;# 
   518  0189                     	;# 
   519  018C                     	;# 
   520  018D                     	;# 
   521                           
   522                           	psect	idataBANK0
   523  0459                     __pidataBANK0:
   524                           
   525                           ;initializer for _ANChannels
   526  0459  340C               	retlw	12
   527  045A  340A               	retlw	10
   528  045B  3408               	retlw	8
   529  045C  3409               	retlw	9
   530  045D  340B               	retlw	11
   531  045E  340D               	retlw	13
   532  045F  3401               	retlw	1
   533  0460  3400               	retlw	0
   534                           
   535                           	psect	idataBANK1
   536  0480                     __pidataBANK1:
   537                           
   538                           ;initializer for _mensaje
   539  0480  3450               	retlw	80
   540  0481  3472               	retlw	114
   541  0482  346F               	retlw	111
   542  0483  3467               	retlw	103
   543  0484  3472               	retlw	114
   544  0485  3461               	retlw	97
   545  0486  346D               	retlw	109
   546  0487  3461               	retlw	97
   547  0488  3420               	retlw	32
   548  0489  3449               	retlw	73
   549  048A  346E               	retlw	110
   550  048B  3469               	retlw	105
   551  048C  3463               	retlw	99
   552  048D  3469               	retlw	105
   553  048E  3461               	retlw	97
   554  048F  3464               	retlw	100
   555  0490  346F               	retlw	111
   556  0491  340A               	retlw	10
   557  0492  3400               	retlw	0
   558                           
   559                           	psect	strings
   560  0003                     __pstrings:
   561  0003                     stringtab:
   562  0003                     __stringtab:
   563  0003                     stringcode:	
   564                           ;	String table - string pointers are 1 byte each
   565                           
   566  0003                     stringdir:
   567  0003  3000               	movlw	high stringdir
   568  0004  008A               	movwf	10
   569  0005  0804               	movf	4,w
   570  0006  0A84               	incf	4,f
   571  0007  0782               	addwf	2,f
   572  0008                     __stringbase:
   573  0008  3400               	retlw	0
   574  0009                     __end_of__stringtab:
   575  0009                     _dpowers:
   576  0009  3401               	retlw	1
   577  000A  3400               	retlw	0
   578  000B  340A               	retlw	10
   579  000C  3400               	retlw	0
   580  000D  3464               	retlw	100
   581  000E  3400               	retlw	0
   582  000F  34E8               	retlw	232
   583  0010  3403               	retlw	3
   584  0011  3410               	retlw	16
   585  0012  3427               	retlw	39
   586  0013                     __end_of_dpowers:
   587  000E                     _TMR1	set	14
   588  0019                     _TXREG	set	25
   589  001E                     _ADRESH	set	30
   590  001F                     _ADCON0bits	set	31
   591  001F                     _ADCON0	set	31
   592  0080                     _TMR1ON	set	128
   593  0060                     _TMR1IF	set	96
   594  0085                     _T1CKPS1	set	133
   595  0084                     _T1CKPS0	set	132
   596  0081                     _TMR1CS	set	129
   597  003A                     _RC2	set	58
   598  0039                     _RC1	set	57
   599  00C7                     _SPEN	set	199
   600  005F                     _GIE	set	95
   601  005E                     _PEIE	set	94
   602  0066                     _ADIF	set	102
   603  00F9                     _GO_DONE	set	249
   604  009A                     _SPBRGH	set	154
   605  0099                     _SPBRG	set	153
   606  009E                     _ADRESL	set	158
   607  009F                     _ADCON1	set	159
   608  0460                     _TMR1IE	set	1120
   609  043A                     _TRISC2	set	1082
   610  0439                     _TRISC1	set	1081
   611  04C1                     _TRMT	set	1217
   612  04C5                     _TXEN	set	1221
   613  043E                     _TRISC6	set	1086
   614  04C4                     _SYNC	set	1220
   615  04C2                     _BRGH	set	1218
   616  0466                     _ADIE	set	1126
   617  0C3B                     _BRG16	set	3131
   618  0013                     STR_1:
   619  0013  3425               	retlw	37	;'%'
   620  0014  3464               	retlw	100	;'d'
   621  0015  340A               	retlw	10
   622  0016  3400               	retlw	0
   623                           
   624                           	psect	cinit
   625  07D9                     start_initialization:	
   626                           ; #config settings
   627                           
   628  07D9                     __initialization:
   629                           
   630                           ; Initialize objects allocated to BANK1
   631  07D9  1383               	bcf	3,7	;select IRP bank0
   632  07DA  30B3               	movlw	low (__pdataBANK1+19)
   633  07DB  00FD               	movwf	btemp+-1
   634  07DC  3004               	movlw	high __pidataBANK1
   635  07DD  00FE               	movwf	btemp
   636  07DE  3080               	movlw	low __pidataBANK1
   637  07DF  00FF               	movwf	btemp+1
   638  07E0  30A0               	movlw	low __pdataBANK1
   639  07E1  0084               	movwf	4
   640  07E2  120A  118A  2471  120A  118A  	fcall	init_ram0
   641                           
   642                           ; Initialize objects allocated to BANK0
   643  07E7  3060               	movlw	low (__pdataBANK0+8)
   644  07E8  00FD               	movwf	btemp+-1
   645  07E9  3004               	movlw	high __pidataBANK0
   646  07EA  00FE               	movwf	btemp
   647  07EB  3059               	movlw	low __pidataBANK0
   648  07EC  00FF               	movwf	btemp+1
   649  07ED  3058               	movlw	low __pdataBANK0
   650  07EE  0084               	movwf	4
   651  07EF  120A  118A  2471  120A  118A  	fcall	init_ram0
   652                           
   653                           ; Clear objects allocated to BANK0
   654  07F4  3042               	movlw	low __pbssBANK0
   655  07F5  0084               	movwf	4
   656  07F6  3058               	movlw	low (__pbssBANK0+22)
   657  07F7  120A  118A  2451  120A  118A  	fcall	clear_ram0
   658  07FC                     end_of_initialization:	
   659                           ;End of C runtime variable initialization code
   660                           
   661  07FC                     __end_of__initialization:
   662  07FC  0183               	clrf	3
   663  07FD  120A  118A  2E31   	ljmp	_main	;jump to C main() function
   664                           
   665                           	psect	bssBANK0
   666  0042                     __pbssBANK0:
   667  0042                     _timer_overflow_counter:
   668  0042                     	ds	2
   669  0044                     _timer_overflows:
   670  0044                     	ds	2
   671  0046                     _AN0_RES:
   672  0046                     	ds	2
   673  0048                     _ANRead:
   674  0048                     	ds	16
   675                           
   676                           	psect	dataBANK0
   677  0058                     __pdataBANK0:
   678  0058                     _ANChannels:
   679  0058                     	ds	8
   680                           
   681                           	psect	dataBANK1
   682  00A0                     __pdataBANK1:
   683  00A0                     _mensaje:
   684  00A0                     	ds	19
   685                           
   686                           	psect	inittext
   687  046D                     init_fetch0:	
   688                           ;	Called with low address in FSR and high address in W
   689                           
   690  046D  087E               	movf	btemp,w
   691  046E  008A               	movwf	10
   692  046F  087F               	movf	btemp+1,w
   693  0470  0082               	movwf	2
   694  0471                     init_ram0:	
   695                           ;Called with:
   696                           ;	high address of idata address in btemp 
   697                           ;	low address of idata address in btemp+1 
   698                           ;	low address of data in FSR
   699                           ;	high address + 1 of data in btemp-1
   700                           
   701  0471  120A  118A  246D  120A  118A  	fcall	init_fetch0
   702  0476  0080               	movwf	0
   703  0477  0A84               	incf	4,f
   704  0478  0804               	movf	4,w
   705  0479  067D               	xorwf	btemp+-1,w
   706  047A  1903               	btfsc	3,2
   707  047B  3400               	retlw	0
   708  047C  0AFF               	incf	btemp+1,f
   709  047D  1903               	btfsc	3,2
   710  047E  0AFE               	incf	btemp,f
   711  047F  2C71               	goto	init_ram0
   712                           
   713                           	psect	clrtext
   714  0451                     clear_ram0:	
   715                           ;	Called with FSR containing the base address, and
   716                           ;	W with the last address+1
   717                           
   718  0451  0064               	clrwdt	;clear the watchdog before getting into this loop
   719  0452                     clrloop0:
   720  0452  0180               	clrf	0	;clear RAM location pointed to by FSR
   721  0453  0A84               	incf	4,f	;increment pointer
   722  0454  0604               	xorwf	4,w	;XOR with final address
   723  0455  1903               	btfsc	3,2	;have we reached the end yet?
   724  0456  3400               	retlw	0	;all done for this memory range, return
   725  0457  0604               	xorwf	4,w	;XOR again to restore value
   726  0458  2C52               	goto	clrloop0	;do the next byte
   727                           
   728                           	psect	cstackCOMMON
   729  0070                     __pcstackCOMMON:
   730  0070                     ?_UART_Write:
   731  0070                     ??_UART_Write:	
   732                           ; 1 bytes @ 0x0
   733                           
   734  0070                     ?_ADC_init_channel:	
   735                           ; 1 bytes @ 0x0
   736                           
   737  0070                     ??_ADC_init_channel:	
   738                           ; 1 bytes @ 0x0
   739                           
   740  0070                     ?_main:	
   741                           ; 1 bytes @ 0x0
   742                           
   743  0070                     ?_strlen:	
   744                           ; 1 bytes @ 0x0
   745                           
   746  0070                     ?___lwdiv:	
   747                           ; 2 bytes @ 0x0
   748                           
   749  0070                     ?___lldiv:	
   750                           ; 2 bytes @ 0x0
   751                           
   752  0070                     UART_Write@data:	
   753                           ; 4 bytes @ 0x0
   754                           
   755  0070                     ___lwdiv@divisor:	
   756                           ; 1 bytes @ 0x0
   757                           
   758  0070                     ___lldiv@divisor:	
   759                           ; 2 bytes @ 0x0
   760                           
   761                           
   762                           ; 4 bytes @ 0x0
   763  0070                     	ds	2
   764  0072                     ??_strlen:
   765  0072                     ADC_init_channel@channel:	
   766                           ; 1 bytes @ 0x2
   767                           
   768  0072                     ___lwdiv@dividend:	
   769                           ; 1 bytes @ 0x2
   770                           
   771                           
   772                           ; 2 bytes @ 0x2
   773  0072                     	ds	1
   774  0073                     ?_ADC_burst:
   775  0073                     ADC_burst@reading:	
   776                           ; 1 bytes @ 0x3
   777                           
   778  0073                     strlen@cp:	
   779                           ; 1 bytes @ 0x3
   780                           
   781                           
   782                           ; 1 bytes @ 0x3
   783  0073                     	ds	1
   784  0074                     ??___lwdiv:
   785  0074                     ADC_burst@numberc:	
   786                           ; 1 bytes @ 0x4
   787                           
   788  0074                     strlen@s:	
   789                           ; 1 bytes @ 0x4
   790                           
   791  0074                     ___lldiv@dividend:	
   792                           ; 1 bytes @ 0x4
   793                           
   794                           
   795                           ; 4 bytes @ 0x4
   796  0074                     	ds	1
   797  0075                     ??_ADC_burst:
   798  0075                     ?_UART_Buffer:	
   799                           ; 1 bytes @ 0x5
   800                           
   801  0075                     UART_Buffer@size:	
   802                           ; 1 bytes @ 0x5
   803                           
   804  0075                     ___lwdiv@quotient:	
   805                           ; 1 bytes @ 0x5
   806                           
   807                           
   808                           ; 2 bytes @ 0x5
   809  0075                     	ds	1
   810  0076                     ??_UART_Buffer:
   811                           
   812                           ; 1 bytes @ 0x6
   813  0076                     	ds	1
   814  0077                     ADC_burst@channels:
   815  0077                     UART_Buffer@count:	
   816                           ; 1 bytes @ 0x7
   817                           
   818  0077                     ___lwdiv@counter:	
   819                           ; 1 bytes @ 0x7
   820                           
   821                           
   822                           ; 1 bytes @ 0x7
   823  0077                     	ds	1
   824  0078                     ??___lldiv:
   825  0078                     ?___lwmod:	
   826                           ; 1 bytes @ 0x8
   827                           
   828  0078                     ADC_burst@n:	
   829                           ; 2 bytes @ 0x8
   830                           
   831  0078                     UART_Buffer@buffer:	
   832                           ; 1 bytes @ 0x8
   833                           
   834  0078                     ___lwmod@divisor:	
   835                           ; 1 bytes @ 0x8
   836                           
   837                           
   838                           ; 2 bytes @ 0x8
   839  0078                     	ds	1
   840  0079                     ___lldiv@quotient:
   841                           
   842                           ; 4 bytes @ 0x9
   843  0079                     	ds	1
   844  007A                     ___lwmod@dividend:
   845                           
   846                           ; 2 bytes @ 0xA
   847  007A                     	ds	2
   848  007C                     ??___lwmod:
   849                           
   850                           ; 1 bytes @ 0xC
   851  007C                     	ds	1
   852  007D                     ___lldiv@counter:
   853  007D                     ___lwmod@counter:	
   854                           ; 1 bytes @ 0xD
   855                           
   856                           
   857                           ; 1 bytes @ 0xD
   858  007D                     	ds	1
   859                           
   860                           	psect	cstackBANK0
   861  0020                     __pcstackBANK0:
   862  0020                     ?_UART_TX_Init:
   863  0020                     ?_sprintf:	
   864                           ; 1 bytes @ 0x0
   865                           
   866  0020                     sprintf@f:	
   867                           ; 2 bytes @ 0x0
   868                           
   869  0020                     UART_TX_Init@baud:	
   870                           ; 1 bytes @ 0x0
   871                           
   872                           
   873                           ; 4 bytes @ 0x0
   874  0020                     	ds	3
   875  0023                     ??_sprintf:
   876                           
   877                           ; 1 bytes @ 0x3
   878  0023                     	ds	1
   879  0024                     ??_UART_TX_Init:
   880                           
   881                           ; 1 bytes @ 0x4
   882  0024                     	ds	2
   883  0026                     sprintf@ap:
   884                           
   885                           ; 1 bytes @ 0x6
   886  0026                     	ds	1
   887  0027                     sprintf@flag:
   888                           
   889                           ; 1 bytes @ 0x7
   890  0027                     	ds	1
   891  0028                     sprintf@prec:
   892  0028                     UART_TX_Init@temp:	
   893                           ; 1 bytes @ 0x8
   894                           
   895                           
   896                           ; 2 bytes @ 0x8
   897  0028                     	ds	1
   898  0029                     sprintf@val:
   899                           
   900                           ; 2 bytes @ 0x9
   901  0029                     	ds	2
   902  002B                     sprintf@sp:
   903                           
   904                           ; 1 bytes @ 0xB
   905  002B                     	ds	1
   906  002C                     sprintf@c:
   907                           
   908                           ; 1 bytes @ 0xC
   909  002C                     	ds	1
   910  002D                     ?_UART_number:
   911  002D                     UART_number@number:	
   912                           ; 1 bytes @ 0xD
   913                           
   914                           
   915                           ; 2 bytes @ 0xD
   916  002D                     	ds	2
   917  002F                     ??_UART_number:
   918                           
   919                           ; 1 bytes @ 0xF
   920  002F                     	ds	1
   921  0030                     UART_number@buffer:
   922                           
   923                           ; 10 bytes @ 0x10
   924  0030                     	ds	10
   925  003A                     ?_ADC_print_burst:
   926  003A                     ADC_print_burst@NumberReadings:	
   927                           ; 1 bytes @ 0x1A
   928                           
   929                           
   930                           ; 1 bytes @ 0x1A
   931  003A                     	ds	1
   932  003B                     ??_ADC_print_burst:
   933                           
   934                           ; 1 bytes @ 0x1B
   935  003B                     	ds	2
   936  003D                     ADC_print_burst@BurstReadings:
   937                           
   938                           ; 1 bytes @ 0x1D
   939  003D                     	ds	1
   940  003E                     ADC_print_burst@n:
   941                           
   942                           ; 1 bytes @ 0x1E
   943  003E                     	ds	1
   944  003F                     ??_main:
   945                           
   946                           ; 1 bytes @ 0x1F
   947  003F                     	ds	3
   948                           
   949                           	psect	maintext
   950  0631                     __pmaintext:	
   951 ;;
   952 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   953 ;;
   954 ;; *************** function _main *****************
   955 ;; Defined at:
   956 ;;		line 19 in file "2_ADC_Test_Burst.c"
   957 ;; Parameters:    Size  Location     Type
   958 ;;		None
   959 ;; Auto vars:     Size  Location     Type
   960 ;;		None
   961 ;; Return value:  Size  Location     Type
   962 ;;                  1    wreg      void 
   963 ;; Registers used:
   964 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   965 ;; Tracked objects:
   966 ;;		On entry : B00/0
   967 ;;		On exit  : 0/0
   968 ;;		Unchanged: 0/0
   969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   970 ;;      Params:         0       0       0       0       0
   971 ;;      Locals:         0       0       0       0       0
   972 ;;      Temps:          0       3       0       0       0
   973 ;;      Totals:         0       3       0       0       0
   974 ;;Total ram usage:        3 bytes
   975 ;; Hardware stack levels required when called: 4
   976 ;; This function calls:
   977 ;;		_ADC_burst
   978 ;;		_ADC_print_burst
   979 ;;		_UART_Buffer
   980 ;;		_UART_TX_Init
   981 ;;		_strlen
   982 ;; This function is called by:
   983 ;;		Startup code after reset
   984 ;; This function uses a non-reentrant model
   985 ;;
   986                           
   987                           
   988                           ;psect for function _main
   989  0631                     _main:
   990  0631                     l1330:	
   991                           ;incstack = 0
   992                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   993                           
   994  0631  3000               	movlw	0
   995  0632  1283               	bcf	3,5	;RP0=0, select bank0
   996  0633  1303               	bcf	3,6	;RP1=0, select bank0
   997  0634  00A3               	movwf	UART_TX_Init@baud+3
   998  0635  3003               	movlw	3
   999  0636  00A2               	movwf	UART_TX_Init@baud+2
  1000  0637  3084               	movlw	132
  1001  0638  00A1               	movwf	UART_TX_Init@baud+1
  1002  0639  3000               	movlw	0
  1003  063A  00A0               	movwf	UART_TX_Init@baud
  1004  063B  120A  118A  25E4  120A  118A  	fcall	_UART_TX_Init
  1005  0640                     l1332:
  1006  0640  30A0               	movlw	(low (_mensaje| 0))& (0+255)
  1007  0641  120A  118A  2493  120A  118A  	fcall	_strlen
  1008  0646  0870               	movf	?_strlen,w
  1009  0647  1283               	bcf	3,5	;RP0=0, select bank0
  1010  0648  1303               	bcf	3,6	;RP1=0, select bank0
  1011  0649  00BF               	movwf	??_main
  1012  064A  083F               	movf	??_main,w
  1013  064B  00F5               	movwf	UART_Buffer@size
  1014  064C  30A0               	movlw	(low (_mensaje| 0))& (0+255)
  1015  064D  120A  118A  24AC  120A  118A  	fcall	_UART_Buffer
  1016  0652                     l1334:
  1017  0652  1683               	bsf	3,5	;RP0=1, select bank1
  1018  0653  1303               	bcf	3,6	;RP1=0, select bank1
  1019  0654  1087               	bcf	7,1	;volatile
  1020  0655                     l1336:
  1021  0655  1107               	bcf	7,2	;volatile
  1022  0656                     l1338:
  1023  0656  1283               	bcf	3,5	;RP0=0, select bank0
  1024  0657  1303               	bcf	3,6	;RP1=0, select bank0
  1025  0658  1487               	bsf	7,1	;volatile
  1026  0659                     l1340:
  1027  0659  1507               	bsf	7,2	;volatile
  1028  065A                     l1342:
  1029  065A  3048               	movlw	(low (_ANRead| 0))& (0+255)
  1030  065B  00BF               	movwf	??_main
  1031  065C  083F               	movf	??_main,w
  1032  065D  00F3               	movwf	ADC_burst@reading
  1033  065E  3008               	movlw	8
  1034  065F  00C0               	movwf	??_main+1
  1035  0660  0840               	movf	??_main+1,w
  1036  0661  00F4               	movwf	ADC_burst@numberc
  1037  0662  3058               	movlw	(low (_ANChannels| 0))& (0+255)
  1038  0663  120A  118A  2535  120A  118A  	fcall	_ADC_burst
  1039  0668                     l1344:
  1040  0668  1283               	bcf	3,5	;RP0=0, select bank0
  1041  0669  1303               	bcf	3,6	;RP1=0, select bank0
  1042  066A  1107               	bcf	7,2	;volatile
  1043  066B                     l1346:
  1044  066B  3008               	movlw	8
  1045  066C  00BF               	movwf	??_main
  1046  066D  083F               	movf	??_main,w
  1047  066E  00BA               	movwf	ADC_print_burst@NumberReadings
  1048  066F  3048               	movlw	(low (_ANRead| 0))& (0+255)
  1049  0670  120A  118A  250B  120A  118A  	fcall	_ADC_print_burst
  1050  0675                     l1348:
  1051  0675  1283               	bcf	3,5	;RP0=0, select bank0
  1052  0676  1303               	bcf	3,6	;RP1=0, select bank0
  1053  0677  1087               	bcf	7,1	;volatile
  1054  0678                     l1350:
  1055  0678  3003               	movlw	3
  1056  0679  1283               	bcf	3,5	;RP0=0, select bank0
  1057  067A  1303               	bcf	3,6	;RP1=0, select bank0
  1058  067B  00C1               	movwf	??_main+2
  1059  067C  3008               	movlw	8
  1060  067D  00C0               	movwf	??_main+1
  1061  067E  3076               	movlw	118
  1062  067F  00BF               	movwf	??_main
  1063  0680                     u757:
  1064  0680  0BBF               	decfsz	??_main,f
  1065  0681  2E80               	goto	u757
  1066  0682  0BC0               	decfsz	??_main+1,f
  1067  0683  2E80               	goto	u757
  1068  0684  0BC1               	decfsz	??_main+2,f
  1069  0685  2E80               	goto	u757
  1070  0686  0000               	nop
  1071  0687  2E56               	goto	l1338
  1072  0688  120A  118A  2800   	ljmp	start
  1073  068B                     __end_of_main:
  1074                           
  1075                           	psect	text1
  1076  05E4                     __ptext1:	
  1077 ;; *************** function _UART_TX_Init *****************
  1078 ;; Defined at:
  1079 ;;		line 15 in file "UART.c"
  1080 ;; Parameters:    Size  Location     Type
  1081 ;;  baud            4    0[BANK0 ] unsigned long 
  1082 ;; Auto vars:     Size  Location     Type
  1083 ;;  temp            2    8[BANK0 ] unsigned int 
  1084 ;; Return value:  Size  Location     Type
  1085 ;;                  1    wreg      void 
  1086 ;; Registers used:
  1087 ;;		wreg, status,2, status,0, pclath, cstack
  1088 ;; Tracked objects:
  1089 ;;		On entry : 0/0
  1090 ;;		On exit  : 0/0
  1091 ;;		Unchanged: 0/0
  1092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1093 ;;      Params:         0       4       0       0       0
  1094 ;;      Locals:         0       2       0       0       0
  1095 ;;      Temps:          0       4       0       0       0
  1096 ;;      Totals:         0      10       0       0       0
  1097 ;;Total ram usage:       10 bytes
  1098 ;; Hardware stack levels used: 1
  1099 ;; Hardware stack levels required when called: 1
  1100 ;; This function calls:
  1101 ;;		___lldiv
  1102 ;; This function is called by:
  1103 ;;		_main
  1104 ;; This function uses a non-reentrant model
  1105 ;;
  1106                           
  1107                           
  1108                           ;psect for function _UART_TX_Init
  1109  05E4                     _UART_TX_Init:
  1110  05E4                     l1312:	
  1111                           ;incstack = 0
  1112                           ; Regs used in _UART_TX_Init: [wreg+status,2+status,0+pclath+cstack]
  1113                           
  1114                           
  1115                           ;UART.c: 15: void UART_TX_Init(uint32_t baud);UART.c: 16: {;UART.c: 18:   uint16_t temp;
      +                          ;UART.c: 19:   temp= (uint16_t)(((16000000/baud)/4)-1);
  1116  05E4  1283               	bcf	3,5	;RP0=0, select bank0
  1117  05E5  1303               	bcf	3,6	;RP1=0, select bank0
  1118  05E6  0823               	movf	UART_TX_Init@baud+3,w
  1119  05E7  00F3               	movwf	___lldiv@divisor+3
  1120  05E8  0822               	movf	UART_TX_Init@baud+2,w
  1121  05E9  00F2               	movwf	___lldiv@divisor+2
  1122  05EA  0821               	movf	UART_TX_Init@baud+1,w
  1123  05EB  00F1               	movwf	___lldiv@divisor+1
  1124  05EC  0820               	movf	UART_TX_Init@baud,w
  1125  05ED  00F0               	movwf	___lldiv@divisor
  1126  05EE  3000               	movlw	0
  1127  05EF  00F7               	movwf	___lldiv@dividend+3
  1128  05F0  30F4               	movlw	244
  1129  05F1  00F6               	movwf	___lldiv@dividend+2
  1130  05F2  3024               	movlw	36
  1131  05F3  00F5               	movwf	___lldiv@dividend+1
  1132  05F4  3000               	movlw	0
  1133  05F5  00F4               	movwf	___lldiv@dividend
  1134  05F6  120A  118A  268B  120A  118A  	fcall	___lldiv
  1135  05FB  0870               	movf	?___lldiv,w
  1136  05FC  1283               	bcf	3,5	;RP0=0, select bank0
  1137  05FD  1303               	bcf	3,6	;RP1=0, select bank0
  1138  05FE  00A4               	movwf	??_UART_TX_Init
  1139  05FF  0871               	movf	?___lldiv+1,w
  1140  0600  00A5               	movwf	??_UART_TX_Init+1
  1141  0601  0872               	movf	?___lldiv+2,w
  1142  0602  00A6               	movwf	??_UART_TX_Init+2
  1143  0603  0873               	movf	?___lldiv+3,w
  1144  0604  00A7               	movwf	??_UART_TX_Init+3
  1145  0605  3002               	movlw	2
  1146  0606                     u735:
  1147  0606  1003               	clrc
  1148  0607  0CA7               	rrf	??_UART_TX_Init+3,f
  1149  0608  0CA6               	rrf	??_UART_TX_Init+2,f
  1150  0609  0CA5               	rrf	??_UART_TX_Init+1,f
  1151  060A  0CA4               	rrf	??_UART_TX_Init,f
  1152  060B                     u730:
  1153  060B  3EFF               	addlw	-1
  1154  060C  1D03               	skipz
  1155  060D  2E06               	goto	u735
  1156  060E  0824               	movf	??_UART_TX_Init,w
  1157  060F  3EFF               	addlw	255
  1158  0610  00A8               	movwf	UART_TX_Init@temp
  1159  0611  0825               	movf	??_UART_TX_Init+1,w
  1160  0612  1803               	skipnc
  1161  0613  3E01               	addlw	1
  1162  0614  3EFF               	addlw	255
  1163  0615  00A9               	movwf	UART_TX_Init@temp+1
  1164  0616                     l1314:
  1165                           
  1166                           ;UART.c: 20:   BRGH = 1;
  1167  0616  1683               	bsf	3,5	;RP0=1, select bank1
  1168  0617  1303               	bcf	3,6	;RP1=0, select bank1
  1169  0618  1518               	bsf	24,2	;volatile
  1170  0619                     l1316:
  1171                           
  1172                           ;UART.c: 21:   BRG16=1;
  1173  0619  1683               	bsf	3,5	;RP0=1, select bank3
  1174  061A  1703               	bsf	3,6	;RP1=1, select bank3
  1175  061B  1587               	bsf	7,3	;volatile
  1176  061C                     l1318:
  1177                           
  1178                           ;UART.c: 22:   SPBRG = 0xFF&temp;
  1179  061C  1283               	bcf	3,5	;RP0=0, select bank0
  1180  061D  1303               	bcf	3,6	;RP1=0, select bank0
  1181  061E  0828               	movf	UART_TX_Init@temp,w
  1182  061F  1683               	bsf	3,5	;RP0=1, select bank1
  1183  0620  1303               	bcf	3,6	;RP1=0, select bank1
  1184  0621  0099               	movwf	25	;volatile
  1185  0622                     l1320:
  1186                           
  1187                           ;UART.c: 23:   SPBRGH= (temp&0xFF00)>>(8);
  1188  0622  1283               	bcf	3,5	;RP0=0, select bank0
  1189  0623  1303               	bcf	3,6	;RP1=0, select bank0
  1190  0624  0829               	movf	UART_TX_Init@temp+1,w
  1191  0625  1683               	bsf	3,5	;RP0=1, select bank1
  1192  0626  1303               	bcf	3,6	;RP1=0, select bank1
  1193  0627  009A               	movwf	26	;volatile
  1194  0628                     l1322:
  1195                           
  1196                           ;UART.c: 26:   SYNC = 0;
  1197  0628  1218               	bcf	24,4	;volatile
  1198  0629                     l1324:
  1199                           
  1200                           ;UART.c: 27:   SPEN = 1;
  1201  0629  1283               	bcf	3,5	;RP0=0, select bank0
  1202  062A  1303               	bcf	3,6	;RP1=0, select bank0
  1203  062B  1798               	bsf	24,7	;volatile
  1204  062C                     l1326:
  1205                           
  1206                           ;UART.c: 29:   TRISC6 = 1;
  1207  062C  1683               	bsf	3,5	;RP0=1, select bank1
  1208  062D  1303               	bcf	3,6	;RP1=0, select bank1
  1209  062E  1707               	bsf	7,6	;volatile
  1210  062F                     l1328:
  1211                           
  1212                           ;UART.c: 30:   TXEN = 1;
  1213  062F  1698               	bsf	24,5	;volatile
  1214  0630                     l80:
  1215  0630  0008               	return
  1216  0631                     __end_of_UART_TX_Init:
  1217                           
  1218                           	psect	text2
  1219  068B                     __ptext2:	
  1220 ;; *************** function ___lldiv *****************
  1221 ;; Defined at:
  1222 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  1223 ;; Parameters:    Size  Location     Type
  1224 ;;  divisor         4    0[COMMON] unsigned long 
  1225 ;;  dividend        4    4[COMMON] unsigned long 
  1226 ;; Auto vars:     Size  Location     Type
  1227 ;;  quotient        4    9[COMMON] unsigned long 
  1228 ;;  counter         1   13[COMMON] unsigned char 
  1229 ;; Return value:  Size  Location     Type
  1230 ;;                  4    0[COMMON] unsigned long 
  1231 ;; Registers used:
  1232 ;;		wreg, status,2, status,0
  1233 ;; Tracked objects:
  1234 ;;		On entry : 0/0
  1235 ;;		On exit  : 0/0
  1236 ;;		Unchanged: 0/0
  1237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1238 ;;      Params:         8       0       0       0       0
  1239 ;;      Locals:         5       0       0       0       0
  1240 ;;      Temps:          1       0       0       0       0
  1241 ;;      Totals:        14       0       0       0       0
  1242 ;;Total ram usage:       14 bytes
  1243 ;; Hardware stack levels used: 1
  1244 ;; This function calls:
  1245 ;;		Nothing
  1246 ;; This function is called by:
  1247 ;;		_UART_TX_Init
  1248 ;; This function uses a non-reentrant model
  1249 ;;
  1250                           
  1251                           
  1252                           ;psect for function ___lldiv
  1253  068B                     ___lldiv:
  1254  068B                     l1268:	
  1255                           ;incstack = 0
  1256                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1257                           
  1258  068B  3000               	movlw	0
  1259  068C  00FC               	movwf	___lldiv@quotient+3
  1260  068D  3000               	movlw	0
  1261  068E  00FB               	movwf	___lldiv@quotient+2
  1262  068F  3000               	movlw	0
  1263  0690  00FA               	movwf	___lldiv@quotient+1
  1264  0691  3000               	movlw	0
  1265  0692  00F9               	movwf	___lldiv@quotient
  1266  0693  0873               	movf	___lldiv@divisor+3,w
  1267  0694  0472               	iorwf	___lldiv@divisor+2,w
  1268  0695  0471               	iorwf	___lldiv@divisor+1,w
  1269  0696  0470               	iorwf	___lldiv@divisor,w
  1270  0697  1903               	skipnz
  1271  0698  2E9A               	goto	u631
  1272  0699  2E9B               	goto	u630
  1273  069A                     u631:
  1274  069A  2EE8               	goto	l1288
  1275  069B                     u630:
  1276  069B                     l1270:
  1277  069B  01FD               	clrf	___lldiv@counter
  1278  069C  0AFD               	incf	___lldiv@counter,f
  1279  069D  2EAB               	goto	l1274
  1280  069E                     l1272:
  1281  069E  3001               	movlw	1
  1282  069F  00F8               	movwf	??___lldiv
  1283  06A0                     u645:
  1284  06A0  1003               	clrc
  1285  06A1  0DF0               	rlf	___lldiv@divisor,f
  1286  06A2  0DF1               	rlf	___lldiv@divisor+1,f
  1287  06A3  0DF2               	rlf	___lldiv@divisor+2,f
  1288  06A4  0DF3               	rlf	___lldiv@divisor+3,f
  1289  06A5  0BF8               	decfsz	??___lldiv,f
  1290  06A6  2EA0               	goto	u645
  1291  06A7  3001               	movlw	1
  1292  06A8  00F8               	movwf	??___lldiv
  1293  06A9  0878               	movf	??___lldiv,w
  1294  06AA  07FD               	addwf	___lldiv@counter,f
  1295  06AB                     l1274:
  1296  06AB  1FF3               	btfss	___lldiv@divisor+3,7
  1297  06AC  2EAE               	goto	u651
  1298  06AD  2EAF               	goto	u650
  1299  06AE                     u651:
  1300  06AE  2E9E               	goto	l1272
  1301  06AF                     u650:
  1302  06AF                     l1276:
  1303  06AF  3001               	movlw	1
  1304  06B0  00F8               	movwf	??___lldiv
  1305  06B1                     u665:
  1306  06B1  1003               	clrc
  1307  06B2  0DF9               	rlf	___lldiv@quotient,f
  1308  06B3  0DFA               	rlf	___lldiv@quotient+1,f
  1309  06B4  0DFB               	rlf	___lldiv@quotient+2,f
  1310  06B5  0DFC               	rlf	___lldiv@quotient+3,f
  1311  06B6  0BF8               	decfsz	??___lldiv,f
  1312  06B7  2EB1               	goto	u665
  1313  06B8                     l1278:
  1314  06B8  0873               	movf	___lldiv@divisor+3,w
  1315  06B9  0277               	subwf	___lldiv@dividend+3,w
  1316  06BA  1D03               	skipz
  1317  06BB  2EC6               	goto	u675
  1318  06BC  0872               	movf	___lldiv@divisor+2,w
  1319  06BD  0276               	subwf	___lldiv@dividend+2,w
  1320  06BE  1D03               	skipz
  1321  06BF  2EC6               	goto	u675
  1322  06C0  0871               	movf	___lldiv@divisor+1,w
  1323  06C1  0275               	subwf	___lldiv@dividend+1,w
  1324  06C2  1D03               	skipz
  1325  06C3  2EC6               	goto	u675
  1326  06C4  0870               	movf	___lldiv@divisor,w
  1327  06C5  0274               	subwf	___lldiv@dividend,w
  1328  06C6                     u675:
  1329  06C6  1C03               	skipc
  1330  06C7  2EC9               	goto	u671
  1331  06C8  2ECA               	goto	u670
  1332  06C9                     u671:
  1333  06C9  2ED9               	goto	l1284
  1334  06CA                     u670:
  1335  06CA                     l1280:
  1336  06CA  0870               	movf	___lldiv@divisor,w
  1337  06CB  02F4               	subwf	___lldiv@dividend,f
  1338  06CC  0871               	movf	___lldiv@divisor+1,w
  1339  06CD  1C03               	skipc
  1340  06CE  0F71               	incfsz	___lldiv@divisor+1,w
  1341  06CF  02F5               	subwf	___lldiv@dividend+1,f
  1342  06D0  0872               	movf	___lldiv@divisor+2,w
  1343  06D1  1C03               	skipc
  1344  06D2  0F72               	incfsz	___lldiv@divisor+2,w
  1345  06D3  02F6               	subwf	___lldiv@dividend+2,f
  1346  06D4  0873               	movf	___lldiv@divisor+3,w
  1347  06D5  1C03               	skipc
  1348  06D6  0F73               	incfsz	___lldiv@divisor+3,w
  1349  06D7  02F7               	subwf	___lldiv@dividend+3,f
  1350  06D8                     l1282:
  1351  06D8  1479               	bsf	___lldiv@quotient,0
  1352  06D9                     l1284:
  1353  06D9  3001               	movlw	1
  1354  06DA                     u685:
  1355  06DA  1003               	clrc
  1356  06DB  0CF3               	rrf	___lldiv@divisor+3,f
  1357  06DC  0CF2               	rrf	___lldiv@divisor+2,f
  1358  06DD  0CF1               	rrf	___lldiv@divisor+1,f
  1359  06DE  0CF0               	rrf	___lldiv@divisor,f
  1360  06DF  3EFF               	addlw	-1
  1361  06E0  1D03               	skipz
  1362  06E1  2EDA               	goto	u685
  1363  06E2                     l1286:
  1364  06E2  3001               	movlw	1
  1365  06E3  02FD               	subwf	___lldiv@counter,f
  1366  06E4  1D03               	btfss	3,2
  1367  06E5  2EE7               	goto	u691
  1368  06E6  2EE8               	goto	u690
  1369  06E7                     u691:
  1370  06E7  2EAF               	goto	l1276
  1371  06E8                     u690:
  1372  06E8                     l1288:
  1373  06E8  087C               	movf	___lldiv@quotient+3,w
  1374  06E9  00F3               	movwf	?___lldiv+3
  1375  06EA  087B               	movf	___lldiv@quotient+2,w
  1376  06EB  00F2               	movwf	?___lldiv+2
  1377  06EC  087A               	movf	___lldiv@quotient+1,w
  1378  06ED  00F1               	movwf	?___lldiv+1
  1379  06EE  0879               	movf	___lldiv@quotient,w
  1380  06EF  00F0               	movwf	?___lldiv
  1381  06F0                     l316:
  1382  06F0  0008               	return
  1383  06F1                     __end_of___lldiv:
  1384                           
  1385                           	psect	text3
  1386  050B                     __ptext3:	
  1387 ;; *************** function _ADC_print_burst *****************
  1388 ;; Defined at:
  1389 ;;		line 70 in file "ADC.c"
  1390 ;; Parameters:    Size  Location     Type
  1391 ;;  BurstReading    1    wreg     PTR unsigned int 
  1392 ;;		 -> ANRead(16), 
  1393 ;;  NumberReadin    1   26[BANK0 ] unsigned char 
  1394 ;; Auto vars:     Size  Location     Type
  1395 ;;  BurstReading    1   29[BANK0 ] PTR unsigned int 
  1396 ;;		 -> ANRead(16), 
  1397 ;;  n               1   30[BANK0 ] unsigned char 
  1398 ;; Return value:  Size  Location     Type
  1399 ;;                  1    wreg      void 
  1400 ;; Registers used:
  1401 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1402 ;; Tracked objects:
  1403 ;;		On entry : 0/0
  1404 ;;		On exit  : 0/0
  1405 ;;		Unchanged: 0/0
  1406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1407 ;;      Params:         0       1       0       0       0
  1408 ;;      Locals:         0       2       0       0       0
  1409 ;;      Temps:          0       2       0       0       0
  1410 ;;      Totals:         0       5       0       0       0
  1411 ;;Total ram usage:        5 bytes
  1412 ;; Hardware stack levels used: 1
  1413 ;; Hardware stack levels required when called: 3
  1414 ;; This function calls:
  1415 ;;		_UART_Write
  1416 ;;		_UART_number
  1417 ;; This function is called by:
  1418 ;;		_main
  1419 ;; This function uses a non-reentrant model
  1420 ;;
  1421                           
  1422                           
  1423                           ;psect for function _ADC_print_burst
  1424  050B                     _ADC_print_burst:
  1425                           
  1426                           ;incstack = 0
  1427                           ; Regs used in _ADC_print_burst: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1428                           ;ADC_print_burst@BurstReadings stored from wreg
  1429  050B  1283               	bcf	3,5	;RP0=0, select bank0
  1430  050C  1303               	bcf	3,6	;RP1=0, select bank0
  1431  050D  00BD               	movwf	ADC_print_burst@BurstReadings
  1432  050E                     l1302:
  1433                           
  1434                           ;ADC.c: 70: void ADC_print_burst(uint16_t *BurstReadings, uint8_t NumberReadings);ADC.c:
      +                           71: {;ADC.c: 72:     for(uint8_t n=0; n<NumberReadings;n++)
  1435  050E  01BE               	clrf	ADC_print_burst@n
  1436  050F  2D28               	goto	l1308
  1437  0510                     l1304:
  1438                           
  1439                           ;ADC.c: 73:         {;ADC.c: 74:             UART_number((int)BurstReadings[n]);
  1440  0510  083E               	movf	ADC_print_burst@n,w
  1441  0511  00BB               	movwf	??_ADC_print_burst
  1442  0512  073B               	addwf	??_ADC_print_burst,w
  1443  0513  073D               	addwf	ADC_print_burst@BurstReadings,w
  1444  0514  00BC               	movwf	??_ADC_print_burst+1
  1445  0515  083C               	movf	??_ADC_print_burst+1,w
  1446  0516  0084               	movwf	4
  1447  0517  1383               	bcf	3,7	;select IRP bank0
  1448  0518  0800               	movf	0,w
  1449  0519  00AD               	movwf	UART_number@number
  1450  051A  0A84               	incf	4,f
  1451  051B  0800               	movf	0,w
  1452  051C  00AE               	movwf	UART_number@number+1
  1453  051D  120A  118A  24E8  120A  118A  	fcall	_UART_number
  1454  0522                     l1306:
  1455                           
  1456                           ;ADC.c: 75:         }
  1457  0522  3001               	movlw	1
  1458  0523  1283               	bcf	3,5	;RP0=0, select bank0
  1459  0524  1303               	bcf	3,6	;RP1=0, select bank0
  1460  0525  00BB               	movwf	??_ADC_print_burst
  1461  0526  083B               	movf	??_ADC_print_burst,w
  1462  0527  07BE               	addwf	ADC_print_burst@n,f
  1463  0528                     l1308:
  1464  0528  083A               	movf	ADC_print_burst@NumberReadings,w
  1465  0529  023E               	subwf	ADC_print_burst@n,w
  1466  052A  1C03               	skipc
  1467  052B  2D2D               	goto	u721
  1468  052C  2D2E               	goto	u720
  1469  052D                     u721:
  1470  052D  2D10               	goto	l1304
  1471  052E                     u720:
  1472  052E                     l1310:
  1473                           
  1474                           ;ADC.c: 76:     UART_Write(10);
  1475  052E  300A               	movlw	10
  1476  052F  120A  118A  2461  120A  118A  	fcall	_UART_Write
  1477  0534                     l49:
  1478  0534  0008               	return
  1479  0535                     __end_of_ADC_print_burst:
  1480                           
  1481                           	psect	text4
  1482  04E8                     __ptext4:	
  1483 ;; *************** function _UART_number *****************
  1484 ;; Defined at:
  1485 ;;		line 60 in file "UART.c"
  1486 ;; Parameters:    Size  Location     Type
  1487 ;;  number          2   13[BANK0 ] int 
  1488 ;; Auto vars:     Size  Location     Type
  1489 ;;  buffer         10   16[BANK0 ] unsigned char [10]
  1490 ;; Return value:  Size  Location     Type
  1491 ;;                  1    wreg      void 
  1492 ;; Registers used:
  1493 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1494 ;; Tracked objects:
  1495 ;;		On entry : 0/0
  1496 ;;		On exit  : 0/0
  1497 ;;		Unchanged: 0/0
  1498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1499 ;;      Params:         0       2       0       0       0
  1500 ;;      Locals:         0      10       0       0       0
  1501 ;;      Temps:          0       1       0       0       0
  1502 ;;      Totals:         0      13       0       0       0
  1503 ;;Total ram usage:       13 bytes
  1504 ;; Hardware stack levels used: 1
  1505 ;; Hardware stack levels required when called: 2
  1506 ;; This function calls:
  1507 ;;		_UART_Buffer
  1508 ;;		_sprintf
  1509 ;;		_strlen
  1510 ;; This function is called by:
  1511 ;;		_ADC_print_burst
  1512 ;; This function uses a non-reentrant model
  1513 ;;
  1514                           
  1515                           
  1516                           ;psect for function _UART_number
  1517  04E8                     _UART_number:
  1518  04E8                     l1264:	
  1519                           ;incstack = 0
  1520                           ; Regs used in _UART_number: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1521                           
  1522                           
  1523                           ;UART.c: 60: void UART_number(int number);UART.c: 61: {;UART.c: 62:  uint8_t buffer[10];
      +                          ;UART.c: 63:  sprintf((char *)buffer,"%d\n",number);
  1524  04E8  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1525  04E9  1283               	bcf	3,5	;RP0=0, select bank0
  1526  04EA  1303               	bcf	3,6	;RP1=0, select bank0
  1527  04EB  00AF               	movwf	??_UART_number
  1528  04EC  082F               	movf	??_UART_number,w
  1529  04ED  00A0               	movwf	sprintf@f
  1530  04EE  082E               	movf	UART_number@number+1,w
  1531  04EF  00A2               	movwf	?_sprintf+2
  1532  04F0  082D               	movf	UART_number@number,w
  1533  04F1  00A1               	movwf	?_sprintf+1
  1534  04F2  3030               	movlw	(low (UART_number@buffer| 0))& (0+255)
  1535  04F3  120A  118A  26F1  120A  118A  	fcall	_sprintf
  1536  04F8                     l1266:
  1537                           
  1538                           ;UART.c: 64:  UART_Buffer(buffer,strlen((char *)buffer));
  1539  04F8  3030               	movlw	(low (UART_number@buffer| 0))& (0+255)
  1540  04F9  120A  118A  2493  120A  118A  	fcall	_strlen
  1541  04FE  0870               	movf	?_strlen,w
  1542  04FF  1283               	bcf	3,5	;RP0=0, select bank0
  1543  0500  1303               	bcf	3,6	;RP1=0, select bank0
  1544  0501  00AF               	movwf	??_UART_number
  1545  0502  082F               	movf	??_UART_number,w
  1546  0503  00F5               	movwf	UART_Buffer@size
  1547  0504  3030               	movlw	(low (UART_number@buffer| 0))& (0+255)
  1548  0505  120A  118A  24AC  120A  118A  	fcall	_UART_Buffer
  1549  050A                     l98:
  1550  050A  0008               	return
  1551  050B                     __end_of_UART_number:
  1552                           
  1553                           	psect	text5
  1554  0493                     __ptext5:	
  1555 ;; *************** function _strlen *****************
  1556 ;; Defined at:
  1557 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\strlen.c"
  1558 ;; Parameters:    Size  Location     Type
  1559 ;;  s               1    wreg     PTR const unsigned char 
  1560 ;;		 -> mensaje(19), UART_number@buffer(10), 
  1561 ;; Auto vars:     Size  Location     Type
  1562 ;;  s               1    4[COMMON] PTR const unsigned char 
  1563 ;;		 -> mensaje(19), UART_number@buffer(10), 
  1564 ;;  cp              1    3[COMMON] PTR const unsigned char 
  1565 ;;		 -> mensaje(19), UART_number@buffer(10), 
  1566 ;; Return value:  Size  Location     Type
  1567 ;;                  2    0[COMMON] unsigned int 
  1568 ;; Registers used:
  1569 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1570 ;; Tracked objects:
  1571 ;;		On entry : 0/0
  1572 ;;		On exit  : 0/0
  1573 ;;		Unchanged: 0/0
  1574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1575 ;;      Params:         2       0       0       0       0
  1576 ;;      Locals:         2       0       0       0       0
  1577 ;;      Temps:          1       0       0       0       0
  1578 ;;      Totals:         5       0       0       0       0
  1579 ;;Total ram usage:        5 bytes
  1580 ;; Hardware stack levels used: 1
  1581 ;; This function calls:
  1582 ;;		Nothing
  1583 ;; This function is called by:
  1584 ;;		_UART_number
  1585 ;;		_main
  1586 ;; This function uses a non-reentrant model
  1587 ;;
  1588                           
  1589                           
  1590                           ;psect for function _strlen
  1591  0493                     _strlen:
  1592                           
  1593                           ;incstack = 0
  1594                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  1595                           ;strlen@s stored from wreg
  1596  0493  00F4               	movwf	strlen@s
  1597  0494                     l1246:
  1598  0494  0874               	movf	strlen@s,w
  1599  0495  00F2               	movwf	??_strlen
  1600  0496  0872               	movf	??_strlen,w
  1601  0497  00F3               	movwf	strlen@cp
  1602  0498  2C9D               	goto	l1250
  1603  0499                     l1248:
  1604  0499  3001               	movlw	1
  1605  049A  00F2               	movwf	??_strlen
  1606  049B  0872               	movf	??_strlen,w
  1607  049C  07F3               	addwf	strlen@cp,f
  1608  049D                     l1250:
  1609  049D  0873               	movf	strlen@cp,w
  1610  049E  0084               	movwf	4
  1611  049F  1383               	bcf	3,7	;select IRP bank0
  1612  04A0  0800               	movf	0,w
  1613  04A1  1D03               	btfss	3,2
  1614  04A2  2CA4               	goto	u611
  1615  04A3  2CA5               	goto	u610
  1616  04A4                     u611:
  1617  04A4  2C99               	goto	l1248
  1618  04A5                     u610:
  1619  04A5                     l1252:
  1620  04A5  0874               	movf	strlen@s,w
  1621  04A6  0273               	subwf	strlen@cp,w
  1622  04A7  00F0               	movwf	?_strlen
  1623  04A8  01F1               	clrf	?_strlen+1
  1624  04A9  1BF0               	btfsc	?_strlen,7
  1625  04AA  03F1               	decf	?_strlen+1,f
  1626  04AB                     l734:
  1627  04AB  0008               	return
  1628  04AC                     __end_of_strlen:
  1629                           
  1630                           	psect	text6
  1631  06F1                     __ptext6:	
  1632 ;; *************** function _sprintf *****************
  1633 ;; Defined at:
  1634 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  1635 ;; Parameters:    Size  Location     Type
  1636 ;;  sp              1    wreg     PTR unsigned char 
  1637 ;;		 -> UART_number@buffer(10), 
  1638 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1639 ;;		 -> STR_1(4), 
  1640 ;; Auto vars:     Size  Location     Type
  1641 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  1642 ;;		 -> UART_number@buffer(10), 
  1643 ;;  tmpval          4    0        struct .
  1644 ;;  val             2    9[BANK0 ] unsigned int 
  1645 ;;  cp              2    0        PTR const unsigned char 
  1646 ;;  len             2    0        unsigned int 
  1647 ;;  c               1   12[BANK0 ] unsigned char 
  1648 ;;  prec            1    8[BANK0 ] char 
  1649 ;;  flag            1    7[BANK0 ] unsigned char 
  1650 ;;  ap              1    6[BANK0 ] PTR void [1]
  1651 ;;		 -> ?_sprintf(2), 
  1652 ;; Return value:  Size  Location     Type
  1653 ;;                  2    0[BANK0 ] int 
  1654 ;; Registers used:
  1655 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1656 ;; Tracked objects:
  1657 ;;		On entry : 0/0
  1658 ;;		On exit  : 0/0
  1659 ;;		Unchanged: 0/0
  1660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1661 ;;      Params:         0       3       0       0       0
  1662 ;;      Locals:         0       7       0       0       0
  1663 ;;      Temps:          0       3       0       0       0
  1664 ;;      Totals:         0      13       0       0       0
  1665 ;;Total ram usage:       13 bytes
  1666 ;; Hardware stack levels used: 1
  1667 ;; Hardware stack levels required when called: 1
  1668 ;; This function calls:
  1669 ;;		___lwdiv
  1670 ;;		___lwmod
  1671 ;; This function is called by:
  1672 ;;		_UART_number
  1673 ;; This function uses a non-reentrant model
  1674 ;;
  1675                           
  1676                           
  1677                           ;psect for function _sprintf
  1678  06F1                     _sprintf:
  1679                           
  1680                           ;incstack = 0
  1681                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1682                           ;sprintf@sp stored from wreg
  1683  06F1  1283               	bcf	3,5	;RP0=0, select bank0
  1684  06F2  1303               	bcf	3,6	;RP1=0, select bank0
  1685  06F3  00AB               	movwf	sprintf@sp
  1686  06F4                     l1184:
  1687                           
  1688                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1689  06F4  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1690  06F5  00A3               	movwf	??_sprintf
  1691  06F6  0823               	movf	??_sprintf,w
  1692  06F7  00A6               	movwf	sprintf@ap
  1693                           
  1694                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1695  06F8  2FC2               	goto	l1236
  1696  06F9                     l1186:
  1697                           
  1698                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1699  06F9  3025               	movlw	37
  1700  06FA  062C               	xorwf	sprintf@c,w
  1701  06FB  1903               	btfsc	3,2
  1702  06FC  2EFE               	goto	u541
  1703  06FD  2EFF               	goto	u540
  1704  06FE                     u541:
  1705  06FE  2F0B               	goto	l1192
  1706  06FF                     u540:
  1707  06FF                     l1188:
  1708                           
  1709                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1710  06FF  082C               	movf	sprintf@c,w
  1711  0700  00A3               	movwf	??_sprintf
  1712  0701  082B               	movf	sprintf@sp,w
  1713  0702  0084               	movwf	4
  1714  0703  0823               	movf	??_sprintf,w
  1715  0704  1383               	bcf	3,7	;select IRP bank0
  1716  0705  0080               	movwf	0
  1717  0706                     l1190:
  1718  0706  3001               	movlw	1
  1719  0707  00A3               	movwf	??_sprintf
  1720  0708  0823               	movf	??_sprintf,w
  1721  0709  07AB               	addwf	sprintf@sp,f
  1722                           
  1723                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 559:    continue;
  1724  070A  2FC2               	goto	l1236
  1725  070B                     l1192:
  1726                           
  1727                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1728  070B  01A7               	clrf	sprintf@flag
  1729  070C                     l1196:	
  1730                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1731                           
  1732  070C  3001               	movlw	1
  1733  070D  07A0               	addwf	sprintf@f,f
  1734  070E  30FF               	movlw	-1
  1735  070F  0720               	addwf	sprintf@f,w
  1736  0710  0084               	movwf	4
  1737  0711  120A  118A  2003  120A  118A  	fcall	stringdir
  1738  0716  00AC               	movwf	sprintf@c
  1739  0717  00A3               	movwf	??_sprintf
  1740  0718  01A4               	clrf	??_sprintf+1
  1741                           
  1742                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1743                           ; Switch size 1, requested type "simple"
  1744                           ; Number of cases is 1, Range of values is 0 to 0
  1745                           ; switch strategies available:
  1746                           ; Name         Instructions Cycles
  1747                           ; simple_byte            4     3 (average)
  1748                           ; direct_byte           11     8 (fixed)
  1749                           ; jumptable            260     6 (fixed)
  1750                           ;	Chosen strategy is simple_byte
  1751  0719  0824               	movf	??_sprintf+1,w
  1752  071A  3A00               	xorlw	0	; case 0
  1753  071B  1903               	skipnz
  1754  071C  2F1E               	goto	l1426
  1755  071D  2FC2               	goto	l1236
  1756  071E                     l1426:
  1757                           
  1758                           ; Switch size 1, requested type "simple"
  1759                           ; Number of cases is 3, Range of values is 0 to 105
  1760                           ; switch strategies available:
  1761                           ; Name         Instructions Cycles
  1762                           ; simple_byte           10     6 (average)
  1763                           ; jumptable            260     6 (fixed)
  1764                           ;	Chosen strategy is simple_byte
  1765  071E  0823               	movf	??_sprintf,w
  1766  071F  3A00               	xorlw	0	; case 0
  1767  0720  1903               	skipnz
  1768  0721  2FD4               	goto	l1238
  1769  0722  3A64               	xorlw	100	; case 100
  1770  0723  1903               	skipnz
  1771  0724  2F29               	goto	l1198
  1772  0725  3A0D               	xorlw	13	; case 105
  1773  0726  1903               	skipnz
  1774  0727  2F29               	goto	l1198
  1775  0728  2FC2               	goto	l1236
  1776  0729                     l1198:
  1777                           
  1778                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1779  0729  0826               	movf	sprintf@ap,w
  1780  072A  0084               	movwf	4
  1781  072B  1383               	bcf	3,7	;select IRP bank0
  1782  072C  0800               	movf	0,w
  1783  072D  00A9               	movwf	sprintf@val
  1784  072E  0A84               	incf	4,f
  1785  072F  0800               	movf	0,w
  1786  0730  00AA               	movwf	sprintf@val+1
  1787  0731                     l1200:
  1788  0731  3002               	movlw	2
  1789  0732  00A3               	movwf	??_sprintf
  1790  0733  0823               	movf	??_sprintf,w
  1791  0734  07A6               	addwf	sprintf@ap,f
  1792  0735                     l1202:
  1793                           
  1794                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1795  0735  1FAA               	btfss	sprintf@val+1,7
  1796  0736  2F38               	goto	u551
  1797  0737  2F39               	goto	u550
  1798  0738                     u551:
  1799  0738  2F42               	goto	l1208
  1800  0739                     u550:
  1801  0739                     l1204:
  1802                           
  1803                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1804  0739  3003               	movlw	3
  1805  073A  00A3               	movwf	??_sprintf
  1806  073B  0823               	movf	??_sprintf,w
  1807  073C  04A7               	iorwf	sprintf@flag,f
  1808  073D                     l1206:
  1809                           
  1810                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1811  073D  09A9               	comf	sprintf@val,f
  1812  073E  09AA               	comf	sprintf@val+1,f
  1813  073F  0AA9               	incf	sprintf@val,f
  1814  0740  1903               	skipnz
  1815  0741  0AAA               	incf	sprintf@val+1,f
  1816  0742                     l1208:
  1817                           
  1818                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1819  0742  01AC               	clrf	sprintf@c
  1820  0743  0AAC               	incf	sprintf@c,f
  1821  0744                     l1214:
  1822                           
  1823                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1824  0744  082C               	movf	sprintf@c,w
  1825  0745  00A3               	movwf	??_sprintf
  1826  0746  0723               	addwf	??_sprintf,w
  1827  0747  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1828  0748  0084               	movwf	4
  1829  0749  120A  118A  2003  120A  118A  	fcall	stringdir
  1830  074E  00A4               	movwf	??_sprintf+1
  1831  074F  120A  118A  2003  120A  118A  	fcall	stringdir
  1832  0754  00A5               	movwf	??_sprintf+2
  1833  0755  0825               	movf	??_sprintf+2,w
  1834  0756  022A               	subwf	sprintf@val+1,w
  1835  0757  1D03               	skipz
  1836  0758  2F5B               	goto	u565
  1837  0759  0824               	movf	??_sprintf+1,w
  1838  075A  0229               	subwf	sprintf@val,w
  1839  075B                     u565:
  1840  075B  1803               	skipnc
  1841  075C  2F5E               	goto	u561
  1842  075D  2F5F               	goto	u560
  1843  075E                     u561:
  1844  075E  2F60               	goto	l1218
  1845  075F                     u560:
  1846  075F  2F6A               	goto	l1220
  1847  0760                     l1218:
  1848  0760  3001               	movlw	1
  1849  0761  00A3               	movwf	??_sprintf
  1850  0762  0823               	movf	??_sprintf,w
  1851  0763  07AC               	addwf	sprintf@c,f
  1852  0764  3005               	movlw	5
  1853  0765  062C               	xorwf	sprintf@c,w
  1854  0766  1D03               	btfss	3,2
  1855  0767  2F69               	goto	u571
  1856  0768  2F6A               	goto	u570
  1857  0769                     u571:
  1858  0769  2F44               	goto	l1214
  1859  076A                     u570:
  1860  076A                     l1220:
  1861                           
  1862                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1863  076A  0827               	movf	sprintf@flag,w
  1864  076B  3903               	andlw	3
  1865  076C  1903               	btfsc	3,2
  1866  076D  2F6F               	goto	u581
  1867  076E  2F70               	goto	u580
  1868  076F                     u581:
  1869  076F  2F7B               	goto	l1226
  1870  0770                     u580:
  1871  0770                     l1222:
  1872                           
  1873                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1874  0770  302D               	movlw	45
  1875  0771  00A3               	movwf	??_sprintf
  1876  0772  082B               	movf	sprintf@sp,w
  1877  0773  0084               	movwf	4
  1878  0774  0823               	movf	??_sprintf,w
  1879  0775  1383               	bcf	3,7	;select IRP bank0
  1880  0776  0080               	movwf	0
  1881  0777                     l1224:
  1882  0777  3001               	movlw	1
  1883  0778  00A3               	movwf	??_sprintf
  1884  0779  0823               	movf	??_sprintf,w
  1885  077A  07AB               	addwf	sprintf@sp,f
  1886  077B                     l1226:
  1887                           
  1888                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1889  077B  082C               	movf	sprintf@c,w
  1890  077C  00A3               	movwf	??_sprintf
  1891  077D  0823               	movf	??_sprintf,w
  1892  077E  00A8               	movwf	sprintf@prec
  1893                           
  1894                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1895  077F  2FB9               	goto	l1234
  1896  0780                     l1228:
  1897                           
  1898                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1899  0780  300A               	movlw	10
  1900  0781  00F8               	movwf	___lwmod@divisor
  1901  0782  3000               	movlw	0
  1902  0783  00F9               	movwf	___lwmod@divisor+1
  1903  0784  0828               	movf	sprintf@prec,w
  1904  0785  00A3               	movwf	??_sprintf
  1905  0786  0723               	addwf	??_sprintf,w
  1906  0787  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1907  0788  0084               	movwf	4
  1908  0789  120A  118A  2003  120A  118A  	fcall	stringdir
  1909  078E  00F0               	movwf	___lwdiv@divisor
  1910  078F  120A  118A  2003  120A  118A  	fcall	stringdir
  1911  0794  00F1               	movwf	___lwdiv@divisor+1
  1912  0795  082A               	movf	sprintf@val+1,w
  1913  0796  00F3               	movwf	___lwdiv@dividend+1
  1914  0797  0829               	movf	sprintf@val,w
  1915  0798  00F2               	movwf	___lwdiv@dividend
  1916  0799  120A  118A  25A0  120A  118A  	fcall	___lwdiv
  1917  079E  0871               	movf	?___lwdiv+1,w
  1918  079F  00FB               	movwf	___lwmod@dividend+1
  1919  07A0  0870               	movf	?___lwdiv,w
  1920  07A1  00FA               	movwf	___lwmod@dividend
  1921  07A2  120A  118A  2566  120A  118A  	fcall	___lwmod
  1922  07A7  0878               	movf	?___lwmod,w
  1923  07A8  3E30               	addlw	48
  1924  07A9  1283               	bcf	3,5	;RP0=0, select bank0
  1925  07AA  1303               	bcf	3,6	;RP1=0, select bank0
  1926  07AB  00A4               	movwf	??_sprintf+1
  1927  07AC  0824               	movf	??_sprintf+1,w
  1928  07AD  00AC               	movwf	sprintf@c
  1929  07AE                     l1230:
  1930                           
  1931                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1932  07AE  082C               	movf	sprintf@c,w
  1933  07AF  00A3               	movwf	??_sprintf
  1934  07B0  082B               	movf	sprintf@sp,w
  1935  07B1  0084               	movwf	4
  1936  07B2  0823               	movf	??_sprintf,w
  1937  07B3  1383               	bcf	3,7	;select IRP bank0
  1938  07B4  0080               	movwf	0
  1939  07B5                     l1232:
  1940  07B5  3001               	movlw	1
  1941  07B6  00A3               	movwf	??_sprintf
  1942  07B7  0823               	movf	??_sprintf,w
  1943  07B8  07AB               	addwf	sprintf@sp,f
  1944  07B9                     l1234:
  1945                           
  1946                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1947  07B9  30FF               	movlw	255
  1948  07BA  00A3               	movwf	??_sprintf
  1949  07BB  0823               	movf	??_sprintf,w
  1950  07BC  07A8               	addwf	sprintf@prec,f
  1951  07BD  0A28               	incf	sprintf@prec,w
  1952  07BE  1D03               	btfss	3,2
  1953  07BF  2FC1               	goto	u591
  1954  07C0  2FC2               	goto	u590
  1955  07C1                     u591:
  1956  07C1  2F80               	goto	l1228
  1957  07C2                     u590:
  1958  07C2                     l1236:
  1959                           
  1960                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1961  07C2  3001               	movlw	1
  1962  07C3  07A0               	addwf	sprintf@f,f
  1963  07C4  30FF               	movlw	-1
  1964  07C5  0720               	addwf	sprintf@f,w
  1965  07C6  0084               	movwf	4
  1966  07C7  120A  118A  2003  120A  118A  	fcall	stringdir
  1967  07CC  00A3               	movwf	??_sprintf
  1968  07CD  0823               	movf	??_sprintf,w
  1969  07CE  00AC               	movwf	sprintf@c
  1970  07CF  082C               	movf	sprintf@c,w
  1971  07D0  1D03               	btfss	3,2
  1972  07D1  2FD3               	goto	u601
  1973  07D2  2FD4               	goto	u600
  1974  07D3                     u601:
  1975  07D3  2EF9               	goto	l1186
  1976  07D4                     u600:
  1977  07D4                     l1238:
  1978                           
  1979                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1980  07D4  082B               	movf	sprintf@sp,w
  1981  07D5  0084               	movwf	4
  1982  07D6  1383               	bcf	3,7	;select IRP bank0
  1983  07D7  0180               	clrf	0
  1984  07D8                     l276:
  1985  07D8  0008               	return
  1986  07D9                     __end_of_sprintf:
  1987                           
  1988                           	psect	text7
  1989  0566                     __ptext7:	
  1990 ;; *************** function ___lwmod *****************
  1991 ;; Defined at:
  1992 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  1993 ;; Parameters:    Size  Location     Type
  1994 ;;  divisor         2    8[COMMON] unsigned int 
  1995 ;;  dividend        2   10[COMMON] unsigned int 
  1996 ;; Auto vars:     Size  Location     Type
  1997 ;;  counter         1   13[COMMON] unsigned char 
  1998 ;; Return value:  Size  Location     Type
  1999 ;;                  2    8[COMMON] unsigned int 
  2000 ;; Registers used:
  2001 ;;		wreg, status,2, status,0
  2002 ;; Tracked objects:
  2003 ;;		On entry : 0/0
  2004 ;;		On exit  : 0/0
  2005 ;;		Unchanged: 0/0
  2006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2007 ;;      Params:         4       0       0       0       0
  2008 ;;      Locals:         1       0       0       0       0
  2009 ;;      Temps:          1       0       0       0       0
  2010 ;;      Totals:         6       0       0       0       0
  2011 ;;Total ram usage:        6 bytes
  2012 ;; Hardware stack levels used: 1
  2013 ;; This function calls:
  2014 ;;		Nothing
  2015 ;; This function is called by:
  2016 ;;		_sprintf
  2017 ;; This function uses a non-reentrant model
  2018 ;;
  2019                           
  2020                           
  2021                           ;psect for function ___lwmod
  2022  0566                     ___lwmod:
  2023  0566                     l1152:	
  2024                           ;incstack = 0
  2025                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2026                           
  2027  0566  0878               	movf	___lwmod@divisor,w
  2028  0567  0479               	iorwf	___lwmod@divisor+1,w
  2029  0568  1903               	btfsc	3,2
  2030  0569  2D6B               	goto	u471
  2031  056A  2D6C               	goto	u470
  2032  056B                     u471:
  2033  056B  2D9B               	goto	l1170
  2034  056C                     u470:
  2035  056C                     l1154:
  2036  056C  01FD               	clrf	___lwmod@counter
  2037  056D  0AFD               	incf	___lwmod@counter,f
  2038  056E  2D7A               	goto	l1160
  2039  056F                     l1156:
  2040  056F  3001               	movlw	1
  2041  0570                     u485:
  2042  0570  1003               	clrc
  2043  0571  0DF8               	rlf	___lwmod@divisor,f
  2044  0572  0DF9               	rlf	___lwmod@divisor+1,f
  2045  0573  3EFF               	addlw	-1
  2046  0574  1D03               	skipz
  2047  0575  2D70               	goto	u485
  2048  0576                     l1158:
  2049  0576  3001               	movlw	1
  2050  0577  00FC               	movwf	??___lwmod
  2051  0578  087C               	movf	??___lwmod,w
  2052  0579  07FD               	addwf	___lwmod@counter,f
  2053  057A                     l1160:
  2054  057A  1FF9               	btfss	___lwmod@divisor+1,7
  2055  057B  2D7D               	goto	u491
  2056  057C  2D7E               	goto	u490
  2057  057D                     u491:
  2058  057D  2D6F               	goto	l1156
  2059  057E                     u490:
  2060  057E                     l1162:
  2061  057E  0879               	movf	___lwmod@divisor+1,w
  2062  057F  027B               	subwf	___lwmod@dividend+1,w
  2063  0580  1D03               	skipz
  2064  0581  2D84               	goto	u505
  2065  0582  0878               	movf	___lwmod@divisor,w
  2066  0583  027A               	subwf	___lwmod@dividend,w
  2067  0584                     u505:
  2068  0584  1C03               	skipc
  2069  0585  2D87               	goto	u501
  2070  0586  2D88               	goto	u500
  2071  0587                     u501:
  2072  0587  2D8E               	goto	l1166
  2073  0588                     u500:
  2074  0588                     l1164:
  2075  0588  0878               	movf	___lwmod@divisor,w
  2076  0589  02FA               	subwf	___lwmod@dividend,f
  2077  058A  0879               	movf	___lwmod@divisor+1,w
  2078  058B  1C03               	skipc
  2079  058C  03FB               	decf	___lwmod@dividend+1,f
  2080  058D  02FB               	subwf	___lwmod@dividend+1,f
  2081  058E                     l1166:
  2082  058E  3001               	movlw	1
  2083  058F                     u515:
  2084  058F  1003               	clrc
  2085  0590  0CF9               	rrf	___lwmod@divisor+1,f
  2086  0591  0CF8               	rrf	___lwmod@divisor,f
  2087  0592  3EFF               	addlw	-1
  2088  0593  1D03               	skipz
  2089  0594  2D8F               	goto	u515
  2090  0595                     l1168:
  2091  0595  3001               	movlw	1
  2092  0596  02FD               	subwf	___lwmod@counter,f
  2093  0597  1D03               	btfss	3,2
  2094  0598  2D9A               	goto	u521
  2095  0599  2D9B               	goto	u520
  2096  059A                     u521:
  2097  059A  2D7E               	goto	l1162
  2098  059B                     u520:
  2099  059B                     l1170:
  2100  059B  087B               	movf	___lwmod@dividend+1,w
  2101  059C  00F9               	movwf	?___lwmod+1
  2102  059D  087A               	movf	___lwmod@dividend,w
  2103  059E  00F8               	movwf	?___lwmod
  2104  059F                     l562:
  2105  059F  0008               	return
  2106  05A0                     __end_of___lwmod:
  2107                           
  2108                           	psect	text8
  2109  05A0                     __ptext8:	
  2110 ;; *************** function ___lwdiv *****************
  2111 ;; Defined at:
  2112 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  2113 ;; Parameters:    Size  Location     Type
  2114 ;;  divisor         2    0[COMMON] unsigned int 
  2115 ;;  dividend        2    2[COMMON] unsigned int 
  2116 ;; Auto vars:     Size  Location     Type
  2117 ;;  quotient        2    5[COMMON] unsigned int 
  2118 ;;  counter         1    7[COMMON] unsigned char 
  2119 ;; Return value:  Size  Location     Type
  2120 ;;                  2    0[COMMON] unsigned int 
  2121 ;; Registers used:
  2122 ;;		wreg, status,2, status,0
  2123 ;; Tracked objects:
  2124 ;;		On entry : 0/0
  2125 ;;		On exit  : 0/0
  2126 ;;		Unchanged: 0/0
  2127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2128 ;;      Params:         4       0       0       0       0
  2129 ;;      Locals:         3       0       0       0       0
  2130 ;;      Temps:          1       0       0       0       0
  2131 ;;      Totals:         8       0       0       0       0
  2132 ;;Total ram usage:        8 bytes
  2133 ;; Hardware stack levels used: 1
  2134 ;; This function calls:
  2135 ;;		Nothing
  2136 ;; This function is called by:
  2137 ;;		_sprintf
  2138 ;; This function uses a non-reentrant model
  2139 ;;
  2140                           
  2141                           
  2142                           ;psect for function ___lwdiv
  2143  05A0                     ___lwdiv:
  2144  05A0                     l1126:	
  2145                           ;incstack = 0
  2146                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2147                           
  2148  05A0  01F5               	clrf	___lwdiv@quotient
  2149  05A1  01F6               	clrf	___lwdiv@quotient+1
  2150  05A2                     l1128:
  2151  05A2  0870               	movf	___lwdiv@divisor,w
  2152  05A3  0471               	iorwf	___lwdiv@divisor+1,w
  2153  05A4  1903               	btfsc	3,2
  2154  05A5  2DA7               	goto	u401
  2155  05A6  2DA8               	goto	u400
  2156  05A7                     u401:
  2157  05A7  2DDF               	goto	l1148
  2158  05A8                     u400:
  2159  05A8                     l1130:
  2160  05A8  01F7               	clrf	___lwdiv@counter
  2161  05A9  0AF7               	incf	___lwdiv@counter,f
  2162  05AA  2DB6               	goto	l1136
  2163  05AB                     l1132:
  2164  05AB  3001               	movlw	1
  2165  05AC                     u415:
  2166  05AC  1003               	clrc
  2167  05AD  0DF0               	rlf	___lwdiv@divisor,f
  2168  05AE  0DF1               	rlf	___lwdiv@divisor+1,f
  2169  05AF  3EFF               	addlw	-1
  2170  05B0  1D03               	skipz
  2171  05B1  2DAC               	goto	u415
  2172  05B2                     l1134:
  2173  05B2  3001               	movlw	1
  2174  05B3  00F4               	movwf	??___lwdiv
  2175  05B4  0874               	movf	??___lwdiv,w
  2176  05B5  07F7               	addwf	___lwdiv@counter,f
  2177  05B6                     l1136:
  2178  05B6  1FF1               	btfss	___lwdiv@divisor+1,7
  2179  05B7  2DB9               	goto	u421
  2180  05B8  2DBA               	goto	u420
  2181  05B9                     u421:
  2182  05B9  2DAB               	goto	l1132
  2183  05BA                     u420:
  2184  05BA                     l1138:
  2185  05BA  3001               	movlw	1
  2186  05BB                     u435:
  2187  05BB  1003               	clrc
  2188  05BC  0DF5               	rlf	___lwdiv@quotient,f
  2189  05BD  0DF6               	rlf	___lwdiv@quotient+1,f
  2190  05BE  3EFF               	addlw	-1
  2191  05BF  1D03               	skipz
  2192  05C0  2DBB               	goto	u435
  2193  05C1  0871               	movf	___lwdiv@divisor+1,w
  2194  05C2  0273               	subwf	___lwdiv@dividend+1,w
  2195  05C3  1D03               	skipz
  2196  05C4  2DC7               	goto	u445
  2197  05C5  0870               	movf	___lwdiv@divisor,w
  2198  05C6  0272               	subwf	___lwdiv@dividend,w
  2199  05C7                     u445:
  2200  05C7  1C03               	skipc
  2201  05C8  2DCA               	goto	u441
  2202  05C9  2DCB               	goto	u440
  2203  05CA                     u441:
  2204  05CA  2DD2               	goto	l1144
  2205  05CB                     u440:
  2206  05CB                     l1140:
  2207  05CB  0870               	movf	___lwdiv@divisor,w
  2208  05CC  02F2               	subwf	___lwdiv@dividend,f
  2209  05CD  0871               	movf	___lwdiv@divisor+1,w
  2210  05CE  1C03               	skipc
  2211  05CF  03F3               	decf	___lwdiv@dividend+1,f
  2212  05D0  02F3               	subwf	___lwdiv@dividend+1,f
  2213  05D1                     l1142:
  2214  05D1  1475               	bsf	___lwdiv@quotient,0
  2215  05D2                     l1144:
  2216  05D2  3001               	movlw	1
  2217  05D3                     u455:
  2218  05D3  1003               	clrc
  2219  05D4  0CF1               	rrf	___lwdiv@divisor+1,f
  2220  05D5  0CF0               	rrf	___lwdiv@divisor,f
  2221  05D6  3EFF               	addlw	-1
  2222  05D7  1D03               	skipz
  2223  05D8  2DD3               	goto	u455
  2224  05D9                     l1146:
  2225  05D9  3001               	movlw	1
  2226  05DA  02F7               	subwf	___lwdiv@counter,f
  2227  05DB  1D03               	btfss	3,2
  2228  05DC  2DDE               	goto	u461
  2229  05DD  2DDF               	goto	u460
  2230  05DE                     u461:
  2231  05DE  2DBA               	goto	l1138
  2232  05DF                     u460:
  2233  05DF                     l1148:
  2234  05DF  0876               	movf	___lwdiv@quotient+1,w
  2235  05E0  00F1               	movwf	?___lwdiv+1
  2236  05E1  0875               	movf	___lwdiv@quotient,w
  2237  05E2  00F0               	movwf	?___lwdiv
  2238  05E3                     l552:
  2239  05E3  0008               	return
  2240  05E4                     __end_of___lwdiv:
  2241                           
  2242                           	psect	text9
  2243  04AC                     __ptext9:	
  2244 ;; *************** function _UART_Buffer *****************
  2245 ;; Defined at:
  2246 ;;		line 48 in file "UART.c"
  2247 ;; Parameters:    Size  Location     Type
  2248 ;;  buffer          1    wreg     PTR unsigned char 
  2249 ;;		 -> mensaje(19), UART_number@buffer(10), 
  2250 ;;  size            1    5[COMMON] unsigned char 
  2251 ;; Auto vars:     Size  Location     Type
  2252 ;;  buffer          1    8[COMMON] PTR unsigned char 
  2253 ;;		 -> mensaje(19), UART_number@buffer(10), 
  2254 ;;  count           1    7[COMMON] unsigned char 
  2255 ;; Return value:  Size  Location     Type
  2256 ;;                  1    wreg      void 
  2257 ;; Registers used:
  2258 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2259 ;; Tracked objects:
  2260 ;;		On entry : 0/0
  2261 ;;		On exit  : 0/0
  2262 ;;		Unchanged: 0/0
  2263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2264 ;;      Params:         1       0       0       0       0
  2265 ;;      Locals:         2       0       0       0       0
  2266 ;;      Temps:          1       0       0       0       0
  2267 ;;      Totals:         4       0       0       0       0
  2268 ;;Total ram usage:        4 bytes
  2269 ;; Hardware stack levels used: 1
  2270 ;; Hardware stack levels required when called: 1
  2271 ;; This function calls:
  2272 ;;		_UART_Write
  2273 ;; This function is called by:
  2274 ;;		_UART_number
  2275 ;;		_main
  2276 ;; This function uses a non-reentrant model
  2277 ;;
  2278                           
  2279                           
  2280                           ;psect for function _UART_Buffer
  2281  04AC                     _UART_Buffer:
  2282                           
  2283                           ;incstack = 0
  2284                           ; Regs used in _UART_Buffer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2285                           ;UART_Buffer@buffer stored from wreg
  2286  04AC  00F8               	movwf	UART_Buffer@buffer
  2287  04AD                     l1174:
  2288                           
  2289                           ;UART.c: 48: void UART_Buffer(uint8_t *buffer, uint8_t size);UART.c: 49: {;UART.c: 50:  
      +                             char count=0;
  2290  04AD  01F7               	clrf	UART_Buffer@count
  2291                           
  2292                           ;UART.c: 51:     while(count<size)
  2293  04AE  2CC0               	goto	l1182
  2294  04AF                     l1176:
  2295                           
  2296                           ;UART.c: 52:     {;UART.c: 53:         UART_Write(*buffer);
  2297  04AF  0878               	movf	UART_Buffer@buffer,w
  2298  04B0  0084               	movwf	4
  2299  04B1  1383               	bcf	3,7	;select IRP bank0
  2300  04B2  0800               	movf	0,w
  2301  04B3  120A  118A  2461  120A  118A  	fcall	_UART_Write
  2302  04B8                     l1178:
  2303                           
  2304                           ;UART.c: 54:         count++;
  2305  04B8  3001               	movlw	1
  2306  04B9  00F6               	movwf	??_UART_Buffer
  2307  04BA  0876               	movf	??_UART_Buffer,w
  2308  04BB  07F7               	addwf	UART_Buffer@count,f
  2309  04BC                     l1180:
  2310                           
  2311                           ;UART.c: 55:         buffer++;
  2312  04BC  3001               	movlw	1
  2313  04BD  00F6               	movwf	??_UART_Buffer
  2314  04BE  0876               	movf	??_UART_Buffer,w
  2315  04BF  07F8               	addwf	UART_Buffer@buffer,f
  2316  04C0                     l1182:
  2317                           
  2318                           ;UART.c: 51:     while(count<size)
  2319  04C0  0875               	movf	UART_Buffer@size,w
  2320  04C1  0277               	subwf	UART_Buffer@count,w
  2321  04C2  1C03               	skipc
  2322  04C3  2CC5               	goto	u531
  2323  04C4  2CC6               	goto	u530
  2324  04C5                     u531:
  2325  04C5  2CAF               	goto	l1176
  2326  04C6                     u530:
  2327  04C6                     l95:
  2328  04C6  0008               	return
  2329  04C7                     __end_of_UART_Buffer:
  2330                           
  2331                           	psect	text10
  2332  0461                     __ptext10:	
  2333 ;; *************** function _UART_Write *****************
  2334 ;; Defined at:
  2335 ;;		line 34 in file "UART.c"
  2336 ;; Parameters:    Size  Location     Type
  2337 ;;  data            1    wreg     unsigned char 
  2338 ;; Auto vars:     Size  Location     Type
  2339 ;;  data            1    0[COMMON] unsigned char 
  2340 ;; Return value:  Size  Location     Type
  2341 ;;                  1    wreg      void 
  2342 ;; Registers used:
  2343 ;;		wreg
  2344 ;; Tracked objects:
  2345 ;;		On entry : 0/0
  2346 ;;		On exit  : 0/0
  2347 ;;		Unchanged: 0/0
  2348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2349 ;;      Params:         0       0       0       0       0
  2350 ;;      Locals:         1       0       0       0       0
  2351 ;;      Temps:          0       0       0       0       0
  2352 ;;      Totals:         1       0       0       0       0
  2353 ;;Total ram usage:        1 bytes
  2354 ;; Hardware stack levels used: 1
  2355 ;; This function calls:
  2356 ;;		Nothing
  2357 ;; This function is called by:
  2358 ;;		_ADC_print_burst
  2359 ;;		_UART_Buffer
  2360 ;; This function uses a non-reentrant model
  2361 ;;
  2362                           
  2363                           
  2364                           ;psect for function _UART_Write
  2365  0461                     _UART_Write:
  2366                           
  2367                           ;incstack = 0
  2368                           ; Regs used in _UART_Write: [wreg]
  2369                           ;UART_Write@data stored from wreg
  2370  0461  00F0               	movwf	UART_Write@data
  2371  0462                     l1122:
  2372  0462                     l83:	
  2373                           ;UART.c: 34: void UART_Write(uint8_t data);UART.c: 35: {;UART.c: 36:   while(!TRMT);
  2374                           
  2375  0462  1683               	bsf	3,5	;RP0=1, select bank1
  2376  0463  1303               	bcf	3,6	;RP1=0, select bank1
  2377  0464  1C98               	btfss	24,1	;volatile
  2378  0465  2C67               	goto	u391
  2379  0466  2C68               	goto	u390
  2380  0467                     u391:
  2381  0467  2C62               	goto	l83
  2382  0468                     u390:
  2383  0468                     l1124:
  2384                           
  2385                           ;UART.c: 37:   TXREG = data;
  2386  0468  0870               	movf	UART_Write@data,w
  2387  0469  1283               	bcf	3,5	;RP0=0, select bank0
  2388  046A  1303               	bcf	3,6	;RP1=0, select bank0
  2389  046B  0099               	movwf	25	;volatile
  2390  046C                     l86:
  2391  046C  0008               	return
  2392  046D                     __end_of_UART_Write:
  2393                           
  2394                           	psect	text11
  2395  0535                     __ptext11:	
  2396 ;; *************** function _ADC_burst *****************
  2397 ;; Defined at:
  2398 ;;		line 59 in file "ADC.c"
  2399 ;; Parameters:    Size  Location     Type
  2400 ;;  channels        1    wreg     PTR unsigned char 
  2401 ;;		 -> ANChannels(8), 
  2402 ;;  reading         1    3[COMMON] PTR unsigned int 
  2403 ;;		 -> ANRead(16), 
  2404 ;;  numberc         1    4[COMMON] unsigned char 
  2405 ;; Auto vars:     Size  Location     Type
  2406 ;;  channels        1    7[COMMON] PTR unsigned char 
  2407 ;;		 -> ANChannels(8), 
  2408 ;;  n               1    8[COMMON] unsigned char 
  2409 ;; Return value:  Size  Location     Type
  2410 ;;                  1    wreg      void 
  2411 ;; Registers used:
  2412 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2413 ;; Tracked objects:
  2414 ;;		On entry : 0/0
  2415 ;;		On exit  : 0/0
  2416 ;;		Unchanged: 0/0
  2417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2418 ;;      Params:         2       0       0       0       0
  2419 ;;      Locals:         2       0       0       0       0
  2420 ;;      Temps:          2       0       0       0       0
  2421 ;;      Totals:         6       0       0       0       0
  2422 ;;Total ram usage:        6 bytes
  2423 ;; Hardware stack levels used: 1
  2424 ;; Hardware stack levels required when called: 1
  2425 ;; This function calls:
  2426 ;;		_ADC_init_channel
  2427 ;; This function is called by:
  2428 ;;		_main
  2429 ;; This function uses a non-reentrant model
  2430 ;;
  2431                           
  2432                           
  2433                           ;psect for function _ADC_burst
  2434  0535                     _ADC_burst:
  2435                           
  2436                           ;incstack = 0
  2437                           ; Regs used in _ADC_burst: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2438                           ;ADC_burst@channels stored from wreg
  2439  0535  00F7               	movwf	ADC_burst@channels
  2440  0536                     l1292:
  2441                           
  2442                           ;ADC.c: 59: void ADC_burst(uint8_t *channels,uint16_t *reading,uint8_t numberc);ADC.c: 6
      +                          0: {;ADC.c: 61:     for(uint8_t n=0;n<numberc;n++ )
  2443  0536  01F8               	clrf	ADC_burst@n
  2444  0537  2D5F               	goto	l1300
  2445  0538                     l1294:
  2446                           
  2447                           ;ADC.c: 62:     {;ADC.c: 63:         ADC_init_channel(channels[n]);
  2448  0538  0878               	movf	ADC_burst@n,w
  2449  0539  0777               	addwf	ADC_burst@channels,w
  2450  053A  00F5               	movwf	??_ADC_burst
  2451  053B  0875               	movf	??_ADC_burst,w
  2452  053C  0084               	movwf	4
  2453  053D  1383               	bcf	3,7	;select IRP bank0
  2454  053E  0800               	movf	0,w
  2455  053F  120A  118A  24C7  120A  118A  	fcall	_ADC_init_channel
  2456  0544                     l39:	
  2457                           ;ADC.c: 64:         while(ADCON0bits.GO_DONE);
  2458                           
  2459  0544  1283               	bcf	3,5	;RP0=0, select bank0
  2460  0545  1303               	bcf	3,6	;RP1=0, select bank0
  2461  0546  189F               	btfsc	31,1	;volatile
  2462  0547  2D49               	goto	u701
  2463  0548  2D4A               	goto	u700
  2464  0549                     u701:
  2465  0549  2D44               	goto	l39
  2466  054A                     u700:
  2467  054A                     l1296:
  2468                           
  2469                           ;ADC.c: 65:         reading[n] = (ADRESH << 8) + ADRESL;
  2470  054A  0878               	movf	ADC_burst@n,w
  2471  054B  00F5               	movwf	??_ADC_burst
  2472  054C  0775               	addwf	??_ADC_burst,w
  2473  054D  0773               	addwf	ADC_burst@reading,w
  2474  054E  00F6               	movwf	??_ADC_burst+1
  2475  054F  0876               	movf	??_ADC_burst+1,w
  2476  0550  0084               	movwf	4
  2477  0551  1683               	bsf	3,5	;RP0=1, select bank1
  2478  0552  1303               	bcf	3,6	;RP1=0, select bank1
  2479  0553  081E               	movf	30,w	;volatile
  2480  0554  1383               	bcf	3,7	;select IRP bank0
  2481  0555  0080               	movwf	0
  2482  0556  0A84               	incf	4,f
  2483  0557  1283               	bcf	3,5	;RP0=0, select bank0
  2484  0558  1303               	bcf	3,6	;RP1=0, select bank0
  2485  0559  081E               	movf	30,w	;volatile
  2486  055A  0080               	movwf	0
  2487  055B                     l1298:
  2488                           
  2489                           ;ADC.c: 66:     }
  2490  055B  3001               	movlw	1
  2491  055C  00F5               	movwf	??_ADC_burst
  2492  055D  0875               	movf	??_ADC_burst,w
  2493  055E  07F8               	addwf	ADC_burst@n,f
  2494  055F                     l1300:
  2495  055F  0874               	movf	ADC_burst@numberc,w
  2496  0560  0278               	subwf	ADC_burst@n,w
  2497  0561  1C03               	skipc
  2498  0562  2D64               	goto	u711
  2499  0563  2D65               	goto	u710
  2500  0564                     u711:
  2501  0564  2D38               	goto	l1294
  2502  0565                     u710:
  2503  0565                     l43:
  2504  0565  0008               	return
  2505  0566                     __end_of_ADC_burst:
  2506                           
  2507                           	psect	text12
  2508  04C7                     __ptext12:	
  2509 ;; *************** function _ADC_init_channel *****************
  2510 ;; Defined at:
  2511 ;;		line 19 in file "ADC.c"
  2512 ;; Parameters:    Size  Location     Type
  2513 ;;  channel         1    wreg     unsigned char 
  2514 ;; Auto vars:     Size  Location     Type
  2515 ;;  channel         1    2[COMMON] unsigned char 
  2516 ;; Return value:  Size  Location     Type
  2517 ;;                  1    wreg      void 
  2518 ;; Registers used:
  2519 ;;		wreg, status,2, status,0
  2520 ;; Tracked objects:
  2521 ;;		On entry : 0/0
  2522 ;;		On exit  : 0/0
  2523 ;;		Unchanged: 0/0
  2524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2525 ;;      Params:         0       0       0       0       0
  2526 ;;      Locals:         1       0       0       0       0
  2527 ;;      Temps:          2       0       0       0       0
  2528 ;;      Totals:         3       0       0       0       0
  2529 ;;Total ram usage:        3 bytes
  2530 ;; Hardware stack levels used: 1
  2531 ;; This function calls:
  2532 ;;		Nothing
  2533 ;; This function is called by:
  2534 ;;		_ADC_burst
  2535 ;; This function uses a non-reentrant model
  2536 ;;
  2537                           
  2538                           
  2539                           ;psect for function _ADC_init_channel
  2540  04C7                     _ADC_init_channel:
  2541                           
  2542                           ;incstack = 0
  2543                           ; Regs used in _ADC_init_channel: [wreg+status,2+status,0]
  2544                           ;ADC_init_channel@channel stored from wreg
  2545  04C7  00F2               	movwf	ADC_init_channel@channel
  2546  04C8                     l1256:
  2547                           
  2548                           ;ADC.c: 19: void ADC_init_channel(char channel);ADC.c: 20: {;ADC.c: 22:     ADCON0 = 0x8
      +                          1;
  2549  04C8  3081               	movlw	129
  2550  04C9  1283               	bcf	3,5	;RP0=0, select bank0
  2551  04CA  1303               	bcf	3,6	;RP1=0, select bank0
  2552  04CB  009F               	movwf	31	;volatile
  2553                           
  2554                           ;ADC.c: 23:     ADCON1 = 0x80;
  2555  04CC  3080               	movlw	128
  2556  04CD  1683               	bsf	3,5	;RP0=1, select bank1
  2557  04CE  1303               	bcf	3,6	;RP1=0, select bank1
  2558  04CF  009F               	movwf	31	;volatile
  2559  04D0                     l1258:
  2560                           
  2561                           ;ADC.c: 24:     ADCON0 |= (channel<<2);
  2562  04D0  0872               	movf	ADC_init_channel@channel,w	;volatile
  2563  04D1  00F0               	movwf	??_ADC_init_channel
  2564  04D2  3001               	movlw	1
  2565  04D3                     u625:
  2566  04D3  1003               	clrc
  2567  04D4  0DF0               	rlf	??_ADC_init_channel,f
  2568  04D5  3EFF               	addlw	-1
  2569  04D6  1D03               	skipz
  2570  04D7  2CD3               	goto	u625
  2571  04D8  1003               	clrc
  2572  04D9  0D70               	rlf	??_ADC_init_channel,w
  2573  04DA  00F1               	movwf	??_ADC_init_channel+1
  2574  04DB  0871               	movf	??_ADC_init_channel+1,w
  2575  04DC  1283               	bcf	3,5	;RP0=0, select bank0
  2576  04DD  1303               	bcf	3,6	;RP1=0, select bank0
  2577  04DE  049F               	iorwf	31,f	;volatile
  2578  04DF                     l1260:
  2579                           
  2580                           ;ADC.c: 27:     _delay((unsigned long)((5)*(16000000/4000000.0)));
  2581  04DF  3006               	movlw	6
  2582  04E0  00F0               	movwf	??_ADC_init_channel
  2583  04E1                     u767:
  2584  04E1  0BF0               	decfsz	??_ADC_init_channel,f
  2585  04E2  2CE1               	goto	u767
  2586  04E3  0000               	nop
  2587  04E4                     l1262:
  2588                           
  2589                           ;ADC.c: 30:     GO_DONE = 1;
  2590  04E4  1283               	bcf	3,5	;RP0=0, select bank0
  2591  04E5  1303               	bcf	3,6	;RP1=0, select bank0
  2592  04E6  149F               	bsf	31,1	;volatile
  2593  04E7                     l31:
  2594  04E7  0008               	return
  2595  04E8                     __end_of_ADC_init_channel:
  2596  007E                     btemp	set	126	;btemp
  2597  007E                     wtemp0	set	126
  2598                           
  2599                           	psect	config
  2600                           
  2601                           ;Config register CONFIG1 @ 0x2007
  2602                           ;	Oscillator Selection bits
  2603                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  2604                           ;	Watchdog Timer Enable bit
  2605                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2606                           ;	Power-up Timer Enable bit
  2607                           ;	PWRTE = OFF, PWRT disabled
  2608                           ;	RE3/MCLR pin function select bit
  2609                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  2610                           ;	Code Protection bit
  2611                           ;	CP = OFF, Program memory code protection is disabled
  2612                           ;	Data Code Protection bit
  2613                           ;	CPD = OFF, Data memory code protection is disabled
  2614                           ;	Brown Out Reset Selection bits
  2615                           ;	BOREN = OFF, BOR disabled
  2616                           ;	Internal External Switchover bit
  2617                           ;	IESO = ON, Internal/External Switchover mode is enabled
  2618                           ;	Fail-Safe Clock Monitor Enabled bit
  2619                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2620                           ;	Low Voltage Programming Enable bit
  2621                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2622                           ;	In-Circuit Debugger Mode bit
  2623                           ;	DEBUG = 0x1, unprogrammed default
  2624  2007                     	org	8199
  2625  2007  24F2               	dw	9458
  2626                           
  2627                           ;Config register CONFIG2 @ 0x2008
  2628                           ;	Brown-out Reset Selection bit
  2629                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2630                           ;	Flash Program Memory Self Write Enable bits
  2631                           ;	WRT = OFF, Write protection off
  2632  2008                     	org	8200
  2633  2008  3FFF               	dw	16383

Data Sizes:
    Strings     4
    Constant    10
    Data        27
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     34      64
    BANK1            80      0      19
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 19
		 -> mensaje(BANK1[19]), UART_number@buffer(BANK0[10]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 19
		 -> mensaje(BANK1[19]), UART_number@buffer(BANK0[10]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_1(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> UART_number@buffer(BANK0[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    UART_Buffer@buffer	PTR unsigned char  size(1) Largest target is 19
		 -> mensaje(BANK1[19]), UART_number@buffer(BANK0[10]), 

    ADC_print_burst@BurstReadings	PTR unsigned int  size(1) Largest target is 16
		 -> ANRead(BANK0[16]), 

    ADC_burst@reading	PTR unsigned int  size(1) Largest target is 16
		 -> ANRead(BANK0[16]), 

    ADC_burst@channels	PTR unsigned char  size(1) Largest target is 8
		 -> ANChannels(BANK0[8]), 


Critical Paths under _main in COMMON

    _UART_TX_Init->___lldiv
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _UART_Buffer->_strlen
    _ADC_burst->_ADC_init_channel

Critical Paths under _main in BANK0

    _main->_ADC_print_burst
    _ADC_print_burst->_UART_number
    _UART_number->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3334
                                             31 BANK0      3     3      0
                          _ADC_burst
                    _ADC_print_burst
                        _UART_Buffer
                       _UART_TX_Init
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _UART_TX_Init                                        10     6      4     457
                                              0 BANK0     10     6      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _ADC_print_burst                                      5     4      1    2071
                                             26 BANK0      5     4      1
                         _UART_Write
                        _UART_number
 ---------------------------------------------------------------------------------
 (2) _UART_number                                         13    11      2    1850
                                             13 BANK0     13    11      2
                        _UART_Buffer
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strlen                                               5     3      2     156
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             21    18      3    1211
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _UART_Buffer                                          4     3      1     309
                                              5 COMMON     4     3      1
                         _UART_Write
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_burst                                            6     4      2     341
                                              3 COMMON     6     4      2
                   _ADC_init_channel
 ---------------------------------------------------------------------------------
 (2) _ADC_init_channel                                     3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_burst
     _ADC_init_channel
   _ADC_print_burst
     _UART_Write
     _UART_number
       _UART_Buffer
         _UART_Write
         _strlen (ARG)
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
       _strlen
   _UART_Buffer
   _UART_TX_Init
     ___lldiv
   _strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      13       7       23.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     22      40       5       80.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      61      12        0.0%
ABS                  0      0      61       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Jun 06 00:23:42 2022

                            pc 0002                             l31 04E7                             l43 0565  
                           l39 0544                             l80 0630                             l49 0534  
                           l83 0462                             l86 046C                             l95 04C6  
                           l98 050A                             fsr 0004             __size_of_ADC_burst 0031  
                          l316 06F0                            l276 07D8                            l552 05E3  
                          l562 059F                            l734 04AB                            _GIE 005F  
                          _RC1 0039                            _RC2 003A                            u400 05A8  
                          u401 05A7                            u420 05BA                            u500 0588  
                          u421 05B9                            u501 0587                            u415 05AC  
                          u440 05CB                            u520 059B                            u600 07D4  
                          u441 05CA                            u521 059A                            u505 0584  
                          u601 07D3                            u530 04C6                            u610 04A5  
                          u531 04C5                            u435 05BB                            u515 058F  
                          u611 04A4                            u700 054A                            u460 05DF  
                          u540 06FF                            u701 0549                            u461 05DE  
                          u445 05C7                            u541 06FE                            u710 0565  
                          u390 0468                            u470 056C                            u550 0739  
                          u630 069B                            u711 0564                            u391 0467  
                          u455 05D3                            u471 056B                            u551 0738  
                          u631 069A                            u560 075F                            u720 052E  
                          u625 04D3                            u561 075E                            u721 052D  
                          u490 057E                            u570 076A                            u650 06AF  
                          u730 060B                            u491 057D                            u571 0769  
                          u651 06AE                            u580 0770                            u485 0570  
                          u581 076F                            u565 075B                            u645 06A0  
                          u590 07C2                            u670 06CA                            u591 07C1  
                          u671 06C9                            u735 0606                            u665 06B1  
                          u690 06E8                            u691 06E7                            u675 06C6  
                          u685 06DA                            u757 0680                            u767 04E1  
                          fsr0 0004                            indf 0000                           l1200 0731  
                         l1122 0462                           l1130 05A8                           l1202 0735  
                         l1300 055F                           l1124 0468                           l1140 05CB  
                         l1132 05AB                           l1220 076A                           l1204 0739  
                         l1142 05D1                           l1134 05B2                           l1126 05A0  
                         l1230 07AE                           l1222 0770                           l1214 0744  
                         l1206 073D                           l1310 052E                           l1302 050E  
                         l1144 05D2                           l1136 05B6                           l1128 05A2  
                         l1160 057A                           l1152 0566                           l1232 07B5  
                         l1224 0777                           l1208 0742                           l1304 0510  
                         l1320 0622                           l1312 05E4                           l1146 05D9  
                         l1138 05BA                           l1162 057E                           l1154 056C  
                         l1170 059B                           l1234 07B9                           l1226 077B  
                         l1218 0760                           l1250 049D                           l1306 0522  
                         l1322 0628                           l1314 0616                           l1330 0631  
                         l1260 04DF                           l1180 04BC                           l1148 05DF  
                         l1164 0588                           l1156 056F                           l1228 0780  
                         l1236 07C2                           l1252 04A5                           l1308 0528  
                         l1324 0629                           l1316 0619                           l1340 0659  
                         l1332 0640                           l1262 04E4                           l1182 04C0  
                         l1174 04AD                           l1166 058E                           l1158 0576  
                         l1238 07D4                           l1190 0706                           l1246 0494  
                         l1270 069B                           l1326 062C                           l1318 061C  
                         l1350 0678                           l1342 065A                           l1334 0652  
                         l1256 04C8                           l1176 04AF                           l1168 0595  
                         l1192 070B                           l1184 06F4                           l1248 0499  
                         l1264 04E8                           l1280 06CA                           l1272 069E  
                         l1328 062F                           l1344 0668                           l1336 0655  
                         l1258 04D0                           l1178 04B8                           l1426 071E  
                         l1186 06F9                           l1266 04F8                           l1282 06D8  
                         l1274 06AB                           l1346 066B                           l1338 0656  
                         l1292 0536                           l1196 070C                           l1188 06FF  
                         l1284 06D9                           l1276 06AF                           l1268 068B  
                         l1348 0675                           l1294 0538                           l1198 0729  
                         l1286 06E2                           l1278 06B8                           l1296 054A  
                         l1288 06E8                           l1298 055B                           _ADIE 0466  
                         _ADIF 0066                           STR_1 0013                           _BRGH 04C2  
             ?_ADC_print_burst 003A                           _PEIE 005E                           _TMR1 000E  
                         _SPEN 00C7                           _TRMT 04C1                           _TXEN 04C5  
                         _SYNC 04C4                           _main 0631                           btemp 007E  
                         start 0000      __size_of_ADC_init_channel 0021  ADC_print_burst@NumberReadings 003A  
                        ?_main 0070                          _BRG16 0C3B                __end_of___lldiv 06F1  
              __end_of___lwdiv 05E4                __end_of___lwmod 05A0                          _SPBRG 0099  
                        _TXREG 0019                    ?_UART_Write 0070                __end_of_dpowers 0013  
                        pclath 000A                          status 0003                          wtemp0 007E  
              __end_of_sprintf 07D9              __end_of_ADC_burst 0566                __initialization 07D9  
                 __end_of_main 068B                         ??_main 003F                         _ADCON0 001F  
                       _ADCON1 009F                         _ADRESH 001E                         _ADRESL 009E  
                       _ANRead 0048                         _TMR1IE 0460                         _TMR1IF 0060  
                       _TMR1CS 0081                         _SPBRGH 009A                         _TMR1ON 0080  
                       _TRISC1 0439                         _TRISC2 043A                         _TRISC6 043E  
                 ?_UART_Buffer 0075            __size_of_UART_Write 000C               UART_TX_Init@baud 0020  
                    ??___lldiv 0078              ADC_burst@channels 0077                      ??___lwdiv 0074  
             UART_TX_Init@temp 0028                      ??___lwmod 007C                   ?_UART_number 002D  
                       _strlen 0493                      ??_sprintf 0023               UART_Buffer@count 0077  
      __end_of__initialization 07FC               _ADC_init_channel 04C7                 __pcstackCOMMON 0070  
                 __pidataBANK0 0459                   __pidataBANK1 0480         _timer_overflow_counter 0042  
                   __pbssBANK0 0042               ADC_print_burst@n 003E                     __pmaintext 0631  
                      _AN0_RES 0046                        _T1CKPS0 0084                        _T1CKPS1 0085  
                      ?_strlen 0070                        _GO_DONE 00F9                   ??_UART_Write 0070  
                ?_UART_TX_Init 0020                     __stringtab 0003                     ADC_burst@n 0078  
     __size_of_ADC_print_burst 002A           __size_of_UART_Buffer 001B                      _ADC_burst 0535  
                      ___lldiv 068B             __end_of_UART_Write 046D                        ___lwdiv 05A0  
                      ___lwmod 0566                        __ptext1 05E4                        __ptext2 068B  
                      __ptext3 050B                        __ptext4 04E8                        __ptext5 0493  
                      __ptext6 06F1                        __ptext7 0566                        __ptext8 05A0  
                      __ptext9 04AC           __size_of_UART_number 0023                __size_of_strlen 0019  
                      _dpowers 0009                        _mensaje 00A0                 ??_UART_TX_Init 0024  
                      _sprintf 06F1                        clrloop0 0452           end_of_initialization 07FC  
              ___lldiv@divisor 0070                ___lldiv@counter 007D                     ?_ADC_burst 0073  
                      strlen@s 0074                 UART_Write@data 0070              UART_Buffer@buffer 0078  
     __end_of_ADC_init_channel 04E8              ??_ADC_print_burst 003B              UART_number@buffer 0030  
               __end_of_strlen 04AC              UART_number@number 002D            start_initialization 07D9  
              _timer_overflows 0044                    ??_ADC_burst 0075                     init_fetch0 046D  
         __end_of_UART_TX_Init 0631                    __pdataBANK0 0058                    __pdataBANK1 00A0  
             ADC_burst@reading 0073                       ??_strlen 0072               ADC_burst@numberc 0074  
              UART_Buffer@size 0075                      ___latbits 0002                  __pcstackBANK0 0020  
                  sprintf@flag 0027                    sprintf@prec 0028               ___lwdiv@dividend 0072  
 ADC_print_burst@BurstReadings 003D                       ?___lldiv 0070                       ?___lwdiv 0070  
                     ?___lwmod 0078                      __pstrings 0003               ___lwdiv@quotient 0075  
                     ?_sprintf 0020                  ??_UART_Buffer 0076                      clear_ram0 0451  
                ??_UART_number 002F                     _ADCON0bits 001F                    __stringbase 0008  
            ?_ADC_init_channel 0070             ??_ADC_init_channel 0070                _ADC_print_burst 050B  
        __size_of_UART_TX_Init 004D            __end_of_UART_Buffer 04C7               __size_of___lldiv 0066  
             __size_of___lwdiv 0044               __size_of___lwmod 003A             __end_of__stringtab 0009  
                   sprintf@val 0029            __end_of_UART_number 050B                ___lwdiv@divisor 0070  
              ___lwdiv@counter 0077                       __ptext10 0461                       __ptext11 0535  
                     __ptext12 04C7               __size_of_sprintf 00E8                   _UART_TX_Init 05E4  
                   _ANChannels 0058                  __size_of_main 005A                       init_ram0 0471  
      ADC_init_channel@channel 0072        __end_of_ADC_print_burst 0535                      sprintf@ap 0026  
                    sprintf@sp 002B               ___lwmod@dividend 007A               ___lldiv@dividend 0074  
                  _UART_Buffer 04AC                      stringcode 0003                    _UART_number 04E8  
                     sprintf@c 002C                       sprintf@f 0020               ___lldiv@quotient 0079  
              ___lwmod@divisor 0078                       strlen@cp 0073                ___lwmod@counter 007D  
                     stringdir 0003                       stringtab 0003                     _UART_Write 0461  
